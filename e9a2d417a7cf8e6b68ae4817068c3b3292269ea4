{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "00e9da39_b46598c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31012
      },
      "writtenOn": "2023-04-21T14:23:28Z",
      "side": 1,
      "message": "This CL resolves the valgrind issues seen after the SIMD improvements done in https://aomedia-review.googlesource.com/c/aom/+/173321. \nIn functions compute_stats_win5_avx2() and compute_stats_win7_avx2(),  256-bits load instruction is used to read data from the ‘dgd’ buffer. When LRU (Loop restoration unit) width is not multiple of 16, the instruction could read uninitialized data. Hence, memset() is done explicitly for an extra row to silence the valgrind issue.",
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48c2d941_ec075fb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-21T17:34:20Z",
      "side": 1,
      "message": "Thanks for fixing it.",
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf834f6_f30b58fb",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1523,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-21T17:34:20Z",
      "side": 1,
      "message": "I don\u0027t know the exact detail here. Just want to ask if this memory allocation in necessary, and if it is possible to directly memset needed memory in loop Restoration unit for simd code?",
      "range": {
        "startLine": 1522,
        "startChar": 2,
        "endLine": 1523,
        "endChar": 80
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b6d262c_f2a1ab70",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1523,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-04-21T19:13:27Z",
      "side": 1,
      "message": "\u003e I don\u0027t know the exact detail here. Just want to ask if this memory allocation in necessary, and if it is possible to directly memset needed memory in loop Restoration unit for simd code?\n\nIn addition to Yunqing\u0027s comment, allocations should always be checked.",
      "parentUuid": "0bf834f6_f30b58fb",
      "range": {
        "startLine": 1522,
        "startChar": 2,
        "endLine": 1523,
        "endChar": 80
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c97bce8_b4f697d3",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1523,
      "author": {
        "id": 31012
      },
      "writtenOn": "2023-04-26T13:53:02Z",
      "side": 1,
      "message": "The improvements made to AVX2 intrinsic is mainly achieved by pre-computing the values in ‘src-avg’ and ‘dgd-avg’ buffers and the same will be used to avoid most of the C operations.\nSize of the buffer is decided based on the worst case requirement i.e., the maximum width and height of the LRU allowed for Wiener filtering.\nWe did not prefer to initialize the whole buffer as the memset was adding overhead to intrinsic speed. With memset, the module level speed up was reduced by 16% and 8% for windows sizes 5 and 7 respectively. However, in order to address a suggestion given by James, the buffer allocation is moved from LRU level to frame level. With this change, we confirmed that the overhead added by memset is negligible. Hence, we have modified the memset as per your suggestion.\nHowever, the buffers are needed to be allocated only in below cases\n1. When AVX2 instruction set is enabled\n* Hence the memory allocation is kept under the HAVE_AVX2 flag.\n2. When Wiener filter is enabled.\n* We will include this change in our subsequent CL where the Wiener filter is enabled for speed 5 and 6.",
      "parentUuid": "0b6d262c_f2a1ab70",
      "range": {
        "startLine": 1522,
        "startChar": 2,
        "endLine": 1523,
        "endChar": 80
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20176524_77843090",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1523,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-26T19:18:47Z",
      "side": 1,
      "message": "Moving the allocation \u0026 memset to frame level makes sense. Looks good.",
      "parentUuid": "3c97bce8_b4f697d3",
      "range": {
        "startLine": 1522,
        "startChar": 2,
        "endLine": 1523,
        "endChar": 80
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8758a280_a3abd61e",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1547,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-21T17:34:20Z",
      "side": 1,
      "message": "What are the cases that call c function? If this is actually called, maybe move this to the top part of this function, so this memory allocation won\u0027t be done?",
      "range": {
        "startLine": 1545,
        "startChar": 4,
        "endLine": 1547,
        "endChar": 54
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1437e76_b60a4468",
        "filename": "av1/encoder/x86/pickrst_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 1547,
      "author": {
        "id": 31012
      },
      "writtenOn": "2023-04-26T13:53:02Z",
      "side": 1,
      "message": "The SIMD support is facilitated for Wiener window sizes 5 \u0026 7 and for other window sizes the C function is invoked. As per our understanding, currently the encoder supports window sizes 5 and 7.",
      "parentUuid": "8758a280_a3abd61e",
      "range": {
        "startLine": 1545,
        "startChar": 4,
        "endLine": 1547,
        "endChar": 54
      },
      "revId": "e9a2d417a7cf8e6b68ae4817068c3b3292269ea4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}