{
  "comments": [
    {
      "key": {
        "uuid": "a8e31fef_de2661ba",
        "filename": "aom_dsp/entcode.c",
        "patchSetId": 12
      },
      "lineNbr": 51,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "It seems strange to me that the internal precision of the Daala EC be stored in a constant outside of the entropy coder.  I don\u0027t see any harm in leaving OD_BITRES in entcode.h and having the accounting software translate this to whatever bit resolution it uses.  After all, it must do this for every entropy coder backend supported.",
      "range": {
        "startLine": 51,
        "startChar": 53,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8dddf5f_b4c58667",
        "filename": "aom_dsp/entcode.c",
        "patchSetId": 12
      },
      "lineNbr": 51,
      "author": {
        "id": 5095
      },
      "writtenOn": "2016-08-23T20:21:56Z",
      "side": 1,
      "message": "OD_BITRES is not used for anything else other than accounting, and you\u0027d expect all xxx_tell_frac methods to use the same precision. This is why I moved it out.",
      "parentUuid": "a8e31fef_de2661ba",
      "range": {
        "startLine": 51,
        "startChar": 53,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_be4b555f",
        "filename": "av1/av1_common.mk",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "The header file should be in the ifeq block below.",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8dddf5f_3f972f3a",
        "filename": "av1/av1_common.mk",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 5095
      },
      "writtenOn": "2016-08-23T20:21:56Z",
      "side": 1,
      "message": "This is on purpose, because the header file defines AOM_ACCT_STR which is used even if accounting is not enabled.",
      "parentUuid": "a8e31fef_be4b555f",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_7e6aadbb",
        "filename": "av1/common/accounting.c",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get a warning on this line when building with --enable-accounting:\n\nav1/common/accounting.c:46:3: warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_9e4e9970",
        "filename": "av1/common/accounting.c",
        "patchSetId": 12
      },
      "lineNbr": 90,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/accounting.c:90:28: error: unknown type name ‘uint32_t’",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_be40b543",
        "filename": "av1/common/accounting.h",
        "patchSetId": 12
      },
      "lineNbr": 43,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/./accounting.h:43:3: error: unknown type name ‘uint32_t’",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 10
      },
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_de3d81be",
        "filename": "av1/common/accounting.h",
        "patchSetId": 12
      },
      "lineNbr": 45,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/./accounting.h:45:3: error: unknown type name ‘uint32_t’",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_1e5b6934",
        "filename": "av1/common/accounting.h",
        "patchSetId": 12
      },
      "lineNbr": 46,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/./accounting.h:46:3: error: unknown type name ‘uint32_t’",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_3e6025da",
        "filename": "av1/common/accounting.h",
        "patchSetId": 12
      },
      "lineNbr": 70,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/./accounting.h:70:3: error: unknown type name ‘uint32_t’",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_5e65f1e8",
        "filename": "av1/common/accounting.h",
        "patchSetId": 12
      },
      "lineNbr": 81,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "I get an error on this line when building with --enable-accounting:\n\nav1/common/./accounting.h:81:28: error: unknown type name ‘uint32_t’",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_7e2f0d8b",
        "filename": "configure",
        "patchSetId": 12
      },
      "lineNbr": 312,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "This only adds the accounting experiment.",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e31fef_5e2a517c",
        "filename": "test/boolcoder_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-08-23T20:07:36Z",
      "side": 1,
      "message": "This does not actually test the bit accounting code.  Can you add a new unit test, that codes a number of symbols and then exercises the bit accounting API to compute totals and ensure that the values coming out make sense.\n\nBonus points if you write it so that it tests more than just the Daala EC backend.",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8dddf5f_7f313751",
        "filename": "test/boolcoder_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 92,
      "author": {
        "id": 5095
      },
      "writtenOn": "2016-08-23T20:21:56Z",
      "side": 1,
      "message": "The AOM_ACCT_STR is needed on all aom_read_xxx calls. To test it I\u0027ll need to build tests with --enable-accounting, which I haven\u0027t figured out how to do yet. I\u0027ll look into it.",
      "parentUuid": "a8e31fef_5e2a517c",
      "revId": "86a912a9d70a77e1f6141600793039eb970d084f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}