diff a/av1/encoder/firstpass.c b/av1/encoder/firstpass.c	(rejected hunks)
@@ -2207,11 +2221,25 @@ static void allocate_gf_group_bits(AV1_COMP *cpi, int64_t gf_group_bits,
       // by (target_frame_size >> 2) as in the original setting. However it
       // does not bring gains for pyramid structure with GF length = 16.
       gf_group->bit_allocation[arf_pos] = target_frame_size;
-#endif
+#if MULTI_LVL_BOOST_AOM_CQ
+      float_t boost_factor = gf_group->pyramid_lvl_nodes[0] / 2.0f;
+      int this_lvl = gf_group->pyramid_level[arf_pos];
+
+      boost_factor /= gf_group->pyramid_lvl_nodes[this_lvl];
+      boost_factor /= (gf_group->pyramid_height - 1);
+
+      gf_group->bit_allocation[arf_pos] +=
+          (int)(target_frame_size * boost_factor);
+#endif  // MULTI_LVL_BOOST_AOM_CQ
+#endif  // USE_SYMM_MULTI_LAYER
     } else {
       assert(gf_group->update_type[frame_index] == LF_UPDATE ||
              gf_group->update_type[frame_index] == INTNL_OVERLAY_UPDATE);
       gf_group->bit_allocation[frame_index] = target_frame_size;
+#if MULTI_LVL_BOOST_AOM_CQ
+      if (cpi->new_bwdref_update_rule == 1)
+        gf_group->bit_allocation[frame_index] -= (target_frame_size >> 1);
+#endif
     }
 
     ++frame_index;
