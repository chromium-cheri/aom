/*
 * Copyright (c) 2017, Alliance for Open Media. All rights reserved
 *
 * This source code is subject to the terms of the BSD 2 Clause License and
 * the Alliance for Open Media Patent License 1.0. If the BSD 2 Clause License
 * was not distributed with this source code in the LICENSE file, you can
 * obtain it at www.aomedia.org/license/software. If the Alliance for Open
 * Media Patent License 1.0 was not distributed with this source code in the
 * PATENTS file, you can obtain it at www.aomedia.org/license/patent.
 */

#ifndef GFT_COEFFICIENTS_H_
#define GFT_COEFFICIENTS_H_

#ifdef __cplusplus
extern "C" {
#endif

static const int32_t klt4_inter[7][16] = {
  { -436, -213, 1439, 2466, -710, 1313, 2138, -1260, 2147, 1852, -79, 586, 1756,
    -1786, 1319, -613 },
  { -872, -425, 2878, 4933, -1420, 2627, 4277, -2520, 4294, 3704, -159, 1171,
    3512, -3572, 2638, -1226 },
  { -1744, -850, 5756, 9865, -2840, 5253, 8553, -5040, 8588, 7407, -317, 2342,
    7025, -7143, 5276, -2451 },
  { -3489, -1700, 11511, 19731, -5680, 10506, 17107, -10079, 17177, 14815, -635,
    4684, 14049, -14287, 10551, -4903 },
  { -6978, -3401, 23022, 39462, -11361, 21012, 34213, -20158, 34354, 29630,
    -1270, 9369, 28099, -28574, 21103, -9805 },
  { -13955, -6801, 46044, 78923, -22722, 42025, 68426, -40317, 68707, 59260,
    -2540, 18737, 56198, -57148, 42205, -19610 },
  { -27911, -13602, 92088, 157846, -45444, 84050, 136852, -80633, 137415,
    118519, -5080, 37475, 112396, -114296, 84411, -39221 },
};

static const int32_t klt8_inter[7][64] = {
  { -2,    24,    154,   253,  111,   811,   2450, 3165, 71,    211,   -106,
    -381,  1392,  3127,  1272, -1801, -181,  75,   478,  -1131, -3117, -263,
    1957,  -1272, 116,   428,  -1369, -3425, -185, 674,  -1160, 1069,  116,
    -1857, -3056, 81,    647,  -1162, 1350,  -614, 3126, 2235,  -366,  -45,
    520,   -968,  744,   -339, 2317,  -1713, -451, 1013, -1685, 1676,  -1166,
    488,   1255,  -2273, 2227, -1589, 1245,  -850, 497,  -174 },
  { -5,    48,    308,   506,  223,   1622,  4900,  6330, 141,   422,   -212,
    -762,  2783,  6253,  2543, -3601, -362,  150,   956,  -2262, -6234, -526,
    3914,  -2543, 232,   855,  -2738, -6850, -369,  1348, -2320, 2138,  232,
    -3714, -6113, 163,   1293, -2323, 2701,  -1228, 6252, 4470,  -731,  -91,
    1040,  -1937, 1487,  -678, 4633,  -3426, -902,  2025, -3370, 3353,  -2331,
    976,   2510,  -4546, 4455, -3178, 2491,  -1699, 994,  -348 },
  { -9,     96,    616,   1012,  445,    3244,  9801,  12659,  282,  844,
    -424,   -1523, 5567,  12506, 5086,   -7202, -724,  301,    1912, -4524,
    -12468, -1053, 7828,  -5086, 464,    1710,  -5476, -13700, -739, 2697,
    -4639,  4275,  464,   -7428, -12225, 326,   2587,  -4647,  5401, -2457,
    12503,  8940,  -1463, -181,  2079,   -3874, 2975,  -1356,  9267, -6853,
    -1804,  4051,  -6740, 6706,  -4663,  1952,  5020,  -9091,  8910, -6355,
    4982,   -3399, 1989,  -697 },
  { -19,   192,    1232,   2023,   891,    6487,  19601, 25318,
    564,   1689,   -849,   -3047,  11134,  25013, 10173, -14404,
    -1447, 601,    3825,   -9048,  -24936, -2106, 15656, -10172,
    928,   3420,   -10953, -27400, -1478,  5394,  -9278, 8550,
    928,   -14855, -24450, 651,    5173,   -9294, 10802, -4913,
    25006, 17879,  -2925,  -362,   4158,   -7747, 5949,  -2713,
    18533, -13705, -3608,  8102,   -13479, 13412, -9325, 3903,
    10040, -18183, 17819,  -12710, 9964,   -6798, 3977,  -1394 },
  { -38,   384,    2463,   4047,   1782,   12975,  39202,  50636,
    1128,  3377,   -1698,  -6094,  22268,  50026,  20345,  -28808,
    -2895, 1202,   7649,   -18096, -49871, -4211,  31312,  -20344,
    1856,  6841,   -21906, -54800, -2955,  10788,  -18556, 17100,
    1857,  -29711, -48900, 1302,   10346,  -18588, 21605,  -9827,
    50013, 35759,  -5850,  -724,   8317,   -15494, 11899,  -5425,
    37066, -27411, -7216,  16204,  -26958, 26824,  -18651, 7806,
    20080, -36365, 35639,  -25421, 19928,  -13596, 7955,   -2788 },
  { -76,    767,    4926,   8094,    3564,   25950,  78404,  101273,
    2257,   6755,   -3395,  -12187,  44535,  100052, 40691,  -57616,
    -5789,  2405,   15298,  -36192,  -99742, -8423,  62623,  -40688,
    3712,   13682,  -43812, -109599, -5911,  21575,  -37112, 34201,
    3713,   -59421, -97800, 2604,    20692,  -37175, 43210,  -19653,
    100026, 71517,  -11700, -1449,   16634,  -30989, 23797,  -10850,
    74133,  -54822, -14432, 32408,   -53916, 53648,  -37302, 15612,
    40161,  -72730, 71278,  -50841,  39855,  -27191, 15910,  -5575 },
  { -152,   1534,    9852,    16187,   7127,    51899,  156808, 202546,
    4513,   13510,   -6791,   -24374,  89071,   200103, 81381,  -115233,
    -11578, 4809,    30596,   -72384,  -199485, -16846, 125246, -81376,
    7424,   27364,   -87623,  -219199, -11822,  43151,  -74224, 68402,
    7426,   -118842, -195601, 5209,    41385,   -74350, 86420,  -39306,
    200051, 143034,  -23401,  -2897,   33268,   -61977, 47594,  -21701,
    148265, -109644, -28863,  64815,   -107833, 107295, -74604, 31225,
    80321,  -145460, 142555,  -101682, 79711,   -54382, 31820,  -11150 },
};

static const int32_t klt4_intra[7][16] = {
  { -447, -434, 1338, 2492, -495, 1424, 2242, -1044, 2222, 1668, -198, 795,
    1734, -1842, 1239, -674 },
  { -894, -867, 2675, 4985, -990, 2848, 4484, -2088, 4444, 3335, -397, 1590,
    3468, -3684, 2477, -1349 },
  { -1787, -1734, 5350, 9969, -1980, 5695, 8967, -4177, 8887, 6671, -793, 3180,
    6937, -7367, 4955, -2697 },
  { -3575, -3469, 10701, 19939, -3961, 11391, 17935, -8354, 17774, 13341, -1586,
    6359, 13874, -14734, 9910, -5394 },
  { -7150, -6938, 21402, 39877, -7922, 22782, 35869, -16707, 35549, 26682,
    -3172, 12718, 27747, -29469, 19819, -10789 },
  { -14299, -13875, 42804, 79755, -15843, 45563, 71738, -33415, 71098, 53365,
    -6344, 25436, 55494, -58937, 39638, -21577 },
  { -28599, -27750, 85607, 159509, -31686, 91126, 143476, -66830, 142195,
    106730, -12688, 50872, 110988, -117875, 79276, -43154 },
};

static const int32_t klt8_intra[7][64] = {
  { 9,     24,    -42,   237,   1253,  2213,  2459,  2051, 73,    -258,  -238,
    1033,  2662,  1605,  -1088, -2176, 28,    -236,  224,  2259,  1574,  -1933,
    -1010, 2081,  -114,  -998,  -2501, -2186, 874,   170,  -1503, 1297,  1543,
    2846,  1287,  -1110, 520,   612,   -1429, 850,   2993, 531,   -1954, 467,
    196,   -1042, 1356,  -734,  2075,  -2010, 649,   914,  -1511, 1626,  -1333,
    688,   1056,  -1799, 2126,  -1868, 1512,  -1197, 783,  -295 },
  { 18,    47,    -85,   473,   2507,  4426,  4917,  4102, 146,   -516,  -475,
    2065,  5325,  3210,  -2176, -4352, 56,    -472,  448,  4517,  3148,  -3867,
    -2020, 4163,  -228,  -1996, -5003, -4371, 1748,  340,  -3006, 2594,  3085,
    5693,  2573,  -2219, 1039,  1225,  -2858, 1700,  5986, 1062,  -3908, 933,
    391,   -2084, 2712,  -1469, 4149,  -4020, 1297,  1829, -3021, 3252,  -2665,
    1377,  2111,  -3598, 4252,  -3737, 3023,  -2394, 1565, -590 },
  { 36,    95,    -170,  946,   5014,  8852,  9835,   8203,  293,   -1031,
    -951,  4131,  10650, 6420,  -4353, -8703, 113,    -944,  896,   9035,
    6297,  -7734, -4039, 8326,  -456,  -3991, -10005, -8743, 3497,  679,
    -6013, 5188,  6171,  11385, 5146,  -4438, 2079,   2450,  -5716, 3399,
    11973, 2124,  -7815, 1866,  783,   -4167, 5423,   -2938, 8299,  -8040,
    2595,  3657,  -6042, 6504,  -5331, 2754,  4223,   -7195, 8503,  -7473,
    6047,  -4788, 3131,  -1180 },
  { 72,    189,    -340,   1893,   10028,  17703,  19669,  16406,
    585,   -2062,  -1901,  8261,   21299,  12839,  -8705,  -17407,
    226,   -1887,  1792,   18070,  12594,  -15468, -8078,  16652,
    -911,  -7983,  -20010, -17486, 6993,   1359,   -12026, 10376,
    12342, 22771,  10292,  -8877,  4158,   4899,   -11432, 6799,
    23946, 4248,   -15630, 3733,   1566,   -8334,  10846,  -5875,
    16598, -16079, 5189,   7315,   -12085, 13009,  -10662, 5508,
    8445,  -14390, 17007,  -14946, 12093,  -9576,  6261,   -2360 },
  { 144,   378,    -680,   3785,   20055,  35406,  39339,  32813,
    1170,  -4124,  -3803,  16523,  42598,  25679,  -17411, -34813,
    451,   -3774,  3585,   36140,  25187,  -30936, -16157, 33304,
    -1822, -15965, -40020, -34972, 13987,  2717,   -24051, 20751,
    24683, 45542,  20584,  -17753, 8316,   9798,   -22864, 13597,
    47891, 8496,   -31260, 7466,   3131,   -16668, 21692,  -11751,
    33196, -32158, 10379,  14630,  -24170, 26017,  -21323, 11016,
    16890, -28780, 34014,  -29893, 24187,  -19152, 12523,  -4720 },
  { 287,   757,    -1360,  7571,   40110,  70813,  78678,  65625,
    2340,  -8249,  -7606,  33045,  85197,  51358,  -34822, -69627,
    902,   -7548,  7169,   72279,  50374,  -61872, -32313, 66608,
    -3644, -31930, -80041, -69944, 27973,  5435,   -48102, 41503,
    49366, 91083,  41168,  -35506, 16631,  19597,  -45727, 27194,
    95783, 16992,  -62520, 14931,  6263,   -33337, 43384,  -23501,
    66391, -64316, 20758,  29260,  -48340, 52035,  -42646, 22032,
    33780, -57561, 68027,  -59786, 48373,  -38303, 25046,  -9440 },
  { 574,    1513,    -2719,   15141,   80220,  141625,  157355, 131250,
    4681,   -16498,  -15212,  66091,   170393, 102715,  -69644, -139253,
    1804,   -15096,  14338,   144559,  100748, -123744, -64626, 133215,
    -7288,  -63861,  -160082, -139888, 55947,  10869,   -96204, 83005,
    98732,  182167,  82337,   -71012,  33262,  39194,   -91455, 54388,
    191565, 33984,   -125041, 29863,   12525,  -66674,  86769,  -47003,
    132782, -128632, 41516,   58520,   -96680, 104070,  -85293, 44063,
    67560,  -115121, 136054,  -119571, 96747,  -76607,  50092,  -18879 },
};

static const int ddt_bit_min = 10;
static const int ddt_bit_max = 16;

static INLINE const int32_t *ddt4_arr(int is_inter, int n) {
  return is_inter ? klt4_inter[n - ddt_bit_min] : klt4_intra[n - ddt_bit_min];
}

static INLINE const int32_t *ddt8_arr(int is_inter, int n) {
  return is_inter ? klt8_inter[n - ddt_bit_min] : klt8_intra[n - ddt_bit_min];
}

#ifdef __cplusplus
}
#endif

#endif  // GFT_COEFFICIENTS_H_
