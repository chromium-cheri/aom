/*
 * Copyright (c) 2017, Alliance for Open Media. All rights reserved
 *
 * This source code is subject to the terms of the BSD 2 Clause License and
 * the Alliance for Open Media Patent License 1.0. If the BSD 2 Clause License
 * was not distributed with this source code in the LICENSE file, you can
 * obtain it at www.aomedia.org/license/software. If the Alliance for Open
 * Media Patent License 1.0 was not distributed with this source code in the
 * PATENTS file, you can obtain it at www.aomedia.org/license/patent.
 */

#ifndef GFT_COEFFICIENTS_H_
#define GFT_COEFFICIENTS_H_

#ifdef __cplusplus
extern "C" {
#endif

static const int32_t gft4[7][16] = {
  { 0, 3, 1290, 2593, 0, 7, 2593, -1290,
    2896, 17, 0, 0, 17, -2896, 8, 0 },
  { 0, 6, 2580, 5187, 0, 14, 5186, -2580,
    5793, 33, 0, 0, 33, -5793, 16, -1 },
  { 0, 13, 5159, 10373, 0, 29, 10373, -5159,
    11585, 67, 0, 0, 67, -11585, 31, -1 },
  { 0, 26, 10318, 20746, 0, 57, 20746, -10318,
    23170, 133, -1, 0, 133, -23170, 63, -2 },
  { 0, 52, 20637, 41492, 1, 115, 41492, -20637,
    46340, 267, -1, 0, 267, -46340, 126, -5 },
  { 0, 103, 41274, 82984, 1, 230, 82984, -41274,
    92680, 533, -3, 0, 533, -92680, 252, -10 },
  { 1, 207, 82548, 165969, 2, 459, 165968, -82548,
    185361, 1066, -5, 0, 1066, -185360, 503, -19 },
};

static const int32_t gft8[7][64] = {
  { 26, 211, 151, 242, 602, 1178, 2285, 3111,
    64, 378, 35, -56, 2414, 2670, 480, -1855,
    -41, -13, 214, -177, -2139, 136, 2969, -1814,
    -73, 519, -118, 108, -2449, 2790, -1557, 524,
    7, 1392, 50, 3825, -11, -329, 50, -305,
    -25, -3792, -45, 1428, -57, 592, -25, -46,
    115, -55, 4084, -27, -5, 18, -290, 14,
    4093, -21, -116, 3, -106, 6, -12, 0 },
  { 51, 422, 301, 485, 1204, 2356, 4571, 6222,
    127, 756, 70, -112, 4828, 5340, 961, -3709,
    -81, -26, 427, -353, -4278, 272, 5937, -3628,
    -146, 1038, -236, 216, -4898, 5579, -3113, 1047,
    13, 2783, 101, 7651, -22, -658, 101, -611,
    -49, -7584, -90, 2855, -114, 1184, -50, -93,
    230, -110, 8167, -55, -10, 36, -580, 29,
    8186, -43, -233, 6, -213, 11, -24, 1 },
  { 103, 844, 602, 970, 2407, 4712, 9142, 12443,
    254, 1512, 140, -224, 9655, 10680, 1922, -7418,
    -163, -51, 854, -707, -8557, 544, 11875, -7256,
    -291, 2075, -471, 432, -9796, 11159, -6226, 2094,
    26, 5567, 202, 15302, -44, -1315, 202, -1222,
    -98, -15168, -180, 5710, -229, 2368, -100, -186,
    459, -220, 16334, -110, -21, 71, -1159, 58,
    16372, -86, -466, 11, -425, 23, -48, 2 },
  { 205, 1688, 1205, 1940, 4814, 9425, 18284, 24887,
    508, 3024, 281, -448, 19310, 21360, 3843, -14837,
    -325, -102, 1709, -1413, -17114, 1088, 23749, -14513,
    -583, 4151, -943, 864, -19592, 22318, -12453, 4188,
    52, 11134, 403, 30603, -89, -2630, 404, -2444,
    -196, -30337, -361, 11421, -457, 4736, -201, -371,
    919, -440, 32669, -220, -42, 142, -2319, 116,
    32743, -172, -931, 22, -850, 46, -97, 3 },
  { 410, 3376, 2410, 3879, 9628, 18850, 36567, 49773,
    1017, 6048, 561, -897, 38621, 42721, 7687, -29673,
    -651, -204, 3417, -2826, -34228, 2177, 47498, -29025,
    -1165, 8301, -1886, 1727, -39184, 44636, -24905, 8376,
    104, 22267, 806, 61206, -177, -5260, 808, -4887,
    -392, -60674, -722, 22841, -914, 9472, -402, -742,
    1838, -881, 65337, -439, -84, 284, -4637, 231,
    65486, -344, -1863, 44, -1700, 92, -193, 7 },
  { 820, 6752, 4819, 7758, 19257, 37699, 73135, 99546,
    2034, 12097, 1122, -1794, 77242, 85442, 15373, -59346,
    -1301, -408, 6834, -5653, -68456, 4353, 94997, -58050,
    -2330, 16602, -3771, 3454, -78368, 89272, -49810, 16753,
    208, 44535, 1612, 122413, -355, -10521, 1616, -9775,
    -785, -121348, -1443, 45682, -1828, 18944, -803, -1484,
    3676, -1762, 130675, -879, -168, 569, -9275, 462,
    130972, -687, -3725, 88, -3400, 183, -386, 13 },
  { 1640, 13503, 9639, 15517, 38514, 75399, 146269, 199092,
    4068, 24193, 2245, -3588, 154484, 170884, 30746, -118692,
    -2602, -817, 13669, -11305, -136911, 8707, 189994, -116100,
    -4661, 33204, -7542, 6909, -156735, 178544, -99620, 33505,
    417, 89069, 3225, 244826, -709, -21042, 3231, -19550,
    -1569, -242695, -2886, 91364, -3657, 37887, -1606, -2968,
    7352, -3523, 261350, -1758, -335, 1137, -18550, 925,
    261945, -1374, -7451, 176, -6800, 366, -773, 27 },
};

static const int32_t klt4[7][16] = {
  { -262, -371, 1188, 2602, -547, 229, 2570, -1196,
    2465, 1418, 501, 222, 1394, -2488, 345, -372 },
  { -525, -742, 2377, 5204, -1094, 459, 5140, -2393,
    4931, 2835, 1003, 444, 2787, -4975, 691, -744 },
  { -1049, -1485, 4754, 10408, -2187, 918, 10281, -4785,
    9862, 5670, 2005, 887, 5574, -9951, 1381, -1489 },
  { -2099, -2969, 9507, 20815, -4375, 1835, 20561, -9570,
    19724, 11341, 4010, 1775, 11149, -19902, 2763, -2977 },
  { -4197, -5939, 19014, 41630, -8750, 3671, 41123, -19141,
    39448, 22681, 8021, 3550, 22298, -39803, 5526, -5954 },
  { -8395, -11878, 38028, 83260, -17499, 7342, 82245, -38282,
    78895, 45362, 16041, 7099, 44596, -79607, 11052, -11908 },
  { -16789, -23756, 76057, 166520, -34998, 14683, 164491, -76564,
    157791, 90724, 32083, 14198, 89191, -159213, 22104, -23816 },
};

static const int32_t klt8[7][64] = {
  { 2, 230, 8, 67, 886, 2124, 2331, 2447,
    19, 304, -166, -234, 1677, 2691, -474, -2514,
    -39, -108, 413, -446, -2445, 268, 2638, -1840,
    -145, 819, -78, 157, -2650, 2089, -1952, 925,
    1, -1374, -430, -3784, -51, 187, -380, 452,
    -279, -3487, -1360, 1465, -367, 630, -106, -21,
    -152, -1354, 3813, 136, 146, 371, -431, 147,
    4081, -262, 51, 108, -146, 120, -67, 30 },
  { 4, 460, 16, 133, 1772, 4249, 4663, 4894,
    38, 608, -332, -468, 3354, 5383, -947, -5029,
    -78, -217, 825, -893, -4890, 536, 5276, -3680,
    -291, 1637, -157, 315, -5300, 4179, -3905, 1850,
    2, -2747, -860, -7568, -102, 374, -761, 904,
    -558, -6974, -2721, 2929, -735, 1260, -212, -42,
    -304, -2709, 7625, 272, 293, 742, -862, 293,
    8162, -524, 102, 216, -291, 240, -133, 60 },
  { 9, 919, 33, 267, 3544, 8497, 9326, 9787,
    77, 1215, -664, -936, 6709, 10765, -1894, -10057,
    -155, -434, 1651, -1786, -9780, 1072, 10552, -7360,
    -581, 3275, -313, 630, -10599, 8358, -7810, 3700,
    3, -5495, -1719, -15136, -204, 748, -1522, 1809,
    -1115, -13949, -5441, 5859, -1469, 2520, -423, -83,
    -608, -5417, 15250, 543, 586, 1483, -1724, 587,
    16323, -1047, 204, 433, -582, 480, -267, 120 },
  { 18, 1838, 65, 533, 7088, 16995, 18651, 19575,
    154, 2430, -1327, -1871, 13418, 21531, -3788, -20115,
    -310, -868, 3302, -3571, -19559, 2144, 21104, -14720,
    -1162, 6549, -627, 1259, -21198, 16716, -15620, 7400,
    6, -10990, -3438, -30272, -408, 1496, -3043, 3617,
    -2230, -27897, -10882, 11717, -2939, 5040, -846, -166,
    -1215, -10834, 30500, 1086, 1171, 2966, -3448, 1174,
    32647, -2095, 408, 866, -1165, 959, -533, 239 },
  { 35, 3677, 131, 1067, 14175, 33989, 37302, 39149,
    308, 4861, -2655, -3742, 26836, 43061, -7577, -40229,
    -621, -1735, 6604, -7142, -39119, 4288, 42209, -29440,
    -2325, 13098, -1254, 2519, -42397, 33431, -31240, 14800,
    12, -21980, -6877, -60544, -816, 2992, -6087, 7235,
    -4461, -55795, -21765, 23434, -5878, 10080, -1692, -332,
    -2431, -21668, 61001, 2173, 2343, 5932, -6897, 2347,
    65294, -4189, 816, 1732, -2330, 1918, -1067, 479 },
  { 70, 7353, 262, 2134, 28351, 67978, 74604, 78298,
    616, 9721, -5309, -7485, 53671, 86122, -15154, -80458,
    -1241, -3471, 13207, -14284, -78238, 8577, 84417, -58880,
    -4649, 26197, -2508, 5038, -84793, 66862, -62480, 29600,
    24, -43959, -13753, -121088, -1632, 5983, -12173, 14469,
    -8921, -111590, -43529, 46869, -11756, 20160, -3385, -664,
    -4862, -43337, 122001, 4346, 4686, 11864, -13794, 4694,
    130588, -8379, 1632, 3464, -4659, 3837, -2133, 958 },
  { 141, 14707, 523, 4267, 56701, 135956, 149209, 156596,
    1232, 19443, -10619, -14969, 107342, 172245, -30307, -160916,
    -2483, -6941, 26414, -28569, -156475, 17154, 168834, -117760,
    -9298, 52394, -5015, 10076, -169586, 133724, -124960, 59200,
    49, -87918, -27506, -242176, -3263, 11966, -24346, 28938,
    -17842, -223180, -87059, 93737, -23512, 40319, -6770, -1328,
    -9723, -86673, 244002, 8691, 9371, 23728, -27587, 9389,
    261175, -16757, 3264, 6928, -9319, 7674, -4266, 1916 },
};

static const int32_t lgt4[7][16] = {
  { 0, 3, 1290, 2593, 0, 7, 2593, -1290,
    2896, 17, 0, 0, 17, -2896, 8, 0 },
  { 0, 6, 2580, 5186, 0, 14, 5186, -2580,
    5793, 33, 0, 0, 33, -5793, 16, -1 },
  { 0, 13, 5159, 10373, 0, 29, 10373, -5159,
    11585, 67, 0, 0, 67, -11585, 31, -1 },
  { 0, 26, 10319, 20746, 0, 57, 20746, -10319,
    23170, 133, -1, 0, 133, -23170, 63, -2 },
  { 0, 52, 20637, 41492, 1, 115, 41492, -20637,
    46340, 266, -1, 0, 266, -46340, 126, -5 },
  { 0, 103, 41275, 82984, 1, 230, 82984, -41275,
    92680, 533, -3, 0, 533, -92680, 252, -10 },
  { 1, 207, 82549, 165968, 2, 459, 165967, -82549,
    185361, 1066, -5, 0, 1066, -185360, 503, -19 },
};

static const int32_t lgt8[7][64] = {
  { 0, 0, 1, 22, 992, 2154, 2347, 2376,
    0, 0, 2, 41, 1760, 2555, -415, -2641,
    0, 0, -2, -59, -2162, -32, 2895, -1928,
    0, 0, -4, -86, -2829, 2369, -1647, 663,
    -5, -122, -358, -4077, 113, -12, 1, 0,
    -214, -4031, -674, 180, -4, 0, 0, 0,
    -60, -684, 4024, -333, 5, 0, 0, 0,
    4090, -221, 23, -1, 0, 0, 0, 0 },
  { 0, 0, 2, 43, 1984, 4307, 4695, 4752,
    0, 0, 3, 82, 3521, 5110, -830, -5282,
    0, 0, -5, -118, -4325, -64, 5790, -3856,
    0, -1, -8, -172, -5659, 4737, -3295, 1326,
    -11, -244, -716, -8154, 227, -24, 2, 0,
    -429, -8061, -1348, 360, -8, 1, 0, 0,
    -120, -1369, 8048, -666, 9, -1, 0, 0,
    8180, -443, 47, -2, 0, 0, 0, 0 },
  { 0, 0, 3, 87, 3968, 8614, 9390, 9503,
    0, 0, 6, 165, 7042, 10220, -1660, -10565,
    0, -1, -10, -236, -8649, -128, 11579, -7712,
    0, -1, -15, -343, -11318, 9474, -6590, 2652,
    -22, -488, -1433, -16308, 454, -48, 4, 0,
    -857, -16122, -2695, 720, -15, 1, 0, 0,
    -241, -2738, 16097, -1331, 18, -1, 0, 0,
    16360, -886, 94, -4, 0, 0, 0, 0 },
  { 0, 0, 6, 173, 7936, 17228, 18780, 19007,
    0, 1, 13, 330, 14083, 20440, -3320, -21130,
    0, -2, -20, -473, -17298, -256, 23159, -15424,
    0, -3, -30, -687, -22636, 18949, -13180, 5304,
    -44, -976, -2865, -32615, 908, -97, 8, -1,
    -1714, -32244, -5390, 1440, -30, 3, 0, 0,
    -482, -5475, 32194, -2663, 37, -2, 0, 0,
    32720, -1771, 188, -8, 0, 0, 0, 0 },
  { 0, 1, 13, 347, 15872, 34456, 37559, 38013,
    0, 2, 25, 659, 28167, 40880, -6641, -42260,
    0, -3, -40, -945, -34596, -512, 46318, -30847,
    0, -6, -61, -1374, -45271, 37898, -26360, 10608,
    -88, -1952, -5731, -65230, 1815, -194, 16, -1,
    -3428, -64488, -10780, 2880, -61, 5, 0, 0,
    -963, -10950, 64388, -5326, 73, -4, 0, 0,
    65439, -3542, 375, -15, 0, 0, 0, 0 },
  { 0, 2, 26, 693, 31743, 68912, 75118, 76027,
    0, 4, 51, 1318, 56334, 81760, -13281, -84519,
    0, -7, -79, -1891, -69193, -1023, 92636, -61694,
    0, -11, -121, -2747, -90542, 75796, -52719, 21215,
    -176, -3904, -11462, -130460, 3630, -388, 32, -3,
    -6857, -128976, -21561, 5759, -121, 10, -1, 0,
    -1927, -21900, 128775, -10652, 146, -8, 0, 0,
    130878, -7085, 751, -30, 0, 0, 0, 0 },
  { 0, 4, 52, 1386, 63487, 137824, 150237, 152054,
    0, 8, 102, 2637, 112667, 163521, -26563, -169039,
    0, -14, -159, -3782, -138386, -2046, 185272, -123389,
    -1, -22, -243, -5494, -181085, 151592, -105438, 42430,
    -351, -7807, -22923, -260921, 7260, -776, 65, -6,
    -13713, -257952, -43121, 11519, -242, 20, -1, 0,
    -3854, -43801, 257550, -21303, 292, -16, 1, 0,
    261756, -14169, 1502, -60, 1, 0, 0, 0 },
};

static const int ddt_bit_min = 10;
static const int ddt_bit_max = 16;

static INLINE const int32_t *ddt4_arr(int n) {
  if (USE_KLT)
    return klt4[n - ddt_bit_min];
  else if (USE_GFT)
    return gft4[n - ddt_bit_min];
  else if (USE_LGT)
    return lgt4[n - ddt_bit_min];
  assert(0);
}

static INLINE const int32_t *ddt8_arr(int n) {
  if (USE_KLT)
    return klt8[n - ddt_bit_min];
  else if (USE_GFT)
    return gft8[n - ddt_bit_min];
  else if (USE_LGT)
    return lgt8[n - ddt_bit_min];
  assert(0);
}

#ifdef __cplusplus
}
#endif

#endif  // GFT_COEFFICIENTS_H_
