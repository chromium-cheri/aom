{
  "comments": [
    {
      "key": {
        "uuid": "412b2e52_2c26b133",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 646,
      "author": {
        "id": 5022
      },
      "writtenOn": "2019-09-20T21:56:38Z",
      "side": 1,
      "message": "what happens we extend GOP length to 32 ?",
      "range": {
        "startLine": 646,
        "startChar": 66,
        "endLine": 646,
        "endChar": 67
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b3bfade_1432d8e2",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 646,
      "author": {
        "id": 6585
      },
      "writtenOn": "2019-09-21T01:04:04Z",
      "side": 1,
      "message": "GOP length of 32 is not supported yet.\nWe may need to make changes to the table if we have more arf layers.",
      "parentUuid": "412b2e52_2c26b133",
      "range": {
        "startLine": 646,
        "startChar": 66,
        "endLine": 646,
        "endChar": 67
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3ff9421_95097feb",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 1172,
      "author": {
        "id": 5022
      },
      "writtenOn": "2019-09-20T21:56:38Z",
      "side": 1,
      "message": "the recent interface changes were meant to limit the scope of data structure.\n\nI would prefer not to directly call through cpi, but through local data structure for gop configuration.",
      "range": {
        "startLine": 1172,
        "startChar": 25,
        "endLine": 1172,
        "endChar": 29
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "956515c7_5de9b2dd",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 1172,
      "author": {
        "id": 6585
      },
      "writtenOn": "2019-09-21T01:04:04Z",
      "side": 1,
      "message": "This function doesn\u0027t need cpi. But Hui\u0027s change of \"adjust_boost_bits_for_target_level\" puts level information in cpi. That\u0027s why we pass cpi in.\n\nWe need to extract level information out from cpi first.",
      "parentUuid": "d3ff9421_95097feb",
      "range": {
        "startLine": 1172,
        "startChar": 25,
        "endLine": 1172,
        "endChar": 29
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbbbb1f8_e556164c",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 1172,
      "author": {
        "id": 5022
      },
      "writtenOn": "2019-09-21T03:09:26Z",
      "side": 1,
      "message": "How about to extract it outside this scope, rather treat it as a hard limit at higher level. then only pass in the limit values to adjust the bit allocation.",
      "parentUuid": "956515c7_5de9b2dd",
      "range": {
        "startLine": 1172,
        "startChar": 25,
        "endLine": 1172,
        "endChar": 29
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09cf2392_71c4b592",
        "filename": "test/gf_max_pyr_height_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5022
      },
      "writtenOn": "2019-09-20T21:56:38Z",
      "side": 1,
      "message": "why such a big drop?",
      "range": {
        "startLine": 24,
        "startChar": 7,
        "endLine": 24,
        "endChar": 12
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0327a3b_771284a5",
        "filename": "test/gf_max_pyr_height_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 6585
      },
      "writtenOn": "2019-09-21T01:04:04Z",
      "side": 1,
      "message": "The calculation of arf boost now changes.\nWhen layer height is 0, the actual arf boost is smaller than before. So the psnr drops.\n\nI assume layer height \u003d 0 is not practical. Is it?",
      "parentUuid": "09cf2392_71c4b592",
      "range": {
        "startLine": 24,
        "startChar": 7,
        "endLine": 24,
        "endChar": 12
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab6cffc1_9c7cbe6a",
        "filename": "test/gf_max_pyr_height_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5022
      },
      "writtenOn": "2019-09-21T03:09:26Z",
      "side": 1,
      "message": "It is effectively no delay encoding, which is important for live encoding setting i suppose?\n\nif the layer is 0, that means you won\u0027t use ARF, how would this get changed given the scope of this change is to re-distribute the bits within arf group? GF usually is assigned outside.",
      "parentUuid": "b0327a3b_771284a5",
      "range": {
        "startLine": 24,
        "startChar": 7,
        "endLine": 24,
        "endChar": 12
      },
      "revId": "c4251c908bde342605878de30c618f45b9992936",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}