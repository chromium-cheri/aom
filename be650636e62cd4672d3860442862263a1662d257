{
  "comments": [
    {
      "key": {
        "uuid": "787560f2_11c9e968",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "Nit: I suggest adding a blank line to separate the C/C++ system headers from the other headers, and sorting the other headers in alphabetical order as follows:\n\n#include \u003ccstdio\u003e\t\n#include \u003ccstdlib\u003e\n#include \u003cstring\u003e\n\n#include \"aom_mem/aom_mem.h\"\n#include \"test/codec_factory.h\"\t\n#include \"test/encode_test_driver.h\"\n#include \"test/i420_video_source.h\"\n#include \"test/md5_helper.h\"\n#include \"test/util.h\"\n#include \"third_party/googletest/src/googletest/include/gtest/gtest.h\"\n\nPlease see the Style Guide:\nhttps://google.github.io/styleguide/cppguide.html#Names_and_Order_of_Includes",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "119d8a8e_ac9ae16b",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "787560f2_11c9e968",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89ab05dd_8efd3afe",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "Nit: In C++ code, we can define this as a constant. Let\u0027s also move it into the unnamed namespace, as follows:\n\nnamespace {\n\nconstexpr int kMaxNumThreadsMinus1 \u003d 7;\n\nclass AV1DecodeMultiThreadedTest\n...",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 33
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea512222_580937a5",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "I have not used \"constexpr\" as it requires a C++11 capable compiler.",
      "parentUuid": "89ab05dd_8efd3afe",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 33
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d87d7be8_380eab8d",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "Nit: It seems that the for loop should not be nested inside the if statement for single_thread_dec_-\u003eIsAV1(). Should we rewrite this as follows?\n\n    if (single_thread_dec_-\u003eIsAV1()) {\n      single_thread_dec_-\u003eControl(AV1_SET_DECODE_TILE_ROW, -1);\n      single_thread_dec_-\u003eControl(AV1_SET_DECODE_TILE_COL, -1);\n    }\n    for (int t \u003d 0; t \u003c MAX_NUM_THREADS_MINUS_1; ++t) {\t\n      if (multi_thread_dec_[t]-\u003eIsAV1()) {\t\n        multi_thread_dec_[t]-\u003eControl(AV1_SET_DECODE_TILE_ROW, -1);\t\n        multi_thread_dec_[t]-\u003eControl(AV1_SET_DECODE_TILE_COL, -1);\n      }\t\n    }",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93cbe482_39caed18",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d87d7be8_380eab8d",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc655045_2bfa4c1e",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "BUG: The order should be timebase.num, timebase.den. Here is the prototype of the libaom_test::I420VideoSource constructor:\n\nI420VideoSource(const std::string \u0026file_name, unsigned int width,\n                  unsigned int height, int rate_numerator, int rate_denominator,\n                  unsigned int start, int limit)",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7461ecf6_eb03faa7",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "We feel this is not a bug. The video-\u003etimebase() function in the file encode_test_driver.cc swaps the numerator and denominator. Following is the definition : \n\nvirtual aom_rational_t timebase() const {\n  const aom_rational_t t \u003d { framerate_denominator_, framerate_numerator_ };\n  return t;\n}",
      "parentUuid": "cc655045_2bfa4c1e",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01d85ef6_deaf7db5",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-25T16:27:18Z",
      "side": 1,
      "message": "Deepa: You are right! The constructor arguments are the numerator and denominator of the frame rate, not the timebase. I am very sorry for my confusion.",
      "parentUuid": "7461ecf6_eb03faa7",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 108,
        "endChar": 65
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a89dd551_45503e5a",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "Nit: I suggest defining one data member in each declaration:\n\n  ::libaom_test::MD5 md5_single_thread_;\n  ::libaom_test::MD5 md5_multi_thread_[MAX_NUM_THREADS_MINUS_1];\n  ::libaom_test::Decoder *single_thread_dec_;\n  ::libaom_test::Decoder *multi_thread_dec_[MAX_NUM_THREADS_MINUS_1];\n\nNote that the Style Guide disallows the second declaration at lines 121-122 because the data members are pointers:\n\n\"It is allowed (if unusual) to declare multiple variables in the same declaration, but it is disallowed if any of those have pointer or reference decorations. Such declarations are easily misread.\"\n\nPlease see the Style Guide:\nhttps://google.github.io/styleguide/cppguide.html#Pointer_and_Reference_Expressions",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 122,
        "endChar": 50
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf1f2117_5f5a5dba",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a89dd551_45503e5a",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 122,
        "endChar": 50
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f89669d8_1ea2099e",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-24T17:17:09Z",
      "side": 1,
      "message": "IMPORTANT: This test is exactly the same as AV1DecodeMultiThreadedTest.MD5Match. Is this right?",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 150,
        "endChar": 1
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1726d80_7cc0a877",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-25T12:07:03Z",
      "side": 1,
      "message": "The tests are not exactly the same. Do you mean that highlighted code can be abstracted?\n\nAV1DecodeMultiThreadedTestLarge.MD5Match encodes with cpu-used as 0, whereas AV1DecodeMultiThreadedTest.MD5Match encodes with cpu-used 3. \n\nAV1DecodeMultiThreadedTestLarge tests for tile-columns : 1,2,4,64 and tile_rows :1,2,4,64 and number of tile-groups : 1, 4.\n\nAV1DecodeMultiThreadedTestLarge tests for tile-columns : 2,4 and tile_rows :2,4 and number of tile-groups : 1",
      "parentUuid": "f89669d8_1ea2099e",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 150,
        "endChar": 1
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f66a401_a672f9bf",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-04-25T16:27:18Z",
      "side": 1,
      "message": "I means the code at lines 135-139 and the code at lines 145-149 are exactly the same. Therefore, I am wondering if we can get rid of the AV1DecodeMultiThreadedTestLarge class and just do:\n\nAV1_INSTANTIATE_TEST_CASE(AV1DecodeMultiThreadedTest,\n                          ::testing::Values(0, 1, 2, 6),\n                          ::testing::Values(0, 1, 2, 6),\n                          ::testing::Values(1, 4), ::testing::Values(0));\n\nWhat do you think?",
      "parentUuid": "e1726d80_7cc0a877",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 150,
        "endChar": 1
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "004b5959_5c3c8a6f",
        "filename": "test/decode_multithreaded_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-04-26T08:58:32Z",
      "side": 1,
      "message": "It was suggested by Yunqing to split the test cases as above. Please refer to her comments on patchset 1. As per our understanding \"Large\" tests do exhaustive tests compared to tests that do not have the keyword \"Large\" in them.",
      "parentUuid": "2f66a401_a672f9bf",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 150,
        "endChar": 1
      },
      "revId": "be650636e62cd4672d3860442862263a1662d257",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}