{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b530037b_0c1bcc4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-09-20T16:12:44Z",
      "side": 1,
      "message": "The script looks good to me.\n\n@marpan@google.com: could you check if RTC test is good?",
      "revId": "a51741d54c467b04648e07be5c94d192a834891d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c67e2ef_f83ab591",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2023-09-20T17:03:23Z",
      "side": 1,
      "message": "RTC test looks good.",
      "parentUuid": "b530037b_0c1bcc4c",
      "revId": "a51741d54c467b04648e07be5c94d192a834891d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3230c16_fff03a9d",
        "filename": "test/examples.sh",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-09-20T16:12:44Z",
      "side": 1,
      "message": "Without adding this, this test will be ran automatically in Jenkins? If so, maybe that is what we want?",
      "range": {
        "startLine": 18,
        "startChar": 59,
        "endLine": 18,
        "endChar": 80
      },
      "revId": "a51741d54c467b04648e07be5c94d192a834891d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75b8e123_69b142e1",
        "filename": "test/examples.sh",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 31022
      },
      "writtenOn": "2023-09-21T10:25:21Z",
      "side": 1,
      "message": "Yes, without adding this, the test will be run whenever example.sh is executed, i.e., for  https://build.aomedia.org/jenkins/job/libaom__example_test-multi-target/ and  https://build.aomedia.org/jenkins/job/libaom__nightly_optimization-levels/. \n\nThese jenkins tests are run for various targets such as generic-gnu, x86-linux-gcc, x86-linux-asan, x86_64-linux-gcc, x86_64-linux-valgrind, realtime-only and with different SIMD optimizations disabled. Thus, as per our understanding, including C vs SIMD match tests in example.sh would run the test repeatedly for each of the platforms/configurations.\n\nThe av1_c_vs_simd_encode.sh script generates the binaries and tests the C vs SIMD match for x86 (32 bit and 64 bit) and ARM platforms and it would be good if this test is separately enabled in Jenkins.",
      "parentUuid": "b3230c16_fff03a9d",
      "range": {
        "startLine": 18,
        "startChar": 59,
        "endLine": 18,
        "endChar": 80
      },
      "revId": "a51741d54c467b04648e07be5c94d192a834891d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d77f40d_1c537b06",
        "filename": "test/examples.sh",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-09-21T16:48:23Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "75b8e123_69b142e1",
      "range": {
        "startLine": 18,
        "startChar": 59,
        "endLine": 18,
        "endChar": 80
      },
      "revId": "a51741d54c467b04648e07be5c94d192a834891d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "a51741d54c467b04648e07be5c94d192a834891d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "a51741d54c467b04648e07be5c94d192a834891d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "a51741d54c467b04648e07be5c94d192a834891d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}