{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6b732e5d_4b516efd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2022-08-02T12:16:27Z",
      "side": 1,
      "message": "Hi James,\n\nAs you pointed out in the patch (https://aomedia-review.googlesource.com/c/aom/+/155366/4/aom_dsp/aom_dsp_rtcd_defs.pl#1126), the function aom_hadamard_8x8_dual() is specific to low bit depth. Hence, for better readability this CL renames aom_hadamard_8x8_dual() to aom_hadamard_lp_8x8_dual().\n\nEven though aom_hadamard_8x8_dual() is called for an 8x16 block, intrinsic is implemented such that hadamard txfm is performed at 8x8 level for two 8x8 blocks simultaneously. Hence, we preferred to rename as aom_hadamard_lp_8x8_dual() instead of aom_hadamard_lp_8x16().\n\nAlso, we are planning to submit a follow-up patch for the other issue which you pointed out in the patch (https://aomedia-review.googlesource.com/c/aom/+/155366/4/av1/encoder/nonrd_pickmode.c#897).\n\nThanks \u0026 Regards,\nVenkata.\n",
      "revId": "45ed5d8cda4177e1ee48f500d928293323a171d1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbed4352_6037c5c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-08-02T16:58:49Z",
      "side": 1,
      "message": "\u003e Hi James,\n\u003e \n\u003e As you pointed out in the patch (https://aomedia-review.googlesource.com/c/aom/+/155366/4/aom_dsp/aom_dsp_rtcd_defs.pl#1126), the function aom_hadamard_8x8_dual() is specific to low bit depth. Hence, for better readability this CL renames aom_hadamard_8x8_dual() to aom_hadamard_lp_8x8_dual().\n\u003e \n\u003e Even though aom_hadamard_8x8_dual() is called for an 8x16 block, intrinsic is implemented such that hadamard txfm is performed at 8x8 level for two 8x8 blocks simultaneously. Hence, we preferred to rename as aom_hadamard_lp_8x8_dual() instead of aom_hadamard_lp_8x16().\n\u003e \n\nI think they sound equivalent to me, but we have existing use of _dual for this purpose, so it\u0027s consistent.\n\n\u003e Also, we are planning to submit a follow-up patch for the other issue which you pointed out in the patch (https://aomedia-review.googlesource.com/c/aom/+/155366/4/av1/encoder/nonrd_pickmode.c#897).\n\u003e \n\nThank you.\n\n\u003e Thanks \u0026 Regards,\n\u003e Venkata.\n\u003e",
      "parentUuid": "6b732e5d_4b516efd",
      "revId": "45ed5d8cda4177e1ee48f500d928293323a171d1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "45ed5d8cda4177e1ee48f500d928293323a171d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "45ed5d8cda4177e1ee48f500d928293323a171d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "45ed5d8cda4177e1ee48f500d928293323a171d1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}