{
  "comments": [
    {
      "key": {
        "uuid": "031d2c81_5e4f7af3",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 2
      },
      "lineNbr": 5860,
      "author": {
        "id": 5290
      },
      "writtenOn": "2018-07-27T23:54:30Z",
      "side": 1,
      "message": "Not directly related to this patch, but:\nDo you mind extracting some variables out for bitwise opertions to make it easier to read? I\u0027m also worried about mix of \"|\" and \"||\" being prone to errors.\n\ne.g.\nconst int use_error_resilient \u003d cpi-\u003eoxcf.error_resilient_mode |\n          (!!(lookahead_src-\u003eflags \u0026 AOM_EFLAG_ERROR_RESILIENT));\nconst int use_s_frame \u003d \u003csimilar\u003e\nconst int use_show_existing \u003d ...",
      "revId": "7572a23d7c036c3a619ba3517bc2bd842a681013",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68651bb3_dda7ed5f",
        "filename": "av1/encoder/firstpass.c",
        "patchSetId": 2
      },
      "lineNbr": 4029,
      "author": {
        "id": 5290
      },
      "writtenOn": "2018-07-27T23:54:30Z",
      "side": 1,
      "message": "You can you assert(IMPLIES(.., ..)), so that whole code is no-op in release build.",
      "range": {
        "startLine": 4028,
        "startChar": 2,
        "endLine": 4029,
        "endChar": 45
      },
      "revId": "7572a23d7c036c3a619ba3517bc2bd842a681013",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}