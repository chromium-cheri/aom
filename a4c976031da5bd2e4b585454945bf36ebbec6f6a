{
  "comments": [
    {
      "key": {
        "uuid": "14a7fa39_e48da792",
        "filename": "aom_dsp/daalaboolreader.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 5046
      },
      "writtenOn": "2017-04-07T20:20:01Z",
      "side": 1,
      "message": "Shouldn\u0027t this be 0x800000.  When prob \u003d (256 - _prob)\n\n((prob \u003c\u003c 15) + 256 - prob) \u003e\u003e 8\n(((256 - _prob) \u003c\u003c 15 + 256 - (256 - _prob)) \u003e\u003e 8\n((256 \u003c\u003c 15) - (_prob \u003c\u003c 15) + 256 - 256 + _prob) \u003e\u003e 8\n(0x800000 - (_prob \u003c\u003c 15) + _prob) \u003e\u003e 8\n\nAny reason not to just do:\n\n#if CONFIG_EC_SMALLMUL\nprob \u003d 256 - prob;\n#endif\n\nIt would be way easier to understand what is going on.",
      "revId": "a4c976031da5bd2e4b585454945bf36ebbec6f6a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dca58933_f44e7228",
        "filename": "aom_dsp/daalaboolreader.h",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-04-07T20:41:10Z",
      "side": 1,
      "message": "\u003e Shouldn\u0027t this be 0x800000.\n\nThe answer turns out to be no. The failure case is prob \u003d\u003d 0 (and also prob \u003d\u003d 256, but that value is hopefully never actually used).\n\nThe invariant I\u0027m trying to preserve is\n  p \u003d\u003d CDF_PROB_TOP - (((prob \u003c\u003c 15) + (256 - prob)) \u003e\u003e 8)\n\nNow consider prob \u003d\u003d 0:\n  32768 - (((0 \u003c\u003c 15) + (256 - 0)) \u003e\u003e 8) \u003d\u003d 32767\n\nIf I do\n  prob \u003d 256 - prob;\n  p \u003d ((prob \u003c\u003c 15) + (256 - prob)) \u003e\u003e 8;\nthen for prob \u003d\u003d 0, I get\n  p \u003d\u003d ((256 - 0) \u003c\u003c 15) + (256 - 256)) \u003e\u003e 8 \u003d\u003d 32768.\n\nThat\u0027s bad.\n\nI exhaustively checked all legal values of prob. This was the simplest expression I could come up with that returned the right answer in all cases without using any more operations than the non-EC_SMALLMUL approach (though sadly the constant got bigger).",
      "parentUuid": "14a7fa39_e48da792",
      "revId": "a4c976031da5bd2e4b585454945bf36ebbec6f6a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c03cb8b_c8fb9814",
        "filename": "aom_dsp/daalaboolwriter.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5046
      },
      "writtenOn": "2017-04-07T20:20:01Z",
      "side": 1,
      "message": "Same thing here.",
      "revId": "a4c976031da5bd2e4b585454945bf36ebbec6f6a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}