{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f3381b32_e15394a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-02-18T15:47:12Z",
      "side": 1,
      "message": "Please review.",
      "revId": "afaa568d91d7831359cfbb320158279ce5e4d570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d582a62_132119fd",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 2151,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-19T03:29:22Z",
      "side": 1,
      "message": "Can we test cpi-\u003eoxcf.kf_cfg.key_freq_max \u003d\u003d 0 or cpi-\u003eoxcf.gf_cfg.lag_in_frames \u003d\u003d 0 instead of cpi-\u003eoxcf.mode \u003d\u003d ALLINTRA?\n\nSince ALLINTRA enforces two conditions, testing cpi-\u003eoxcf.mode \u003d\u003d ALLINTRA makes it less clear which condition we are depending on here.",
      "range": {
        "startLine": 2151,
        "startChar": 11,
        "endLine": 2151,
        "endChar": 37
      },
      "revId": "afaa568d91d7831359cfbb320158279ce5e4d570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7afd1384_f3a15e02",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 2151,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-02-19T04:05:46Z",
      "side": 1,
      "message": "From our earlier discussions, cpi-\u003eoxcf.gf_cfg.lag_in_frames \u003d\u003d 0 may not be sufficient (as per the standard). \nHence we shall try to use cpi-\u003eoxcf.kf_cfg.key_freq_max \u003d\u003d 0 check instead of ALLINTRA check. Overall, given the merits of dynamic approach (for all type of encodes), please let us know if we should do this modification.",
      "parentUuid": "2d582a62_132119fd",
      "range": {
        "startLine": 2151,
        "startChar": 11,
        "endLine": 2151,
        "endChar": 37
      },
      "revId": "afaa568d91d7831359cfbb320158279ce5e4d570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b1b55be_24a79599",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 2152,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-19T03:29:22Z",
      "side": 1,
      "message": "Nit: Use the boolean notation: !cpi-\u003eoxcf.gf_cfg.enable_auto_arf\n\nDo you think the WebRTC library should set AOME_SET_ENABLEAUTOALTREF to 0?",
      "range": {
        "startLine": 2152,
        "startChar": 10,
        "endLine": 2152,
        "endChar": 47
      },
      "revId": "afaa568d91d7831359cfbb320158279ce5e4d570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03cba749_ead8e022",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 2152,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-02-19T04:05:46Z",
      "side": 1,
      "message": "Yes. For this optimization to be applicable, WebRTC library should set AOME_SET_ENABLEAUTOALTREF to 0.",
      "parentUuid": "4b1b55be_24a79599",
      "range": {
        "startLine": 2152,
        "startChar": 10,
        "endLine": 2152,
        "endChar": 47
      },
      "revId": "afaa568d91d7831359cfbb320158279ce5e4d570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}