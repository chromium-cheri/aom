{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9810201e_27263ee8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-15T17:37:36Z",
      "side": 1,
      "message": "Please review the new patchset. I made some other small changes. Thanks.",
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfe79a5b_19b4bc64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 26732
      },
      "writtenOn": "2023-03-15T19:23:06Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b784206b_e16c72f8",
        "filename": "test/wiener_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 26732
      },
      "writtenOn": "2023-03-15T19:23:06Z",
      "side": 1,
      "message": "How about adding something to the test title to signify this is a 10-bit video frame?",
      "range": {
        "startLine": 715,
        "startChar": 23,
        "endLine": 715,
        "endChar": 67
      },
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "909aba5a_893bfd5e",
        "filename": "test/wiener_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 715,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-15T19:32:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b784206b_e16c72f8",
      "range": {
        "startLine": 715,
        "startChar": 23,
        "endLine": 715,
        "endChar": 67
      },
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "807cbb88_25b64068",
        "filename": "test/wiener_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 740,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-15T17:52:46Z",
      "side": 1,
      "message": "Yannis: The YUV samples here come from the reproducer testcase in b/272139363. Although they are all in the valid range of bit depth 10, note that the value 0 and 1023 are very common.\n\nI inspected the code that generates these samples and I think it is using `fuzztest::InRange` correctly. This means `fuzztest::InRange` does not seem to generate the values using a uniform distribution. It seems to favor the min and max of the range, and seems to like repeating values. Do you know if the behavior of `fuzztest::InRange` is documented?",
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe299d3d_71ca4bf2",
        "filename": "test/wiener_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 740,
      "author": {
        "id": 14319
      },
      "writtenOn": "2023-03-16T14:01:29Z",
      "side": 1,
      "message": "I did not find any documentation on the distribution of `fuzztest::InRange()`. However, fuzzing works by generating random values based on an optional user-defined corpus, some constants hard-coded by the framework (so I guess min and max for a user-specified range) and mutations (flip bit, remove byte, move byte, duplicate byte etc.). The mutations are kept depending on the tested code coverage. So I am not surprised with the non-uniform distribution.",
      "parentUuid": "807cbb88_25b64068",
      "revId": "f8e902d3a0ebf9d1ea14d07c1af3871603fe7c37",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}