{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c4ad2502_fbec1d96",
        "filename": "aom_dsp/arm/mem_neon.h",
        "patchSetId": 5
      },
      "lineNbr": 187,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-04-05T10:57:46Z",
      "side": 1,
      "message": "I don\u0027t think this used by code in this patch - let\u0027s introduce it when it is used.",
      "range": {
        "startLine": 173,
        "startChar": 1,
        "endLine": 187,
        "endChar": 1
      },
      "revId": "326bf15e99734ca88b54110892bfeda0078d4f01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96c3d216_5cd9e5ea",
        "filename": "aom_dsp/arm/mem_neon.h",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-04-05T10:57:46Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 266,
        "endChar": 1
      },
      "revId": "326bf15e99734ca88b54110892bfeda0078d4f01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c6cfb13_4f0e8074",
        "filename": "aom_dsp/arm/mem_neon.h",
        "patchSetId": 5
      },
      "lineNbr": 608,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-04-05T10:57:46Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 580,
        "startChar": 0,
        "endLine": 608,
        "endChar": 1
      },
      "revId": "326bf15e99734ca88b54110892bfeda0078d4f01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55a2287f_871596df",
        "filename": "av1/common/arm/highbd_convolve_neon.c",
        "patchSetId": 5
      },
      "lineNbr": 102,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-04-05T10:57:46Z",
      "side": 1,
      "message": "Seeing vget_high_\u003ctype\u003e always makes me nervous that an extra MOV is going to be emitted.\n\nI think we should define a new helper that stores from a 128-bit vector, so we can store lanes 2 and 3 (assuming 32-bit blobs) directly. E.g.\n\n#define store_u16q_2x1(s, s0, lane)                                 \\\n  do {                                                             \\\n    vst1q_lane_u32((uint32_t *)(s), vreinterpretq_u32_s16(s0), lane); \\\n  } while (0)",
      "range": {
        "startLine": 102,
        "startChar": 42,
        "endLine": 102,
        "endChar": 59
      },
      "revId": "326bf15e99734ca88b54110892bfeda0078d4f01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ef44a86_86883b6d",
        "filename": "av1/common/arm/highbd_convolve_neon.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-04-05T10:57:46Z",
      "side": 1,
      "message": "The compiler (I\u0027m using clang 15.0.6) isn\u0027t smart enough to re-combine these and use SMLAL2 instructions - instead it generates 8 EXT, SMLAL pairs.\n\nI think we won\u0027t be able to re-use the highbd_convolve8_4_s32 helpers here - we\u0027ll need to write things explicitly like:\nvmlal_lane_s16(sum, vget_low_s16(s0), filter, lane);\nvmlal_lane_s16(sum, vget_high_s16(s0), filter, lane);",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "326bf15e99734ca88b54110892bfeda0078d4f01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}