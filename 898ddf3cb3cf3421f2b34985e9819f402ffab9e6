{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10136f69_25c2a8cc",
        "filename": "av1/qmode_rc/ratectrl_qmode_interface.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-12-06T19:46:41Z",
      "side": 1,
      "message": "Why is this necessary?\n\nI\u0027ve been assuming that it\u0027s allowed to call SetRcParam multiple times on the same object, so a client could call it once for the first pass, and then a second time for the second pass.\n\nIf there\u0027s some reason not do that, we should probably explicitly disallow it.\n\nIn that case we still wouldn\u0027t need this API, because a client could simply create a new AV1RateControlQModeInterface implementation for the second pass.",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 311,
        "endChar": 44
      },
      "revId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8494490e_03ef7d76",
        "filename": "av1/qmode_rc/ratectrl_qmode_interface.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-12-06T19:50:20Z",
      "side": 1,
      "message": "Following up on that:\n\nI\u0027ve been viewing this API as essentially memoryless with the exception that SetRcParam can set up parameters which are used by the other calls.\n\nBut there shouldn\u0027t be any reason for the other calls to \"communicate\" with each other by means of saved state.\n\nNote that in production, each pass (first, TPL1, TPL2, and final encode) will be done in a separate binary, so it\u0027s guaranteed that each one will get its own copy of the RC library implementation.\n\nPerhaps I should add a comment to the header clarifying this.",
      "parentUuid": "10136f69_25c2a8cc",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 311,
        "endChar": 44
      },
      "revId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0341fa87_829aba9b",
        "filename": "av1/qmode_rc/ratectrl_qmode_interface.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 5022
      },
      "writtenOn": "2022-12-06T21:06:02Z",
      "side": 1,
      "message": "I see. Good point.\n\nWe don\u0027t need this change then.",
      "parentUuid": "8494490e_03ef7d76",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 311,
        "endChar": 44
      },
      "revId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "898ddf3cb3cf3421f2b34985e9819f402ffab9e6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}