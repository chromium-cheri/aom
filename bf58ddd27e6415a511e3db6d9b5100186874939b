{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97307379_f58e3695",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-12-18T01:11:25Z",
      "side": 1,
      "message": "One general comment about the flags.\nI\u0027ll let Yue review the actual logic.",
      "revId": "bf58ddd27e6415a511e3db6d9b5100186874939b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9bab73a_a8ec19cb",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-12-18T01:11:25Z",
      "side": 1,
      "message": "So, there seem to be 3 separate flags: CONFIG_SDP, ENABLE_SDP_SIGNALING and ENABLE_SDP_ENCODER?\nCan you explain what the last 2 are for?\nIf they are optional extensions of CONFIG_SDP:\n- Better to declare them in cmake\n- Use CONFIG_ prefix for them. \"ENABLE_\" prefix is generally used for optional features of the build system",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 22
      },
      "revId": "bf58ddd27e6415a511e3db6d9b5100186874939b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b90731_b5ea6d9c",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 18227
      },
      "writtenOn": "2020-12-18T04:14:40Z",
      "side": 1,
      "message": "ENABLE_SDP_SIGNALING and ENABLE_SDP_ENCODER are not optional for CONFIG_SDP. Actually, they are two steps for implementing SDP. When enabling ENABLE_SDP_SIGNALING, only the signaling part of SDP is implemented. After that, enabling ENABLE_SDP_ENCODER further modify the encoder to enable different partition between luma and chroma.\n\nThe reason for keeping these two macros is to facilitate the debugging process later. \n\nThe reason why these two macros are not placed with CONFIG_ prefix is because they can\u0027t be turned on when CONFIG_SDP is off.\n\nIn my opinion, it\u0027s better to keep it now, and remove it when SDP and yue\u0027s extended recursive partition are successlly combined together.",
      "parentUuid": "e9bab73a_a8ec19cb",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 22
      },
      "revId": "bf58ddd27e6415a511e3db6d9b5100186874939b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2297f8c_d224e9c4",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-12-18T06:47:01Z",
      "side": 1,
      "message": "Agreed that keeping macros makes sense.\nHowever, you can actually move them to the aom_config_defaults.cmake file (with CONFIG_ prefix) and then define the dependence in aom_experiment_deps.cmake file. (This file is exactly to enforce such dependencies).\n\nSo, you can add a rule that if ENABLE_SDP_SIGNALING is on, then CONFIG_SDP is automatically turned on as well.\n(And same for ENABLE_SDP_ENCODER).\n\nFor example, see this line: https://aomedia.googlesource.com/aom/+/research/build/cmake/aom_experiment_deps.cmake#20\n(This example means that whenever CONFIG_ANALYZER is turned on, the rule will automatically turn on CONFIG_INSPECTION too, to enforce this dependency).\n\nThe benefit of doing that is that you will get build with each CONFIG_ on automatically tested by Jenkins.",
      "parentUuid": "79b90731_b5ea6d9c",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 22
      },
      "revId": "bf58ddd27e6415a511e3db6d9b5100186874939b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}