{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "956f4173_e1a12f67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2022-09-22T15:38:31Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nIn case of ALLINTRA encoding, the application of deblocking filters on the reconstructed frame can be avoided as they are not referenced. In this CL, we have introduced a new API parameter ‘apply_loopfilter’ which is 1 by default. When set to 0, the application of deblocking filters is skipped if there are no further in-loop filtering stages (cdef, superres scaling, loop restoration).\n\nWe have also modified the control calls that query a reconstructed frame to return an error ‘AOM_CODEC_UNSUP_FEATURE’ if ‘appy_loopfilter’ is set to 0. av1_get_preview_raw_frame() and av1_get_last_show_frame() are also modified to not return a reconstructed frame when ‘appy_loopfilter’ is set to 0.\n\nThis CL produces bit-exact stream. With this CL, for AVIF still-image encode, we observed encode time reduction of ~2.5% for ‘-s 9, --depth 10’ on an image dataset when ‘apply_loopfilter’ is set to 0.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027, \u0027RT\u0027 and \u0027ALLINTRA\u0027 encoding modes for a few contents with different encoding configurations. It is verified that the CL is bit-exact for AVIF still-image encode for a typical image dataset.\n\nPlease review.\n\nRegards,\nRemya",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d71c6fae_c8f6cc49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2022-09-26T14:27:09Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nPlease review this patch.\n\nRegards,\nRemya",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f764c27_2ebc6a71",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 4167,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-09-26T15:10:15Z",
      "side": 1,
      "message": "Can you use the existing SET_LOOPFILTER_CONTROL (which has an on/off setting) for this (allintra) use case, instead of adding another loopfilter setting? It would be confusing for applications that want to use/are using this type of control.",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df3f5d92_b7dea4f6",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 10
      },
      "lineNbr": 4167,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-26T16:03:53Z",
      "side": 1,
      "message": "Marco: Thank you for the comment. I will reply in the relevant source code.",
      "parentUuid": "1f764c27_2ebc6a71",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c50b4a2_861f5add",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 10
      },
      "lineNbr": 2288,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-26T16:03:53Z",
      "side": 1,
      "message": "I analyzed the code related to the `AV1E_SET_LOOPFILTER_CONTROL` codec control that Marco mentioned. `AV1E_SET_LOOPFILTER_CONTROL` only affects the values of `lf-\u003efilter_level[0]` and `lf-\u003efilter_level[1]`, whereas this CL aims to turn off all post-processing filtering (i.e., also CDEF, loop restoration etc.) for the frames in all intra mode (because the frames in all intra mode are never used as reference frames).\n\nIs it common in libaom to use the term \"loop filter\" to broadly refer to all post-processing filtering?\n\nSince `AV1E_SET_LOOPFILTER_CONTROL` only controls the loop filter in the narrow sense, i.e., the deblock filter described in Section 7.14 \"Loop filter process\" of the AV1 spec, I think this CL needs to add a new codec control, but new codec control should probably use the term \"post-processing filtering\" or something similar to disambiguate.",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a37645_0556ba9c",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 10
      },
      "lineNbr": 2288,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-09-26T18:27:38Z",
      "side": 1,
      "message": "For disabling: the existing AV1E_SET_LOOPFILTER_CONTROL sets the values of lf-\u003efilter_level[0] and lf-\u003efilter_level[1] both to 0, which disables the loopfilter. And there are existing controls for disabling cdef and loop-restoration (AV1E_SET_ENABLE_CDEF and AV1E_SET_ENABLE_RESTORATION). So I think you can reuse the existing loopfilter control setting, can you check?\n\nAlso note that the loopfilter and cdef is already not applied on non_reference_frames, if this flag is set: cpi-\u003ertc_ref.non_reference_frame \u003d 1.\nSo you may be able to use this flag for the allintra use case as well, feel free to rename it (i.e., remove rtc_ref) if you do.",
      "parentUuid": "5c50b4a2_861f5add",
      "revId": "a17f0698979277c05144182f1c298fba36ed2cf6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}