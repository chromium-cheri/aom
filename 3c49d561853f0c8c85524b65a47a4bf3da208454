{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ffeb677e_e46ab632",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-02-27T17:21:19Z",
      "side": 1,
      "message": "James: Please review patchset 2. I changed the code to apply the `ptrdiff_t` casts to the stride variables consistently.\n\nI also prepared an alternative CL that casts the stride variables to `unsigned int`:\nhttps://aomedia-review.googlesource.com/c/aom/+/187541\n\nThis CL has no effects in 32-bit builds, so the alternative CL is better for 32-bit builds. The downside of the alternative CL is that we can only cast to `unsigned int` when all the operands are nonnegative, so it is more work to verify it\u0027s correct.\n\nWhich CL would you prefer?\n\nI prefer this CL, because we don\u0027t need to worry about negative operands, and 32-bit builds can\u0027t handle huge frame sizes because of memory allocation limitations.",
      "revId": "3c49d561853f0c8c85524b65a47a4bf3da208454",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce470774_2c6aac2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-02-27T19:28:05Z",
      "side": 1,
      "message": "\u003e James: Please review patchset 2. I changed the code to apply the `ptrdiff_t` casts to the stride variables consistently.\n\u003e \n\u003e I also prepared an alternative CL that casts the stride variables to `unsigned int`:\n\u003e https://aomedia-review.googlesource.com/c/aom/+/187541\n\u003e \n\u003e This CL has no effects in 32-bit builds, so the alternative CL is better for 32-bit builds. The downside of the alternative CL is that we can only cast to `unsigned int` when all the operands are nonnegative, so it is more work to verify it\u0027s correct.\n\u003e \n\u003e Which CL would you prefer?\n\u003e \n\u003e I prefer this CL, because we don\u0027t need to worry about negative operands, and 32-bit builds can\u0027t handle huge frame sizes because of memory allocation limitations.\n\nI agree. In the 32-bit case we could force a limit with the decode size limit.",
      "parentUuid": "ffeb677e_e46ab632",
      "revId": "3c49d561853f0c8c85524b65a47a4bf3da208454",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3c49d561853f0c8c85524b65a47a4bf3da208454",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3c49d561853f0c8c85524b65a47a4bf3da208454",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3c49d561853f0c8c85524b65a47a4bf3da208454",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}