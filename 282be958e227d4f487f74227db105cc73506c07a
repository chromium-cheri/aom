{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b8a54b2c_087ae99a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-23T10:47:57Z",
      "side": 1,
      "message": "Removed BUILD_SHARED_LIBS for aom_static lib. Hoping that this will solve. Please review and let me know if this needs any improvement. Thanks",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66dd3724_93395384",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-23T19:02:41Z",
      "side": 1,
      "message": "This change may be incorrect. It should be attempted carefully and Windows build needs to be considered.\n\nI wonder if it would be simpler if you could tell us what you need to do and let us make the change that meets your requirements.",
      "parentUuid": "b8a54b2c_087ae99a",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "538cdbda_bb42ae8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-27T15:55:03Z",
      "side": 1,
      "message": "Hi, need to build aom_av1_rc lib in a shared fashion. libaom_av1_rc.so. Please let me know what changes are required. or what kind of tests needs to be done. At my system it builds. I used ubuntu.\nWill also build in Windows. And update here.",
      "parentUuid": "66dd3724_93395384",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a58e044_d802df0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-27T15:56:13Z",
      "side": 1,
      "message": "I will rectify it, please let me know what tests needs to be done.",
      "parentUuid": "538cdbda_bb42ae8e",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77caf26b_ff9b96c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-29T18:05:51Z",
      "side": 1,
      "message": "Hi Pradeep,\n\nThank you for telling us what you need to do. Since the aom_av1_rc library uses libaom\u0027s internal functions, which are not exported from the libaom shared library, we will need to link the aom_av1_rc library with the libaom static library, whether BUILD_SHARED_LIBS is ON (1) or OFF (0).\n\nIf BUILD_SHARED_LIBS is ON, the \"aom\" library is a shared library, and we build an additional library \"aom_static\" that is a static library.\n\nIf BUILD_SHARED_LIBS is OFF, the \"aom\" library is a static library.\n\nSo the aom_av1_rc library needs to be linked with either the \"aom_static\" library or the \"aom\" library depending on whether BUILD_SHARED_LIBS is ON or OFF.\n\nThe next thing is to modify test/test.cmake so that test_av1_rc is built when BUILD_SHARED_LIBS is ON.\n\nI wrote a CL that does all the above at https://aomedia-review.googlesource.com/c/aom/+/190623. It works on Linux and macOS. But it needs more work on Windows -- we need to export the function symbols from aom_av1_rc.dll. Apparently functions symbols are exported by default in Linux and macOS and are hidden (not exported) by default in Windows. I found a solution by Web search; I will test it on my Windows laptop when I get home tonight.\n\nPlease feel free to incorporate my CL into your CL.",
      "parentUuid": "8a58e044_d802df0f",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c490860_43965831",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-31T03:04:06Z",
      "side": 1,
      "message": "Hi Wan-Ten Chang,\nThanks for providing the detailed explanation.  Let me know what needs to be done on Windows.\n\nWill modify my CL according your CL. \n\nI have another CL which does exports the methods from class AV1RateControlRTC. \n\n-best regards\nPradeep Kumar",
      "parentUuid": "77caf26b_ff9b96c7",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a1411c4_c215de2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-31T04:28:10Z",
      "side": 1,
      "message": "Hi Pradeep,\n\nI made my CL work on Windows and have submitted my CL (https://aomedia-review.googlesource.com/c/aom/+/190623), so you should be able to delete this CL now.\n\nI would appreciate it if you could test the main branch of libaom and see if it meets your requirements. Thanks!",
      "parentUuid": "6c490860_43965831",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eed6f8e2_0732c4f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-06-03T12:24:26Z",
      "side": 1,
      "message": "Hi Wan-Teh,\nThank you for merging with main branch. I have tested it works. How about adding set_target_properties(aom_static PROPERTIES POSITION_INDEPENDENT_CODE TRUE)\nlet me know will push the patch.\n-best regards\nPradeep Kumar",
      "parentUuid": "5a1411c4_c215de2d",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31901dac_ec5934d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-03T17:05:38Z",
      "side": 1,
      "message": "Hi Pradeep,\n\nThat change is not necessary. The aom_static library is only built when BUILD_SHARED_LIBS is enabled, and in that case POSITION_INDEPENDENT_CODE is enabled by the following code in build/cmake/aom_configure.cmake:\n\n```\nif(BUILD_SHARED_LIBS)\n  set(CONFIG_PIC 1)\n  set(CONFIG_SHARED 1)\nelseif(NOT CONFIG_PIC)\n  ...\nendif()\n    \nif(NOT MSVC)\n  if(CONFIG_PIC)\n      \n    # TODO(tomfinegan): clang needs -pie in CMAKE_EXE_LINKER_FLAGS for this to\n    # work.\n    set(CMAKE_POSITION_INDEPENDENT_CODE ON)\n    ...\n  endif()\nendif()\n```\n\nPlease verify this as follows:\n\n```\ncmake ../aom -G Ninja -DBUILD_SHARED_LIBS\u003dON\nninja -v\n```\n\nIn the output log, search for the \"ar qc libaom.a\" command, and check the compiler command lines for some of the input .o files (e.g., aom_config.c.o and av1_cx_iface.c.o). Verify that they are all compiled with the -fPIC compiler flag.",
      "parentUuid": "eed6f8e2_0732c4f1",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "250f85b4_df063e49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-03T17:08:59Z",
      "side": 1,
      "message": "See also https://cmake.org/cmake/help/latest/prop_tgt/POSITION_INDEPENDENT_CODE.html:\n\n  \u003eThis property is initialized by the value of the\n  CMAKE_POSITION_INDEPENDENT_CODE variable if it is\n  set when a target is created.\n  \nYou can verify that is the case for the aom_static library target in the CMakeLists.txt file. When the aom_static target is created, build/cmake/aom_configure.cmake has already been included.",
      "parentUuid": "31901dac_ec5934d9",
      "revId": "282be958e227d4f487f74227db105cc73506c07a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}