{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "975f0097_39d91bc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-17T09:04:19Z",
      "side": 1,
      "message": "This CL is ready for review.\nThe test video is not updated yet, which might cause the build failure.\nWill figure out how to update the test video soon.\n\nSince there are many TODOs, we use TODO(name) rather than TODO(bug id) to save some time.",
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfa568f4_e5d7877c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-05-17T15:47:17Z",
      "side": 1,
      "message": "Adding jzern for this significant interface change.",
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d612d31_1ea927f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-05-17T15:52:17Z",
      "side": 1,
      "message": "Is this going to be a public API?\n\nIf yes: How is it going to be used? How is it different from the current public API in aom/aom_encoder.h?",
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "116bd7c1_ae4cfdda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "This is the encoder API we need to use for this project.\naom/aom_encoder.h can not serve our need.\nNot sure whether it should be public or not.",
      "parentUuid": "2d612d31_1ea927f9",
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c127bea4_a4a39678",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-17T11:12:39Z",
      "side": 1,
      "message": "It would be helpful to have a comment explaining what this is.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 19
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e321d17_02892264",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "I added a very simple description said that it\u0027s a two-pass experimental c++ interface.",
      "parentUuid": "c127bea4_a4a39678",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 19
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "697cbda4_a14b1a27",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-17T11:12:39Z",
      "side": 1,
      "message": "Single-argument ctor should be marked explicit. go/cstyle#Implicit_Conversions",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 13
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "913717cc_19d10e32",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "697cbda4_a14b1a27",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 13
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aaae01b6_d6fdb815",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-17T11:12:39Z",
      "side": 1,
      "message": "Please document how this API is to be used. I assume the calling sequence would be:\n1. StartEncode\n2. EncodeFrame (any number of times)\n3. EndEncode\n\nIs it allowed to do this more than once?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c77b7e2e_d5d10bc8",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "I will add a unit test to show how this work.\nYep, I think you can do it several times.\nBut I haven\u0027t tested it.",
      "parentUuid": "aaae01b6_d6fdb815",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a3865a4_311f2d37",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-18T10:46:38Z",
      "side": 1,
      "message": "It would still be useful to have a simple explanation here of any requirements on the caller of how the API should be used, e.g. something like this:\n\n// This object can be used to do zero or more encode passes, where each encode\n// pass consists of:\n// - StartEncode()\n// - Zero or more calls to EncodeFrame()\n// - EndEncode()\n// Encode passes may not overlap, and any other sequence of these calls is invalid.\n\n(Obviously if any of my assumptions here are wrong, please change the comment to be accurate.)",
      "parentUuid": "c77b7e2e_d5d10bc8",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 67
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b20cf96b_b62466d2",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-17T11:12:39Z",
      "side": 1,
      "message": "Is there any reason for this to be passed in rather than just returning a vector\u003cuint8_t\u003e?",
      "range": {
        "startLine": 37,
        "startChar": 19,
        "endLine": 37,
        "endChar": 54
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd6b231a_58f61a3a",
        "filename": "av1/ducky_encode.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "I changed it to return EncodeFrameResult which include a vector\u003cuint8_t\u003e\nThe structure is for the convenience that we can let encoder return more information later.",
      "parentUuid": "b20cf96b_b62466d2",
      "range": {
        "startLine": 37,
        "startChar": 19,
        "endLine": 37,
        "endChar": 54
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a48f83_1ca2a120",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 473,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-05-18T01:53:55Z",
      "side": 1,
      "message": "this kind of update could be a separate change",
      "range": {
        "startLine": 473,
        "startChar": 33,
        "endLine": 473,
        "endChar": 39
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd684184_c197c134",
        "filename": "av1/encoder/lookahead.c",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-05-17T11:12:39Z",
      "side": 1,
      "message": "You could get rid of the +1 and use \u003e\u003d instead of \u003e.\n\nThat seems clearer: the buffer is full if the number of frames pushed is greater than or equal to the buffer size.",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 45
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0299f38d_e5a34824",
        "filename": "av1/encoder/lookahead.c",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-05-18T05:21:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd684184_c197c134",
      "range": {
        "startLine": 97,
        "startChar": 22,
        "endLine": 97,
        "endChar": 45
      },
      "revId": "9e92264e5d40f5e351ad7a463b7bcd487c7da418",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}