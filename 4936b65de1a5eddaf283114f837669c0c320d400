{
  "comments": [
    {
      "key": {
        "uuid": "581e888c_430a5bc6",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-16T19:08:14Z",
      "side": 1,
      "message": "Optional: I suggest this function assert that on entry into this function, \u0027rb\u0027 is byte-aligned and \u0027rb\u0027 matches \u0027data\u0027, for example,\n\n  assert((rb-\u003ebit_offset \u0026 7) \u003d\u003d 0);\n  assert(rb-\u003ebit_buffer + (rb-\u003ebit_offset \u003e\u003e 3) \u003d\u003d data);\n\nWe can add these assertions in a separate CL.",
      "revId": "4936b65de1a5eddaf283114f837669c0c320d400",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f69d7ace_9e4fcd71",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 7025
      },
      "writtenOn": "2018-07-16T19:29:54Z",
      "side": 1,
      "message": "Done. Have used aom_rb_bytes_read in the second assert instead of computing it explcitily.",
      "parentUuid": "581e888c_430a5bc6",
      "revId": "4936b65de1a5eddaf283114f837669c0c320d400",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33eb4bab_1f726a7c",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-16T19:08:14Z",
      "side": 1,
      "message": "I verified that the new code matches the byte_alignment() function of the spec:\n\nbyte_alignment( ) { \n    while ( get_position( ) \u0026 7 )\n        zero_bit                       f(1)\n}",
      "revId": "4936b65de1a5eddaf283114f837669c0c320d400",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}