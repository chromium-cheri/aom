{
  "comments": [
    {
      "key": {
        "uuid": "7331a996_d90f7c91",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-31T17:56:28Z",
      "side": 1,
      "message": "It would be good to add a comment to explain why we cannot release the reference held in cm-\u003enew_fb_idx. (I assume that\u0027s why we reset ref_count to 1 if i is cm-\u003enew_fb_idx.\n\nAlso, we should check if ref_count \u003e\u003d 1 in that case. (If ref_count \u003c 1, remember to call unlock_buffer_pool before calling aom_internal_error.)",
      "range": {
        "startLine": 4407,
        "startChar": 30,
        "endLine": 4407,
        "endChar": 49
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e73cb9e3_ef2f3644",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-31T17:56:28Z",
      "side": 1,
      "message": "IMPORTANT: I\u0027m sorry I did not think of this issue earlier. The decoder usually calls the decrease_ref_count() function to release a reference to a frame buffer. The decrease_ref_count() function may release the raw_frame_buffer when the reference count is decremented to 0:\n\nstatic INLINE void decrease_ref_count(int idx, RefCntBuffer *const frame_bufs,\n                                      BufferPool *const pool) {\n  if (idx \u003e\u003d 0) {\n    --frame_bufs[idx].ref_count;\n    // A worker may only get a free framebuffer index when calling get_free_fb.\n    // But the private buffer is not set up until finish decoding header.\n    // So any error happens during decoding header, the frame_bufs will not\n    // have valid priv buffer.\n    if (frame_bufs[idx].ref_count \u003d\u003d 0 \u0026\u0026\n        frame_bufs[idx].raw_frame_buffer.priv) {\n      pool-\u003erelease_fb_cb(pool-\u003ecb_priv, \u0026frame_bufs[idx].raw_frame_buffer);\n    }\n  }\n}\n\nShould we call pool-\u003erelease_fb_cb() here? The code would look something like this:\n\n    frame_bufs[i].ref_count \u003d i \u003d\u003d cm-\u003enew_fb_idx ? 1 : 0;\n    if (frame_bufs[i].ref_count \u003d\u003d 0 \u0026\u0026\n        frame_bufs[i].raw_frame_buffer.priv) {\n      cm-\u003ebuffer_pool-\u003erelease_fb_cb(cm-\u003ebuffer_pool-\u003ecb_priv, \u0026frame_bufs[i].raw_frame_buffer);\n    }\n\nNote: Rather than resetting ref_count directly, perhaps this function should call decrease_ref_count() to release references. Unfortunately it is not clear how we can do this.",
      "range": {
        "startLine": 4407,
        "startChar": 4,
        "endLine": 4407,
        "endChar": 58
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46cd8f99_00924ec5",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-08-31T19:13:49Z",
      "side": 1,
      "message": "\u003e IMPORTANT: I\u0027m sorry I did not think of this issue earlier. The decoder usually calls the decrease_ref_count() function to release a reference to a frame buffer. The decrease_ref_count() function may release the raw_frame_buffer when the reference count is decremented to 0:\n\u003e \n\u003e static INLINE void decrease_ref_count(int idx, RefCntBuffer *const frame_bufs,\n\u003e                                       BufferPool *const pool) {\n\u003e   if (idx \u003e\u003d 0) {\n\u003e     --frame_bufs[idx].ref_count;\n\u003e     // A worker may only get a free framebuffer index when calling get_free_fb.\n\u003e     // But the private buffer is not set up until finish decoding header.\n\u003e     // So any error happens during decoding header, the frame_bufs will not\n\u003e     // have valid priv buffer.\n\u003e     if (frame_bufs[idx].ref_count \u003d\u003d 0 \u0026\u0026\n\u003e         frame_bufs[idx].raw_frame_buffer.priv) {\n\u003e       pool-\u003erelease_fb_cb(pool-\u003ecb_priv, \u0026frame_bufs[idx].raw_frame_buffer);\n\u003e     }\n\u003e   }\n\u003e }\n\u003e \n\u003e Should we call pool-\u003erelease_fb_cb() here? The code would look something like this:\n\u003e \n\u003e     frame_bufs[i].ref_count \u003d i \u003d\u003d cm-\u003enew_fb_idx ? 1 : 0;\n\u003e     if (frame_bufs[i].ref_count \u003d\u003d 0 \u0026\u0026\n\u003e         frame_bufs[i].raw_frame_buffer.priv) {\n\u003e       cm-\u003ebuffer_pool-\u003erelease_fb_cb(cm-\u003ebuffer_pool-\u003ecb_priv, \u0026frame_bufs[i].raw_frame_buffer);\n\u003e     }\n\u003e \n\u003e Note: Rather than resetting ref_count directly, perhaps this function should call decrease_ref_count() to release references. Unfortunately it is not clear how we can do this.\n\nThanks for the good suggestion of release the raw buffers. Done in patch#5. \n\nI actually think it is better to resetting given that this is clear at the start of a new sequence, the intention of reset_frame_buffers is to reset the status of everything to reflect that.",
      "parentUuid": "e73cb9e3_ef2f3644",
      "range": {
        "startLine": 4407,
        "startChar": 4,
        "endLine": 4407,
        "endChar": 58
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2637f41e_a8f6b8c6",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-08-31T19:13:49Z",
      "side": 1,
      "message": "\u003e It would be good to add a comment to explain why we cannot release the reference held in cm-\u003enew_fb_idx. (I assume that\u0027s why we reset ref_count to 1 if i is cm-\u003enew_fb_idx.\n\nThe setting of cm-\u003enew_fb_idx to 1 is done already by the time frame header is read. If we donot keep it to 1 here, then we need immediately set again.. I think it can be thought of as it is the correct status to reset to at the start of a sequence.  \n\n\u003e \n\u003e Also, we should check if ref_count \u003e\u003d 1 in that case. (If ref_count \u003c 1, remember to call unlock_buffer_pool before calling aom_internal_error.)",
      "parentUuid": "7331a996_d90f7c91",
      "range": {
        "startLine": 4407,
        "startChar": 30,
        "endLine": 4407,
        "endChar": 49
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f651c67_3dff992b",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-31T22:48:58Z",
      "side": 1,
      "message": "Thank you.",
      "parentUuid": "46cd8f99_00924ec5",
      "range": {
        "startLine": 4407,
        "startChar": 4,
        "endLine": 4407,
        "endChar": 58
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "070d2210_b5d9caec",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-31T22:48:58Z",
      "side": 1,
      "message": "\u003e The setting of cm-\u003enew_fb_idx to 1 is done already by the time frame header is read.\n\nAre you referring this line in av1_receive_compressed_data()?\n\n  // Find a free frame buffer. Return error if can not find any.\n  cm-\u003enew_fb_idx \u003d get_free_fb(cm);\n\n\nget_free_fb() returns the index of a frame buffer with ref_count equal to 1.\n\nAfter that, cm-\u003enew_fb_idx may only be changed by this line in read_uncompressed_header():\n\n      ref_cnt_fb(frame_bufs, \u0026cm-\u003enew_fb_idx, frame_to_show);\n\nframe_to_show ref_count \u003e\u003d 1. The ref_cnt_fb() call sets cm-\u003enew_fb_idx to frame_to_show and increments ref_count, so the ref_count will be \u003e\u003d 2.\n\nThis means we will always see cm-\u003enew_fb_idx with ref_count \u003e\u003d 1 here, therefore it is safe to reduce the ref_count to 1. Correct?",
      "parentUuid": "2637f41e_a8f6b8c6",
      "range": {
        "startLine": 4407,
        "startChar": 30,
        "endLine": 4407,
        "endChar": 49
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3cb0f70_73d26ab4",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 4
      },
      "lineNbr": 4407,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-09-01T00:08:24Z",
      "side": 1,
      "message": "\u003e \u003e The setting of cm-\u003enew_fb_idx to 1 is done already by the time frame header is read.\n\u003e \n\u003e Are you referring this line in av1_receive_compressed_data()?\n\u003e \n\u003e   // Find a free frame buffer. Return error if can not find any.\n\u003e   cm-\u003enew_fb_idx \u003d get_free_fb(cm);\n\u003e \n\u003e \n\u003e get_free_fb() returns the index of a frame buffer with ref_count equal to 1.\n\u003e \n\u003e After that, cm-\u003enew_fb_idx may only be changed by this line in read_uncompressed_header():\n\u003e \n\u003e       ref_cnt_fb(frame_bufs, \u0026cm-\u003enew_fb_idx, frame_to_show);\n\u003e \n\u003e frame_to_show ref_count \u003e\u003d 1. The ref_cnt_fb() call sets cm-\u003enew_fb_idx to frame_to_show and increments ref_count, so the ref_count will be \u003e\u003d 2.\n\u003e \n\u003e This means we will always see cm-\u003enew_fb_idx with ref_count \u003e\u003d 1 here, therefore it is safe to reduce the ref_count to 1. Correct?\n\nGood point, so how about we do not reset the ref_count for new_fb_idx since it has been initialized and counted correctly since the beginning of current key frame.",
      "parentUuid": "070d2210_b5d9caec",
      "range": {
        "startLine": 4407,
        "startChar": 30,
        "endLine": 4407,
        "endChar": 49
      },
      "revId": "92fb42fb90de86889816a4d5c9013e2c5ae78040",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}