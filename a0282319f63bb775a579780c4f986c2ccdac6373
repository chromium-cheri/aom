{
  "comments": [
    {
      "key": {
        "uuid": "06f9e38a_11e3e6b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2020-09-14T17:27:51Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nIn this patch, we have added a speed feature which skips the last few iterations of loop filter level search. The motivation for this experiment is drawn from CDEF filter search where only a reduced set of primary/secondary filter strengths are searched. \n\nThe loop-filter level search uses binary search in getting the best filter level. However, loop filter level can be searched coarsely for better speed-quality trade-off. The search is performed upto an accuracy of +/- 4 which gives the following trade-off.\n\nThe speed feature is enabled for speed 5 and speed 6. \n\n                     Instruction Count       BD-Rate Loss(%)\ncpu-used  Resolution   Reduction(%)     avg.psnr  ovr.psnr    ssim \n    5       LOW RES       0.945          0.0121    0.0143    0.0169\n    5       MID RES       0.880         -0.0534   -0.0585   -0.0197\n    5       HD RES        0.836          0.0394    0.0359    0.0578\n    5       Average       0.901          0.0012   -0.0004    0.0187\n\t\n    6        LOW RES      1.227          0.0296    0.0385    0.0264\n    6        MID RES      1.188          0.0281    0.0300    0.0551\n    6        HD RES       1.156          0.0337    0.0276   -0.0065\n    6        Average      1.200          0.0304    0.0327    0.0248\n       \n\nIn the commit message, Quality Loss column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc â€¦\n\nPlease review the patch.\nThank you.\n\n",
      "revId": "a0282319f63bb775a579780c4f986c2ccdac6373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}