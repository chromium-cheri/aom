{
  "comments": [
    {
      "key": {
        "uuid": "1b26638c_ea8f681f",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 27,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "with if/else branches like this i think it\u0027s more consistent to prefer positive checks",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00bbaa2d_9a342b44",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "here and elsewhere, variables are lowercase + \u0027_\u0027\n\nhttps://google.github.io/styleguide/cppguide.html#Variable_Names",
      "range": {
        "startLine": 84,
        "startChar": 24,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f18bf50_d6c5094f",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "this could be a for loop with \u0027i\u0027 scoped to it",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54d5799_6aacc821",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 121,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "if this or the next fail, but none of the other checks in the loop this won\u0027t break and may cause a bit of unnecessary output; you can ASSERT_NO_FATAL_FAILURE if that\u0027s true",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0cb80bd_9d1fc1b2",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 138,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "functions are normally upper camelcase, but simple accessors (get/set) may be lower + \u0027_\u0027  (no get in the name)\n\nhttps://google.github.io/styleguide/cppguide.html#Function_Names",
      "range": {
        "startLine": 138,
        "startChar": 6,
        "endLine": 138,
        "endChar": 17
      },
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49107945_a4a4033c",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 143,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "another way to write this without the default parameter would be to overload the function as there isn\u0027t a lot of shared code\n\nhttps://google.github.io/styleguide/cppguide.html#Default_Arguments",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fc51c67_33e18b9c",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 179,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "prefer static_cast\u003c\u003e in c++",
      "range": {
        "startLine": 179,
        "startChar": 18,
        "endLine": 179,
        "endChar": 24
      },
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b470adc_d3db4e80",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 228,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "can\u0027t / doesn\u0027t",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "274c208c_1ceb3738",
        "filename": "test/quantize_func_test.cc",
        "patchSetId": 12
      },
      "lineNbr": 229,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "better would be to put this in a DISABLED_ group to allow people to test without rebuilding and to avoid this code falling out of sync should the function be changed or deleted.",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a16ceb1e_c8d30cc1",
        "filename": "test/test.mk",
        "patchSetId": 12
      },
      "lineNbr": 165,
      "author": {
        "id": 5020
      },
      "writtenOn": "2017-05-31T15:32:43Z",
      "side": 1,
      "message": "you check for this in the code, but the file will never be enabled with it",
      "revId": "ef39c843a471fe85ecdb842365a8ed949d9236b3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}