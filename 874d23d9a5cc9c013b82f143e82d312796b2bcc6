{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9e931322_9d1a2a95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-03-30T11:44:29Z",
      "side": 1,
      "message": "This CL adds a unit test \u0027DropFrameEncodeTest\u0027 to reproduce the assertion failure related to buf-\u003edisplay_idx in init_gop_frames_for_tpl() and the segmentation fault reported in aomedia:3372 while encoding with --drop-frame\u003d1. We have locally validated the unit test with and without the fixes that were already submitted ([CL171841](https://aomedia-review.googlesource.com/c/aom/+/171841), [CL171842](https://aomedia-review.googlesource.com/c/aom/+/171842), [CL171843](https://aomedia-review.googlesource.com/c/aom/+/171843), [CL171844](https://aomedia-review.googlesource.com/c/aom/+/171844)). This unit test is currently disabled for speed presets \u003e\u003d3 due to the \u0027Floating point exception\u0027 reported in aomedia:3420. Once this is resolved, this unit test can be enabled for higher speed presets.",
      "revId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d969e27_1b2e27b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-03-30T23:19:59Z",
      "side": 1,
      "message": "Your plan sounds good. Thanks.",
      "parentUuid": "9e931322_9d1a2a95",
      "revId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "210bf278_fd07b5bf",
        "filename": "test/datarate_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-03-30T23:19:59Z",
      "side": 1,
      "message": "Should g_lag_in_frames be \u003e 0? Is it defined somewhere?",
      "range": {
        "startLine": 615,
        "startChar": 7,
        "endLine": 615,
        "endChar": 26
      },
      "revId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fe84755_99f954e9",
        "filename": "test/datarate_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-03-31T07:35:44Z",
      "side": 1,
      "message": "Yes, in the InitializeConfig() call (please check line 605), g_lag_in_frames will be set to 35 (default value) for good encoding mode.Â \nCall stack: InitializeConfig()-\u003eDefaultEncoderConfig()-\u003eaom_codec_av1_cx()-\u003eencoder_usage_cfg[]",
      "parentUuid": "210bf278_fd07b5bf",
      "range": {
        "startLine": 615,
        "startChar": 7,
        "endLine": 615,
        "endChar": 26
      },
      "revId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a869e3a_62ccf36c",
        "filename": "test/datarate_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-03-31T19:19:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1fe84755_99f954e9",
      "range": {
        "startLine": 615,
        "startChar": 7,
        "endLine": 615,
        "endChar": 26
      },
      "revId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "874d23d9a5cc9c013b82f143e82d312796b2bcc6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}