{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5b43e72d_7742118b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15075
      },
      "writtenOn": "2021-03-17T15:51:06Z",
      "side": 1,
      "message": "Hi Yunqing,\nThis patch abstracts output_pkt_list from cpi to AV1_PRIMARY(ppi). There were some places in the existing codebase where output_pkt_list was expected to be null for LAP. Since this element is now abstracted and common to both cpi and cpi_lap, it will not be null. To accommodate this behavior, this patch adds code to check if the context accessing output_pkt_list is not a LAP context before it does so.\n\nThis change is bit-exact and has been locally verified with bitstream match tests over a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --passes etc. \n\nPlease review.",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9853dd3_0db866f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-17T21:26:28Z",
      "side": 1,
      "message": "I saw cpi-\u003elap_enabled was used in the checking. Should cpi-\u003ecompressor_stage \u003d\u003d LAP_STAGE be used? Could you double check?",
      "parentUuid": "5b43e72d_7742118b",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0d220c0_4a1189d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15075
      },
      "writtenOn": "2021-03-18T05:00:47Z",
      "side": 1,
      "message": "Hi Yunqing,\nSince these checks were put in firstpass.c, this code will always be accessed by the stat_generation_stage. Thus, checking lap_enabled or compressor_stage\u003d\u003dLAP_STAGE will have the same impact. As we wanted the stats to not be output when LAP is enabled, we thought it would be more explicit to check lap_enabled instead of compressor_stage. Please let us know your thoughts. Thanks.",
      "parentUuid": "b9853dd3_0db866f6",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e4e2d2a_a56009fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-18T16:24:43Z",
      "side": 1,
      "message": "Can lap_enabled also be true for first pass of 2-pass encoding case? Asked this because I noticed we use (cpi-\u003elap_enabled \u0026\u0026 cpi-\u003ecompressor_stage \u003d\u003d LAP_STAGE) in the code.",
      "parentUuid": "f0d220c0_4a1189d9",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8f84373_c026b5d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15075
      },
      "writtenOn": "2021-03-19T04:22:03Z",
      "side": 1,
      "message": "Hi Yunqing,\nlap_enabled cannot be true for 2-pass mode of operation. lap_enabled is only set to 1 if num_lap_buffers are greater than 0(this code is present in av1_create_compressor), and num_lap_buffers can only be \u003e0 if pass\u003d\u003d0(for 2-pass the variable pass can either be 1 or 2). This code is present in encoder_init(). For clarity please take a look at the table below:\n\n Context          Mode    pass  lap_enabled  compressor_stage  stat_gen_stage  stat_consumption_stage\n cpi              2-pass   1        0          ENCODE_STAGE       True               False\n cpi (Separate    \n instance         2-pass   2        0          ENCODE_STAGE       False              True\n from above)\n cpi_lap          1-pass   0        1            LAP_STAGE        True               False\n cpi              1-pass   0        1          ENCODE_STAGE       False              True\n\nFrom the above table we can see that there are two conditions on which we can distinguish between AV1_COMP of the first pass(ie; --passes\u003d2 and --pass\u003d1) and AV1_COMP of the single pass lap stats generation stage(ie; cpi_lap for --passes\u003d1). These conditions are below:\n1. lap_enabled \u003d\u003d 0 indicates the context is of first pass. This is because lap_enabled is not set for 2-pass mode of operation.\n2. compressor_stage \u003d\u003d LAP_STAGE indicates that the context is of single pass LAP(cpi_lap). This is because even for pass\u003d\u003d1 the variable compressor_stage is set to ENCODE_STAGE.\n\nWe want to distinguish between the two contexts because single pass lap should not output any stat packets to the application(as they are stored internally).\n\nWe chose to go with condition 1 as it was more explicit with respect to the intent behind putting that check.\n\nRegarding the following check: cpi-\u003elap_enabled \u0026\u0026 cpi-\u003ecompressor_stage \u003d\u003d LAP_STAGE; as can be seen from the table above, it is redundant. It can be replaced with cpi-\u003ecompressor_stage \u003d\u003d LAP_STAGE. We will do this cleanup in future CLs. \n\nPlease let us know your thoughts. Thanks.",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4af99b75_7c12c555",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-19T04:33:22Z",
      "side": 1,
      "message": "Thanks for the detailed explanation! Sounds good.",
      "parentUuid": "e8f84373_c026b5d9",
      "revId": "1330bb996736f5adf56e77de28aa3d407b63bd53",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}