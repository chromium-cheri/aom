{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b5949061_98d93dfd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-23T16:02:38Z",
      "side": 1,
      "message": "1. I suggest adding the test that uses the new test vector in this CL. Can we do that?\n\n2. Add \"Bug: aomedia:3278\" to link this CL to the bug aomedia:3278. This is especially helpful if we can\u0027t add the test in this CL, because we can link the CL that adds the test to the same bug report.",
      "revId": "5eff92df6c42032fe0a5fb821487ed53435b0f61",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "348c0e39_833ddc69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-23T13:10:28Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank, James,\n\nThis CL adds a test vector \u0027av1-1-b8-16-intra_only-intrabc-extreme-dv.ivf\u0027 to kAV1TestVectors[]\nto validate single and row multithreaded decoding when intraBC dv points to a region beyond the default top-right region. \n\nAbove mentioned stream is generated using the recipe below by forcing intraBC dvs beyond default top-right region in the encoder: \n./aomenc wikipedia_420.y4m -o av1-1-b8-16-intra_only-intrabc-extreme-dv.ivf --allintra --cpu-used\u003d6 --sb-size\u003d64 --cq-level\u003d29 --limit\u003d2\n\nWe have locally validated that the thread sanitizer/mismatch issues are caught in the absence of the decoder fix (https://aomedia-review.googlesource.com/c/aom/+/159821) with this test vector in presence of the changes in the decoder library as per the CL (https://aomedia-review.googlesource.com/c/aom/+/159901).\n\nPlease review.\n\nRegards,\nMudassir\n",
      "revId": "5eff92df6c42032fe0a5fb821487ed53435b0f61",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e067b8f4_c55a8e71",
        "filename": "test/test-data.sha1",
        "patchSetId": 5
      },
      "lineNbr": 570,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-23T16:02:38Z",
      "side": 1,
      "message": "The files here are not listed consistently in alphabetical order, so it is fine to add the new files at the end.",
      "revId": "5eff92df6c42032fe0a5fb821487ed53435b0f61",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48d7360_e5278186",
        "filename": "test/test_data_util.cmake",
        "patchSetId": 5
      },
      "lineNbr": 532,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-23T16:02:38Z",
      "side": 1,
      "message": "The files here are apparently listed in alphabetical order, so we should add the new files right before \"av1-1-b8-22-svc-L2T1.ivf\".",
      "revId": "5eff92df6c42032fe0a5fb821487ed53435b0f61",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6704e9f_6b864403",
        "filename": "test/test_vectors.cc",
        "patchSetId": 5
      },
      "lineNbr": 263,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-23T16:02:38Z",
      "side": 1,
      "message": "Add the new file before \"av1-1-b8-22-svc-L1T2.ivf\", in alphabetical order.",
      "revId": "5eff92df6c42032fe0a5fb821487ed53435b0f61",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}