{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "12c6e231_cd9b6cd6",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-05-11T14:45:30Z",
      "side": 1,
      "message": "For non-MSVC compilers, we set the C and C++ standards flags (lines 316-326). For symmetry, it seems that we should also set the C and C++ standards flags for MSVC.\n\nMSVC doesn\u0027t have a flag for C standards. (One reason may be that it still doesn\u0027t fully support C99.) So we can only set the C++ standard, and the minimum C++ standard version we can set is C++14.",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 326,
        "endChar": 9
      },
      "revId": "47c9c93f7850744a55ecb34f8ce4388cf110352d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00b32c4e_826b50c1",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-05-11T14:54:06Z",
      "side": 1,
      "message": "Correction: My comment \"MSVC doesn\u0027t have a flag for C standards.\" is incorrect. MSVC has /std:c11 and /std:c17.\n\nBut it doesn\u0027t have /std::c99. The documentation says \"The compiler doesn\u0027t implement several required features of C99, so it isn\u0027t possible to specify C99 conformance, either.\"",
      "parentUuid": "12c6e231_cd9b6cd6",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 326,
        "endChar": 9
      },
      "revId": "47c9c93f7850744a55ecb34f8ce4388cf110352d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}