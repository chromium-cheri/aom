{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6b3dabc7_2daa9229",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-18T18:56:13Z",
      "side": 1,
      "message": "Chi Yo: Please take a look. The following CLs may be useful as the background:\n\nYou added chroma_intra_pruning_with_hog in https://aomedia-review.googlesource.com/c/aom/+/124061.\n\nVenkata added prune_chroma_modes_using_luma_winner in https://aomedia-review.googlesource.com/c/aom/+/131561.",
      "revId": "da6d921a8860c649fd48d694c73f775e6683e132",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c39a05e_f445ee8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-05-18T05:27:30Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nThe sf chroma_intra_pruning_with_hog prunes the directional chroma intra modes using HOG data. Since the sf prune_chroma_modes_using_luma_winner already constrains the number of chroma directional mode evaluations to a maximum of 1, the HOG computation and the associated pruning logic (i.e., chroma_intra_pruning_with_hog sf) does not seem to help the chroma mode evaluation (in terms of speed-quality trade-off). Hence, in this CL we have disabled the sf chroma_intra_pruning_with_hog when prune_chroma_modes_using_luma_winner is enabled.\n\nFor AVIF still-image encode with tune\u003dpsnr,\n          Instruction Count\n           / Encode Time                BD-Rate Loss(%)\ncpu-used     Reduction(%)    psnr      avg.psnrCb  avg.psnrCr  ssim\n   4          -0.166        -0.1053    0.0101     -0.1264     -0.1106\n   5          -0.257        -0.1262   -0.2161\t  -0.3359     -0.1386\n   6           1.254        -0.1085   -0.0115     -0.1366     -0.0972\n   7          -0.408        -0.3400   -0.0883\t  -0.3082     -0.3389\n   8          -0.335        -0.0242    0.0423\t  -0.0554     -0.0218\n\nFor AVIF still-image encode with tune\u003dssim,\n          Instruction Count\n           / Encode Time                BD-Rate Loss(%)\ncpu-used     Reduction(%)    psnr      avg.psnrCb  avg.psnrCr  ssim\n   4          -0.167        -0.1070   -0.0427     –0.0815     -0.1351\n   5          -0.236        -0.1118    0.1784\t  -0.0440     -0.1298\n   6           1.270        -0.1162    0.1699     -0.0159     -0.1338\n   7          -0.486        -0.3627   -0.2061\t  -0.3080     -0.3639\n   8          -0.354         0.0115    0.1554\t   0.0945      0.0055\n\nIn the above data, instruction count reduction is quoted for speed \u003c6 and encode-time reduction is quoted for speed\u003e\u003d6.\n\nFollowing are the instruction count reduction results when libaom allintra frame encoding (50 frames) was tested for a borg setup. \n          Instruction Count             BD-Rate Loss(%)      \ncpu-used     Reduction(%)    avg.psnr  avg.psnrCb avg.psnrCr ovr.psnr  ssim\n   4\t      -0.233        -0.1447   -0.1110    -0.2955    -0.1442   -0.1657\n   5\t      -0.379        -0.1578   -0.1825    -0.3506    -0.1587   -0.1804\n   6\t      -0.021        -0.1564   -0.1058    -0.4224    -0.1552   -0.1658\n   7\t      -0.871        -0.2926   -0.1696    -0.4539    -0.2920   -0.2903\n   8\t      -0.885        -0.0294   -0.0395    -0.2008    -0.0295   -0.0282\n\nFrom the above data, the CL has given speed-up or quality improvement (i.e., better quality-speed trade-off) for speed 4, 5, 6 and 7 presets. Whereas for speed 8, the speed/trade-off data is slightly worse. Given the impact for speed\u003d4,5,6,7 presets, please let us know your thoughts on the CL.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027 and \u0027RT\u0027 encoding modes for a few contents with different encoding configurations.\n\nIn the commit message, BD rate impact column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using the command:\n$ perf stat -e instructions:u ./aomenc …\n\nAlternatively, we also tried disabling the sf prune_chroma_modes_using_luma_winner (instead of chroma_intra_pruning_with_hog sf) and observed that speed and quality data is not encouraging. The relevant  speed and quality data is summarized below:\n\nFor AVIF still-image encode with tune\u003dpsnr,\n\n          Instruction Count\n           / Encode Time                BD-Rate Loss(%)\ncpu-used     Reduction(%)    psnr     avg.psnrCb  avg.psnrCr  ssim\n   4          -9.132        -0.1655  -1.3578     -1.6692     -0.1845\n   5          -9.246        -0.1796  -1.5203     -1.9376     -0.2117\n   6         -13.931        -0.1080  -0.9702     -1.0121     -0.1524\n   7         -18.870        -0.0447   0.0709      0.0385     -0.1259\n   8         -13.552        -0.0359  -0.0271     -0.0484     -0.0426\n\nIn the above data, instruction count reduction is quoted for speed \u003c6 and encode-time reduction is quoted for speed\u003e\u003d6.\n\nPlease review and let us know your opinion on this change. \n\nRegards,\nMudassir\n",
      "revId": "da6d921a8860c649fd48d694c73f775e6683e132",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c25001b7_58fe2c93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-18T18:56:13Z",
      "side": 1,
      "message": "This looks good to me, but I\u0027d like Chi Yo to also take a look. I have one question.",
      "revId": "da6d921a8860c649fd48d694c73f775e6683e132",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91ac1c4c_0f5d39a9",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 2
      },
      "lineNbr": 2040,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-18T18:56:13Z",
      "side": 1,
      "message": "Note that we call set_good_speed_features_framesize_independent() or set_allintra_speed_features_framesize_independent() here.",
      "revId": "da6d921a8860c649fd48d694c73f775e6683e132",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "242f628a_40ac319f",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 2
      },
      "lineNbr": 2157,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-18T18:56:13Z",
      "side": 1,
      "message": "Mudassir, Chi Yo: I am wondering if this is the best place to disable chroma_intra_pruning_with_hog.\n\nIf we disable chroma_intra_pruning_with_hog here, this will potentially affect both the ALLINTRA and GOOD modes (see my Note at line 2040 above). In the current implementation, this will only affect the ALLINTRA mode because only the ALLINTRA mode sets prune_chroma_modes_using_luma_winner to 1. Would it be clearer to move this to the set_allintra_speed_features_framesize_independent() function? Or do you think it is better to leave this code here in case the GOOD mode may also set prune_chroma_modes_using_luma_winner to 1 in the future?",
      "revId": "da6d921a8860c649fd48d694c73f775e6683e132",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}