{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77c60b18_732beac1",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1428,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-11-17T19:46:00Z",
      "side": 1,
      "message": "more descriptive name pls",
      "range": {
        "startLine": 1428,
        "startChar": 6,
        "endLine": 1428,
        "endChar": 14
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c021b253_4eac6867",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1428,
      "author": {
        "id": 21552
      },
      "writtenOn": "2020-11-17T21:11:07Z",
      "side": 1,
      "message": "Should be removed in next patch.",
      "parentUuid": "77c60b18_732beac1",
      "range": {
        "startLine": 1428,
        "startChar": 6,
        "endLine": 1428,
        "endChar": 14
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec847b3_24566d43",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1429,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-11-17T19:46:00Z",
      "side": 1,
      "message": "Pls use a more descriptive variable name: \"all_restore_none\"?",
      "range": {
        "startLine": 1429,
        "startChar": 7,
        "endLine": 1429,
        "endChar": 13
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e536214_631a57ff",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1429,
      "author": {
        "id": 21552
      },
      "writtenOn": "2020-11-17T21:11:07Z",
      "side": 1,
      "message": "Should be removed in next patch.",
      "parentUuid": "2ec847b3_24566d43",
      "range": {
        "startLine": 1429,
        "startChar": 7,
        "endLine": 1429,
        "endChar": 13
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04861616_e0a57132",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1430,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-11-17T19:46:00Z",
      "side": 1,
      "message": "The logic has gotten really long to follow now. Maybe good to subsequently create some helper functions (later patches).",
      "range": {
        "startLine": 1430,
        "startChar": 0,
        "endLine": 1430,
        "endChar": 45
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b55b65b_f4041ee1",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1430,
      "author": {
        "id": 21552
      },
      "writtenOn": "2020-11-17T21:11:07Z",
      "side": 1,
      "message": "Definitely! I\u0027m planning out some helper functions as I work on the other filters to see what the merging processes have in common.",
      "parentUuid": "04861616_e0a57132",
      "range": {
        "startLine": 1430,
        "startChar": 0,
        "endLine": 1430,
        "endChar": 45
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57e72287_e398d764",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1450,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-11-17T19:46:00Z",
      "side": 1,
      "message": "I\u0027m not exactly clear on \u0027all_rn\u0027 case here.\nCan you explain briefly the logic for a mix of NONE and WIENER types in a stack?",
      "range": {
        "startLine": 1450,
        "startChar": 8,
        "endLine": 1450,
        "endChar": 14
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f313eb3_61151711",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1450,
      "author": {
        "id": 21552
      },
      "writtenOn": "2020-11-17T21:11:07Z",
      "side": 1,
      "message": "As I am thinking of it now, there are four options every time a unit is processed. From unit-specific Wiener filter and RESTORE_NONE, one or the other will be chosen as having the lowest cost. Then: \n1) Initial unit type is RESTORE_WIENER or RESTORE_NONE. The stack is empty, so we push the current unit onto the stack.\n2) Initial unit type is RESTORE_WIENER. Merging with the current stack filter isn\u0027t beneficial, so we clear the stack and push the current unit onto the stack.\n3) Initial unit type is RESTORE_WIENER. Merging with the current stack is beneficial, so we replace the filter for every unit in the stack with the new merged filter and push the current unit onto the stack.\n4) Initial unit type is RESTORE_NONE. Merging with the current stack filter (so, using the current unit\u0027s pixel statistics along with those in the stack to create a merged filter) isn\u0027t beneficial, but future RESTORE_WIENER filters might want to merge, so we push the current unit onto the stack without clearing it first. \nAfter we have attempted to merge a RESTORE_NONE unit and failed, it is unlikely that any other merge filter calculated from this stack as more units are added will be beneficial to this unit. Therefore we shouldn\u0027t include RESTORE_NONE units in the stack when collecting pixel statistics or updating the stack - that would only make the filter more general and therefore less useful. \nHowever, if the first unit on the stack is RESTORE_NONE, it never had the chance to merge. There\u0027s a chance that using a Wiener filter on it and the subsequent unit with the second unit only having the cost of merge indicator will produce a lower cost. So if the stack is composed entirely of RESTORE_NONE units (which is indicated by all_rn), then we collect the pixel statistics for all of those units along with the current unit and attempt to find a merged filter with a lower cost. This continues until the current unit has initial unit type of RESTORE_WIENER, upon which we have given all RESTORE_NONE units a chance to merge and can now ignore them.\n\nAs I type this, I\u0027m realizing that it would be neater to only push RESTORE_NONE units onto the stack if the stack is empty, as all subsequent units are getting the chance to merge - that would get rid of all_rn and first_rw completely if I\u0027m correct.\n\nThere could certainly be other flaws in my logic, so let me know if you think this is incorrect ðŸ˜Š",
      "parentUuid": "57e72287_e398d764",
      "range": {
        "startLine": 1450,
        "startChar": 8,
        "endLine": 1450,
        "endChar": 14
      },
      "revId": "42e16dfaeae4a72e03d898a12b7208bbf08dd975",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}