{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e791bfcd_4bbe33e0",
        "filename": "av1/encoder/arm/neon/highbd_temporal_filter_common.h",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-01-23T19:19:57Z",
      "side": 1,
      "message": "Add a trailing \u0027_\u0027",
      "revId": "a36eba5063ac058c6939ea079c76e0ad9403b393",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f498df42_5cb80a92",
        "filename": "av1/encoder/arm/neon/highbd_temporal_filter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 235,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-01-23T19:19:57Z",
      "side": 1,
      "message": "maybe apply/do_temporal_filtering to make it more specific? Although it\u0027s forced inline the name is fairly generic given all the types of filtering done in the codec.",
      "range": {
        "startLine": 235,
        "startChar": 2,
        "endLine": 235,
        "endChar": 14
      },
      "revId": "a36eba5063ac058c6939ea079c76e0ad9403b393",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a27d8ffd_645ab3fc",
        "filename": "av1/encoder/arm/neon/highbd_temporal_filter_sve.c",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-01-23T19:19:57Z",
      "side": 1,
      "message": "this could be `frame_abs_diff_stride` to match the corresponding parameter.",
      "range": {
        "startLine": 33,
        "startChar": 51,
        "endLine": 33,
        "endChar": 61
      },
      "revId": "a36eba5063ac058c6939ea079c76e0ad9403b393",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c3cc32e_8323fce3",
        "filename": "av1/encoder/arm/neon/highbd_temporal_filter_sve.c",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-01-23T19:19:57Z",
      "side": 1,
      "message": "add `assert.h`. The inner ()s could be removed, but for an assert this is fine.",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 8
      },
      "revId": "a36eba5063ac058c6939ea079c76e0ad9403b393",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f11fb1d3_d14797e0",
        "filename": "av1/encoder/arm/neon/highbd_temporal_filter_sve.c",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-01-23T19:19:57Z",
      "side": 1,
      "message": "prefer preincrement, though it doesn\u0027t make a difference here. Also use `uint32_t` to match the `block_height` parameter.",
      "range": {
        "startLine": 134,
        "startChar": 50,
        "endLine": 134,
        "endChar": 56
      },
      "revId": "a36eba5063ac058c6939ea079c76e0ad9403b393",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}