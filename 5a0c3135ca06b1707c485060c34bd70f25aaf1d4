{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e30f3b3e_eee4b341",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-11-12T00:27:06Z",
      "side": 1,
      "message": "I can\u0027t verify if this is the right fix, but I\u0027m assuming that the bug is caused by Visual Studio not emitting an external definition when inline is used.",
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4faf1754_0f3c4236",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-11-12T01:17:57Z",
      "side": 1,
      "message": "Also, I might be unresponsive until tomorrow evening: I\u0027m on the east coast and I fly home tomorrow. Sorry!",
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ab48aa_b845246c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-11-12T02:04:37Z",
      "side": 1,
      "message": "fwiw the patch does clear the build error",
      "parentUuid": "4faf1754_0f3c4236",
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b56151e_df573269",
        "filename": "av1/common/reconinter_template.inc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-11-12T01:17:23Z",
      "side": 1,
      "message": "This doesn\u0027t look correct. Should it be:\n\n#if defined(_MSC_VER)\n...\n#else\n...\n#endif\n\n?\n\nIf it is correct, and I\u0027m simply not understanding, some more info about why it\u0027s necessary only for the encoder would be informative.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6b5933e_8feb27e6",
        "filename": "av1/common/reconinter_template.inc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-11-12T02:39:08Z",
      "side": 1,
      "message": "\u003e This doesn\u0027t look correct. Should it be:\n\u003e \n\u003e #if defined(_MSC_VER)\n\u003e ...\n\u003e #else\n\u003e ...\n\u003e #endif\n\u003e \n\u003e ?\n\u003e \n\u003e If it is correct, and I\u0027m simply not understanding, some more info about why it\u0027s necessary only for the encoder would be informative.\n\nI think it might be the static part and the function only being used in one module for the decoder.",
      "parentUuid": "0b56151e_df573269",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3397dab_2b78f7b9",
        "filename": "av1/common/reconinter_template.inc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-11-12T05:48:58Z",
      "side": 1,
      "message": "I\u0027ll submit this because it fixes the build, but I think a more robust solution will be to always make the implementation static inline and in the encoder case define a public function that calls it. I could see the Visual Studio issue occurring in other compilers depending on the order of the optimization passes.",
      "parentUuid": "e6b5933e_8feb27e6",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7af6037e_1c32e215",
        "filename": "av1/common/reconinter_template.inc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-11-16T18:07:23Z",
      "side": 1,
      "message": "Addressed in https://aomedia-review.googlesource.com/c/aom/+/166481.",
      "parentUuid": "a3397dab_2b78f7b9",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 27,
        "endChar": 10
      },
      "revId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "5a0c3135ca06b1707c485060c34bd70f25aaf1d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}