{
  "comments": [
    {
      "key": {
        "uuid": "1eb7ac29_337d549f",
        "filename": "av1/common/onyxc_int.h",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 5215
      },
      "writtenOn": "2017-10-31T15:35:52Z",
      "side": 1,
      "message": "This is fine for GCC but isn\u0027t going to help with clang. According to [1] anyway; maybe my searches are just coming up empty on behavior with the comment method.\n\nI see we already have several instances in the code, but everywhere else uses:\n\n// fallthrough intended\n\nSo just the one nit: Please use the same comment here to be consistent.\n\n[1] https://clang.llvm.org/docs/AttributeReference.html#fallthrough-clang-fallthrough",
      "range": {
        "startLine": 979,
        "startChar": 6,
        "endLine": 979,
        "endChar": 20
      },
      "revId": "361765c2dab1a06115fc05065d766c202e852d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c75801bb_8139e112",
        "filename": "av1/common/onyxc_int.h",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-10-31T16:46:37Z",
      "side": 1,
      "message": "Indeed, I first tried with \"fallthrough intended\"\nHowever, gcc doesn\u0027t recognize it and I still get the warning :-/",
      "parentUuid": "1eb7ac29_337d549f",
      "range": {
        "startLine": 979,
        "startChar": 6,
        "endLine": 979,
        "endChar": 20
      },
      "revId": "361765c2dab1a06115fc05065d766c202e852d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd1b1cf5_8c78602d",
        "filename": "av1/common/onyxc_int.h",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-10-31T18:28:22Z",
      "side": 1,
      "message": "I could also modify all the \"fallthrough intended\" to \"fallthrough\". I\u0027m not very fond of making the comments gcc-specific, however this warning is getting *really* annoying.",
      "parentUuid": "c75801bb_8139e112",
      "range": {
        "startLine": 979,
        "startChar": 6,
        "endLine": 979,
        "endChar": 20
      },
      "revId": "361765c2dab1a06115fc05065d766c202e852d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28cf4a8d_3711bbc9",
        "filename": "av1/common/onyxc_int.h",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 5215
      },
      "writtenOn": "2017-10-31T18:42:11Z",
      "side": 1,
      "message": "I\u0027m not a fan of that either, but it would be nice to add -Wimplicit-fallthrough to the list of warnings we know should not be triggered. It could then be added to the default set in the CMake build which would eventually allow Jenkins the ability to keep this clean going forward (if/when Jenkins uses a new enough GCC release).\n\nDo you mind adding those into this patch and taking care of it in this one go?",
      "parentUuid": "dd1b1cf5_8c78602d",
      "range": {
        "startLine": 979,
        "startChar": 6,
        "endLine": 979,
        "endChar": 20
      },
      "revId": "361765c2dab1a06115fc05065d766c202e852d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}