{
  "comments": [
    {
      "key": {
        "uuid": "dab4150e_86ef245a",
        "filename": "aom_dsp/noise_util.c",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 5187
      },
      "writtenOn": "2019-05-09T21:50:50Z",
      "side": 1,
      "message": "Can c[0] and c[1] be negative? If so, we may need to take absolute value.",
      "range": {
        "startLine": 99,
        "startChar": 5,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "59454e266c62ff468fb6de58c9342103d6e4cac2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b33bcc_a50e0ff9",
        "filename": "aom_dsp/noise_util.c",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-05-09T22:50:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab4150e_86ef245a",
      "range": {
        "startLine": 99,
        "startChar": 5,
        "endLine": 100,
        "endChar": 43
      },
      "revId": "59454e266c62ff468fb6de58c9342103d6e4cac2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03d36f6d_69b16420",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 7
      },
      "lineNbr": 1534,
      "author": {
        "id": 5187
      },
      "writtenOn": "2019-05-09T21:50:50Z",
      "side": 1,
      "message": "I think we can simply add \"if (sum \u003c 1e-4) return;\" here.",
      "range": {
        "startLine": 1534,
        "startChar": 2,
        "endLine": 1534,
        "endChar": 3
      },
      "revId": "59454e266c62ff468fb6de58c9342103d6e4cac2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f824061_3cec6f8a",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 7
      },
      "lineNbr": 1534,
      "author": {
        "id": 5187
      },
      "writtenOn": "2019-05-09T21:57:33Z",
      "side": 1,
      "message": "Sorry I was wrong. We need to normalize scores_2D[]. If it\u0027s not properly normalized, the prediction accuracy of the ML model may be affected. So we want the threshold for special handling as small as possible. What\u0027s the limit that we can do? 1e-64?",
      "parentUuid": "03d36f6d_69b16420",
      "range": {
        "startLine": 1534,
        "startChar": 2,
        "endLine": 1534,
        "endChar": 3
      },
      "revId": "59454e266c62ff468fb6de58c9342103d6e4cac2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57e5151c_5e81d347",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 7
      },
      "lineNbr": 1534,
      "author": {
        "id": 5005
      },
      "writtenOn": "2019-05-09T22:50:13Z",
      "side": 1,
      "message": "Given the limits of float: 1.2E-38 to 3.4E+38,the smallest we can do here is probably around 1e-4 for v4*v4 to not underflow.",
      "parentUuid": "9f824061_3cec6f8a",
      "range": {
        "startLine": 1534,
        "startChar": 2,
        "endLine": 1534,
        "endChar": 3
      },
      "revId": "59454e266c62ff468fb6de58c9342103d6e4cac2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}