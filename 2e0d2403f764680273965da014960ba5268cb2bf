{
  "comments": [
    {
      "key": {
        "uuid": "888d387f_d142389c",
        "filename": "av1/encoder/av1_quantize.c",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 9370
      },
      "writtenOn": "2018-04-14T10:10:32Z",
      "side": 0,
      "message": "I suppose right shifting `dequant_ptr[0]` erased lower bits and that might have led to the problem you mentioned in the commit message? Could you explain the problem further with sample input values since I added the bug in `highbd_quantize_fp_helper_c` function.\n\nAside from fixing the bug, I\u0027m a little concerned about increased operation inside loops (though it\u0027s just an additional left shift). But.. adding micro optimizations worsens code readability so I wonder if doing so should be convered in _SIMD_extension_name suffix functions. Ideally, branches should be removed and a number of executing operations should be reduced with SIMD instructions. It seems `highbd_quantize_fp_helper_c` function occupies around 10% of encoding time.",
      "revId": "2e0d2403f764680273965da014960ba5268cb2bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "922c0de2_d72668f5",
        "filename": "av1/encoder/av1_quantize.c",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 8900
      },
      "writtenOn": "2018-04-16T02:55:41Z",
      "side": 0,
      "message": "You are correct, right shifting is the root cause. The sample input is simply 0 values. You can re-play this by run the unit test after apply the patch set 1 in https://aomedia-review.googlesource.com/c/aom/+/55501\n\n./test_libaom --gtest_filter\u003d\"A*/*QuantizeTest.Z*\"\n\n\nI think this left shift is a must. And after the avx2 version are fixed, the encoding time of quantize will drop a lot.",
      "parentUuid": "888d387f_d142389c",
      "revId": "2e0d2403f764680273965da014960ba5268cb2bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}