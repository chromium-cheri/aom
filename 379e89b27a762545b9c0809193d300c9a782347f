{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "601f5e2b_a19cd17c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "It might have been better to split these two.",
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c668b64_73bf7dd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-10T14:48:07Z",
      "side": 1,
      "message": "This CL mainly addresses the memory allocation error check and function/param renaming following the convention. \n\nThe function re-use and memory allocation optimization, as well as changing all intermediate maps\u0027 value type from double to integer will be addressed in separate CLs.",
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cf09207_aef286d9",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 1400,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "these ()s can be removed.",
      "range": {
        "startLine": 1400,
        "startChar": 53,
        "endLine": 1400,
        "endChar": 54
      },
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6a5a0db_dc5a04d9",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "these can be declared in the loop and made const",
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "036d8eba_0a7b57c5",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "you should include string.h for `memcpy`, `memset`, etc.\n\nhttps://google.github.io/styleguide/cppguide.html#Include_What_You_Use",
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79c665fe_e85b75fe",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "the library shouldn\u0027t print error messages; you can add an assert for help in debugging.\n\nhttps://aomedia-review.googlesource.com/c/aom/+/169822",
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db34587a_358d2f2d",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 1
      },
      "lineNbr": 307,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-10T19:11:22Z",
      "side": 1,
      "message": "Capitals in the comment are fine. This is mismatched with the previous line now.",
      "range": {
        "startLine": 307,
        "startChar": 19,
        "endLine": 307,
        "endChar": 22
      },
      "revId": "379e89b27a762545b9c0809193d300c9a782347f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}