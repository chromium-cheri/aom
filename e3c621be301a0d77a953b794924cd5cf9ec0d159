{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "69ebf640_e5818a94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-03T22:47:03Z",
      "side": 1,
      "message": "Cheng: Thank you very much for the fix. I only skimmed through the code, but I\u0027d like to send you some preliminary comments first. I will review this carefully later.",
      "revId": "e3c621be301a0d77a953b794924cd5cf9ec0d159",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71f3ff50_97c8c998",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 3
      },
      "lineNbr": 263,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-03T22:47:03Z",
      "side": 1,
      "message": "Nit: This buffer is quite large (64 KB). We should allocate it using `aom_memalign()`.\n\nThe reason is that the stack space of a thread is finite. In fact, the default worker thread stack size in Google\u0027s internal thread pool is only 64 KB. So libaom should avoid using large local variables.",
      "revId": "e3c621be301a0d77a953b794924cd5cf9ec0d159",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b7a8d3a_66ee74ac",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 3
      },
      "lineNbr": 1429,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-03T22:47:03Z",
      "side": 1,
      "message": "Just curious: Does `av1_calc_mb_wiener_var_mt()` also have top-right dependency?",
      "revId": "e3c621be301a0d77a953b794924cd5cf9ec0d159",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7de51c96_033764b5",
        "filename": "av1/encoder/ethread.h",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-03T22:47:03Z",
      "side": 1,
      "message": "Nit: add a blank line?",
      "revId": "e3c621be301a0d77a953b794924cd5cf9ec0d159",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e05e718f_d63e56d8",
        "filename": "test/allintra_end_to_end_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-03T22:47:03Z",
      "side": 1,
      "message": "Please undo this change. This change has been replaced by the code below (lines 136-143).\n\nThe reason I added the code below is that our Jenkins TSan builds only run the tests that contain \"Thread\", \"Parallel\", etc. in their names. So I added a test suite named \"AV1MultiThreaded\" so that it will be run by our Jenkins TSan builds. (I copied this solution from test/test_vector_test.cc.)",
      "revId": "e3c621be301a0d77a953b794924cd5cf9ec0d159",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}