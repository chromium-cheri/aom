{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "42106ace_ee27aff2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2020-10-06T16:13:37Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nThis patch is related to the Issue 2843 (https://bugs.chromium.org/p/aomedia/issues/detail?id\u003d2843#c2). The issue is seen when must_find_valid_partition is 1 in key frames due to the absence of the reset of ‘quad_tree_idx’. The absence of reset was leading to crash in av1_intra_mode_cnn_partition(). We felt that ‘cnn_output_valid’ should also be reset as CNN evaluation may not happen at the time of branching. Though the issue is caught after the introduction of ‘prune_sub_8x8_partition_level’ sf, the issue is present in parent version as well (as per our understanding). \nAs per borg tests, the change is bit exact for speed preset 6 with no speed impact. For other presets 0 to 5, bit match is verified locally (for few test-cases). \nPlease let us know your opinion on this patch and merge the same in case of no issues.\nWe are also checking if setting of must_find_valid_partition to 1 could have been avoided and shall submit a patch based on the progress.\n\nThanks \u0026 Regards,\nVenkata.",
      "revId": "0ac125506bf399baca24f5b72bf84d7ffe9f8149",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "decee2ba_e1ae5ec4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-10-06T17:25:22Z",
      "side": 1,
      "message": "must_find_valid_partition was introduced as a workaround. It will make the logic much clear if this can be avoided.",
      "parentUuid": "42106ace_ee27aff2",
      "revId": "0ac125506bf399baca24f5b72bf84d7ffe9f8149",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "278239b3_24701463",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-10-06T17:25:22Z",
      "side": 1,
      "message": "Thanks for fixing the issue in the code base!",
      "revId": "0ac125506bf399baca24f5b72bf84d7ffe9f8149",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de6eba62_5287a957",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 3567,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-10-06T17:25:22Z",
      "side": 1,
      "message": "What does \"bsize \u003d\u003d BLOCK_64X64\" means here? If this is SB size, maybe use cm-\u003eseq_params.sb_size?",
      "range": {
        "startLine": 3567,
        "startChar": 35,
        "endLine": 3567,
        "endChar": 55
      },
      "revId": "0ac125506bf399baca24f5b72bf84d7ffe9f8149",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}