{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce99b65_05cba8e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-26T18:12:28Z",
      "side": 1,
      "message": "Satheesh: Thank you very much for implementing my proposal. Unfortunately I found a serious problem with this approach: the `av1_check_internal_width()` call in `set_size_literal()` may call longjmp() because cm-\u003eerror.setjmp is 1.\n\nI suggest we go back to patchset 3. It works, just that the error message is less informative. I am sorry to have made you do so much work on this CL.",
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "affb9599_9e1c353e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 33002
      },
      "writtenOn": "2023-12-27T14:49:33Z",
      "side": 1,
      "message": "We have taken care of your suggestions and the latest patchset is similar to patchset 3 plus the documentation changes for `av1_get_compressed_data()`. Please review.",
      "parentUuid": "4ce99b65_05cba8e7",
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67aac412_23f925a9",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 5
      },
      "lineNbr": 2131,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-26T18:12:28Z",
      "side": 1,
      "message": "Hmm... This one is problematic. If we expect this `aom_internal_error()` call to call `longjmp()`, then the `aom_internal_error()` call in `av1_tf_info_alloc()` has already called `longjmp()`.\n\nWe can partially solve this problem if we change `av1_tf_info_alloc()` to call the new `aom_set_error()` function in https://aomedia-review.googlesource.com/c/aom/+/185722. But we still need to make sure that this `aom_internal_error()` call can do a self copy safely.",
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c7ddaf_8465ccd8",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 5
      },
      "lineNbr": 2131,
      "author": {
        "id": 33002
      },
      "writtenOn": "2023-12-27T14:49:33Z",
      "side": 1,
      "message": "Thank you for pointing this out. We also see that `assert(!info-\u003esetjmp)` will fail in case we modify `av1_tf_info_alloc()` to call the new `aom_set_error()` function.",
      "parentUuid": "67aac412_23f925a9",
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc263240_b9b4e110",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 3841,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-26T16:08:20Z",
      "side": 1,
      "message": "Is the `\\c` intended?",
      "range": {
        "startLine": 3841,
        "startChar": 52,
        "endLine": 3841,
        "endChar": 54
      },
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8673975e_7ecea966",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 3841,
      "author": {
        "id": 33002
      },
      "writtenOn": "2023-12-27T14:49:33Z",
      "side": 1,
      "message": "Yes. `\\c` displays the argument \u003cword\u003e using a typewriter font in doxygen documentation which is used to refer to a word in code (please refer\nhttps://www.doxygen.nl/manual/commands.html#cmdc).",
      "parentUuid": "fc263240_b9b4e110",
      "range": {
        "startLine": 3841,
        "startChar": 52,
        "endLine": 3841,
        "endChar": 54
      },
      "revId": "5cef7b069f5b385f719662bd2fe77084df2e0dce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}