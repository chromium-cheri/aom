{
  "comments": [
    {
      "key": {
        "uuid": "a4b310e4_722bd7af",
        "filename": "obudec.c",
        "patchSetId": 18
      },
      "lineNbr": 355,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-03T22:21:47Z",
      "side": 1,
      "message": "I noticed that obudec_read_leb128 and aom_uleb_decode have their last two arguments in opposite orders. We should fix this (in a separate CL).",
      "range": {
        "startLine": 355,
        "startChar": 10,
        "endLine": 355,
        "endChar": 28
      },
      "revId": "aa49e1e318f5e8b8fdebe9d7f33a908f647555a5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84bc2791_034ef467",
        "filename": "obudec.c",
        "patchSetId": 18
      },
      "lineNbr": 372,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-03T22:21:47Z",
      "side": 1,
      "message": "Nit: Here it is sufficient to just check size + length_of_temporal_unit_size \u003e UINT32_MAX. We can omit the size \u003e UINT32_MAX check.\n\nSince \u0027size\u0027 is a leb128 value, it is at most 2^56 - 1. length_of_temporal_unit_size is at most 8, so size + length_of_temporal_unit_size (a unit64_t temporary) cannot possibly overflow.",
      "range": {
        "startLine": 372,
        "startChar": 8,
        "endLine": 372,
        "endChar": 77
      },
      "revId": "aa49e1e318f5e8b8fdebe9d7f33a908f647555a5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}