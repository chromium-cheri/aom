{
  "comments": [
    {
      "key": {
        "uuid": "0ee1256a_be313168",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-25T00:13:12Z",
      "side": 1,
      "message": "Nit: Don\u0027t abbreviate \"value\" to \"val\", unless there is a limit on the length of the \u0027desc\u0027 string.",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 72
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3e18e94_c8d671ce",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 210,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-08-25T01:02:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ee1256a_be313168",
      "range": {
        "startLine": 207,
        "startChar": 0,
        "endLine": 210,
        "endChar": 72
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f18a16e9_a7512a6b",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 664,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-25T00:13:12Z",
      "side": 1,
      "message": "Nit: It would be good to name the new args \"input_subsampling_x\" and \"input_subsampling_y\", to match the naming convension used for these three args.",
      "range": {
        "startLine": 662,
        "startChar": 0,
        "endLine": 664,
        "endChar": 69
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e686c8e_cf265cb4",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 664,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-08-25T01:02:08Z",
      "side": 1,
      "message": "I went with input_chroma_subsampling_x and input_chroma_subsampling_y.",
      "parentUuid": "f18a16e9_a7512a6b",
      "range": {
        "startLine": 662,
        "startChar": 0,
        "endLine": 664,
        "endChar": 69
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "358a98c3_1029fe65",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 681,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-25T00:13:12Z",
      "side": 1,
      "message": "The second one should be \u0026in_subsampling_y, not \u0026in_subsampling_x.",
      "range": {
        "startLine": 681,
        "startChar": 39,
        "endLine": 681,
        "endChar": 57
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e23b1244_3725317a",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 681,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-08-25T01:02:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "358a98c3_1029fe65",
      "range": {
        "startLine": 681,
        "startChar": 39,
        "endLine": 681,
        "endChar": 57
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "337cc4c4_7a965de1",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 2071,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-25T00:13:12Z",
      "side": 1,
      "message": "It may be worth commenting why stream-\u003echroma_subsampling_x and stream-\u003echroma_subsampling_y are not used here.\n\nAlso, I can guess that \"h\" stands for horizontal, which is why it\u0027s used with subsampling x, and similarly why \"v\" is used with subsampling y. But I don\u0027t know why we need to divide them by 2 (the \u003e\u003e 1).",
      "range": {
        "startLine": 2068,
        "startChar": 0,
        "endLine": 2071,
        "endChar": 60
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "787e10f8_df6f3010",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 2071,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-08-25T01:02:08Z",
      "side": 1,
      "message": "It matches existing usage. See:\nhttps://aomedia.googlesource.com/aom/+/master/common/y4minput.c#1124",
      "parentUuid": "337cc4c4_7a965de1",
      "range": {
        "startLine": 2068,
        "startChar": 0,
        "endLine": 2071,
        "endChar": 60
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee8ee707_dc127290",
        "filename": "apps/aomenc.c",
        "patchSetId": 5
      },
      "lineNbr": 2071,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-28T17:02:22Z",
      "side": 1,
      "message": "Thanks. The code in y4minput.c uses _y4m-\u003edst_c_dec_h \u003e\u003e 1. We use input.y4m.src_c_dec_h \u003e\u003e 1 here (note the \"dst\" vs. \"src\"). Is it because we are dealing with input chroma subsampling?",
      "parentUuid": "787e10f8_df6f3010",
      "range": {
        "startLine": 2068,
        "startChar": 0,
        "endLine": 2071,
        "endChar": 60
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d5fbd1_dd40a0bd",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 314,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-25T00:13:12Z",
      "side": 1,
      "message": "In av1/av1_cx_iface.c, the chroma_subsampling_x and chroma_subsampling_y fields of struct av1_extracfg have the \u0027int\u0027 type. The two fields here have the \u0027unsigned int\u0027 type. Should we use the same type?",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 314,
        "endChar": 36
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "027e5df6_c0a8dc2d",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 314,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-08-25T01:02:08Z",
      "side": 1,
      "message": "I wanted to use unsigned int everywhere, but the RANGE_CHECK macro used in av1_cx_iface.c won\u0027t work w/unsigned ints (const comparison warning; unsigned ints always \u003e\u003d 0). I guess I could do the range check without the macro. Would you prefer it if I changed it to do that instead of using the macro?",
      "parentUuid": "d7d5fbd1_dd40a0bd",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 314,
        "endChar": 36
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c3f61d8_0d0914b9",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 314,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-28T17:02:22Z",
      "side": 1,
      "message": "Thank you for the explanation. I found a RANGE_CHECK_HI macro that handles this case. We can use the unsigned int type and use RANGE_CHECK_HI to check that the maximum value is 1.",
      "parentUuid": "027e5df6_c0a8dc2d",
      "range": {
        "startLine": 313,
        "startChar": 0,
        "endLine": 314,
        "endChar": 36
      },
      "revId": "7dbe753eb1b23b0a4cd0e2ad40a3b43e25157f5d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}