{
  "comments": [
    {
      "key": {
        "uuid": "69d485d4_a61236c0",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5005
      },
      "writtenOn": "2017-03-24T20:03:30Z",
      "side": 1,
      "message": "does this function have to return uint64_t? if it is converted into int anyway, it might be better to return int directly?",
      "range": {
        "startLine": 80,
        "startChar": 1,
        "endLine": 81,
        "endChar": 76
      },
      "revId": "50371e91eed973c3b5db28d1b722c95f82b7a18b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29f2df4c_1a3e5324",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5111
      },
      "writtenOn": "2017-03-24T20:19:55Z",
      "side": 1,
      "message": "Worst case: 64x64 12 bit diffs squared \u003d 36 bits. So, technically, yes, and the cast to int by the caller is wrong (but highly unlikely ever to cause a problem).\n\nAn extremely rare overflow would at worst only cause a suboptimal strength to get selected, which can be safely ignored, but let\u0027s keep it safe for now and consider the unsafe option if we SIMD optimise this.",
      "parentUuid": "69d485d4_a61236c0",
      "range": {
        "startLine": 80,
        "startChar": 1,
        "endLine": 81,
        "endChar": 76
      },
      "revId": "50371e91eed973c3b5db28d1b722c95f82b7a18b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}