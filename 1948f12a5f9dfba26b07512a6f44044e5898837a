{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ed0f0b77_c7f850c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2021-05-17T15:53:20Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nThis patch modifies the reference picture management to be independent of stacks during FPMT. \nThe changes are cherry-picked from multiple commits on the research branch, the list of which is given in the commit message.\n\nPlease find the detailed borg result with CONFIG_FRAME_PARALLEL_ENCODE 1 (test) vs 0 (ref) below.\n\n         |            | Instruction Count |        BD-Rate Loss(%)       |\ncpu-used | Resolution |    Reduction(%)   | avg.psnr  ovr.psnr   ssim    |\n-------- | ---------- | ----------------- | --------  --------  -------- |\n   0     |  Average   |       0.691       | -0.0849   -0.0861   -0.0953  |\n   1     |  Average   |       0.320       | -0.1012   -0.1112   -0.1574  |\n   2     |  Average   |       0.767       | -0.0888   -0.0910   -0.1628  |\n   3     |  Average   |       0.190       | -0.1179   -0.1278   -0.1792  |\n   4     |  Average   |       0.246       | -0.1182   -0.1185   -0.1849  |\n   5     |  Average   |       0.346       | -0.1470   -0.1527   -0.1437  |\n   6     |  Average   |       0.148       | -0.1685   -0.1692   -0.2365  |\n   \nPlease find the CQP results with CONFIG_FRAME_PARALLEL_ENCODE 1 (test) vs 0 (ref) on a subset of hdres (10 contents) below.\n\n         |            | Instruction Count |        BD-Rate Loss(%)       |\ncpu-used | Resolution |    Reduction(%)   | avg.psnr  ovr.psnr   ssim    |\n-------- | ---------- | ----------------- | --------  --------  -------- |\n   0     |  Average   |       0.778       |  0.0269    0.0193    0.0201  |\n   1     |  Average   |       0.368       |  0.0033    0.0035   -0.0206  |\n   2     |  Average   |       0.687       | -0.0185   -0.0188   -0.0413  |\n   3     |  Average   |       0.572       | -0.2768   -0.2747   -0.2608  |\n   4     |  Average   |       0.446       | -0.1964   -0.1623   -0.2955  |\n   5     |  Average   |       0.198       | -0.1650   -0.1708   -0.1424  |\n   6     |  Average   |       0.115       | -0.1649   -0.1806   -0.1529  |\n   \nIn the commit message, BD rate impact column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc â€¦\n\nBit-match is locally verified (for CONFIG_FRAME_PARALLEL_ENCODE \u003d 0) for speed 0 to 6 on a few test cases. We have internally tested this patch with CONFIG_FRAME_PARALLEL_ENCODE set as 1 for compliance, for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --resize-mode, --superres-mode\u003d, --sb-size, --bit-depth etc.\n\nPlease review this patch.\n\nRegards,\nRemya",
      "revId": "1948f12a5f9dfba26b07512a6f44044e5898837a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d77d099b_5370cdcd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-05-19T04:32:26Z",
      "side": 1,
      "message": "Here are my thoughts regarding this CL. Please correct me if I am wrong.\nLooks like you are trying not to call av1_update_ref_frame_map() after encoding a frame, so this makes FP possible.\nMaybe we can achieve FP without this modification. For example, we encode frame 1, 3, 6 in parallel after encoding frame 2. Since 1 and 3 won\u0027t be used as reference frames, we don\u0027t need to update ref frame after their encoding (i.e. don\u0027t need to call av1_update_ref_frame_map()?) So, frame 1, 3, 6 use the same set of stacks (lst_stack/gld_stack/arf_stack) that are updated after frame 2 is done. There shouldn\u0027t be any dependency related to these stack update. Can this work?\n",
      "revId": "1948f12a5f9dfba26b07512a6f44044e5898837a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b393eb81_7d8d9e76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2021-05-19T05:29:07Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nYes, the reference pictures remain the same for frames 1, 3 and 6 when 1 and 3 are non-references. However, the state of the stacks (lst_stack/gld_stack/arf_stack) change across the three frames due to the presence of in-between show-existing frames (2 after 1 making 2 to move from arf_stack to lst_stack, 4 after 3 making 4 to move from arf_stack to lst_stack), due to which the mapping of reference pictures to reference frame slots change across these 3 frames. This makes the encode of 3 and 6 dependent on the state of the stack of the previous frames. Hence, we feel that using stack based approach may not work seamlessly for FP1.\nPlease let us know your opinion.\n\nRegards,\nRemya",
      "parentUuid": "d77d099b_5370cdcd",
      "revId": "1948f12a5f9dfba26b07512a6f44044e5898837a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251b1a51_7e1432d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-05-19T06:26:56Z",
      "side": 1,
      "message": "Thanks for the quick reply. In FP, we define the ref updating rule ourselves that can be different from the default one. Maybe we can think about a way to handle show-existing frame. For example, maybe we don\u0027t update ref frame for show-existing frame 2 and 4 as well?\nI thought about this. My concern is that using a different approach under a config flag may cause problem for us later. If we can find a way to build upon the existing stack-based implementation, I feel it would be better.\nStill not sure why this approach is fundamentally different from stack-based approach. Maybe we can borrow the idea from this CL about how ref is updated for involved frames (say, frame 1, (2), 3, (4)), and define an updating rule that works. Let me know if it is possible.",
      "parentUuid": "b393eb81_7d8d9e76",
      "revId": "1948f12a5f9dfba26b07512a6f44044e5898837a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9953769_854cb24c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-05-20T17:06:34Z",
      "side": 1,
      "message": "After further discussion in the meeting, we decided to submit this CL. Thanks.",
      "parentUuid": "251b1a51_7e1432d0",
      "revId": "1948f12a5f9dfba26b07512a6f44044e5898837a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}