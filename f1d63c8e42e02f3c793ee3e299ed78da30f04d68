{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80b37eb5_f6d89966",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14993
      },
      "writtenOn": "2022-04-13T19:29:40Z",
      "side": 1,
      "message": "Hi Wan-Teh, James, Frank,\n\nAs per our discussion in BUG\u003daomedia:3268, we considered the following approaches to extend the test coverage for screen contents being tested with multi-threaded encoding.\n\n1. Extend AVxEncoderThreadTest by introducing a screen content input and test multi-thread encoding as well as bit-match between different thread configurations. \n2. Extend ScreenContentToolsTestLarge by introducing a multi-threaded encoding as a separate test case.\n\nWe planned to pursue approach 1, but did not take-up the same as it required extensive code changes w.r.t. modifying the input video as a parameter, introducing the tune_content parameter etc. We went ahead with approach 2 as it was simple and straightforward to add a new test case here. We also thought of checking bit-match across threads in approach 2 but this was not taken up as the test is intended for testing the presence of screen content coding tools in the encoded bit-stream.\n\nWe have added ‘ScreenContentToolsTestLarge.MultiThreadEncodingTest’ by testing the input “desktop_credits.y4m” for multi-threaded encoding with AOM_CONTENT_DEFAULT. The tune parameter is kept as AOM_CONTENT_DEFAULT as ‘ScreenContentToolsTestLarge.ScreenContentToolsTest’ already mandates that this content should get detected as a screen content by the encoder.\n\nWe have also validated that this newly added test case is able to catch the double memory free issue reported in BUG\u003daomedia:3268 by testing this CL on top of the parent commit for the fix that was submitted. It is also validated that the crash is not seen with the submitted fix.\n\nPlease review this patch and let us know your opinions on the approach that we followed.\n\nRegards,\nJayasanker.\n",
      "revId": "f1d63c8e42e02f3c793ee3e299ed78da30f04d68",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61124f96_f6e62968",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-13T21:32:11Z",
      "side": 1,
      "message": "LGTM. I verified that the new test reproduced the double free.",
      "revId": "f1d63c8e42e02f3c793ee3e299ed78da30f04d68",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a02f16af_4d12b89e",
        "filename": "test/screen_content_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-04-13T19:27:28Z",
      "side": 1,
      "message": "Thread sanitizer tests are conditioned on having the word \u0027Thread\u0027 in the name of the test somewhere. Yunqing it might be good to audit the tests if MT has been used at all.",
      "revId": "f1d63c8e42e02f3c793ee3e299ed78da30f04d68",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d15b7a6c_adae4b87",
        "filename": "test/screen_content_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-13T21:37:28Z",
      "side": 1,
      "message": "Done. Renamed the test \"ScreenContentMultiThreadedEncoding\".",
      "parentUuid": "a02f16af_4d12b89e",
      "revId": "f1d63c8e42e02f3c793ee3e299ed78da30f04d68",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}