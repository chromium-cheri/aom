{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d0c06526_a855d0ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31042
      },
      "writtenOn": "2022-09-02T00:10:19Z",
      "side": 1,
      "message": "This change gives us ~3% boost.",
      "revId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "748fb270_9054b0ec",
        "filename": "aom_dsp/arm/sad4d_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-09-01T22:35:41Z",
      "side": 1,
      "message": "in mem_neon.h there\u0027s load_unaligned_u8_4x2(). Is dup expected to be faster than setting a single lane?",
      "revId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ae7143a_98e2ab56",
        "filename": "aom_dsp/arm/sad4d_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 31042
      },
      "writtenOn": "2022-09-01T23:57:58Z",
      "side": 1,
      "message": "It depends on whether the compiler is smart enough to work out that load_unaligned_u8_4x2() - as a whole - is totally destructive.\n\nIf you set a single lane (twice), you have a constructive operation that depends on the rest of the vector already being initialized somehow. If the compiler makes a mess of things (and recent-ish compilers do), the false dependency on the initial value of the vector means you end up with two merges instead of one.\n\nDup is an explicit dependency breaker and also avoids some awkward source code initializing the vector - before we set the lanes individually.",
      "parentUuid": "748fb270_9054b0ec",
      "revId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91bba5b7_896e05c0",
        "filename": "aom_dsp/arm/sad4d_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 31042
      },
      "writtenOn": "2022-09-02T00:05:11Z",
      "side": 1,
      "message": "I can\u0027t think of an instance where DUP followed by MOV[lane] will ever be slower than 2x MOV[lane].",
      "parentUuid": "2ae7143a_98e2ab56",
      "revId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0cd644a_3b47d91b",
        "filename": "aom_dsp/arm/sad4d_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-09-02T00:50:54Z",
      "side": 1,
      "message": "\u003e I can\u0027t think of an instance where DUP followed by MOV[lane] will ever be slower than 2x MOV[lane].\n\nThanks for the explanation. Maybe I\u0027ll look at some of the code generation for those functions.",
      "parentUuid": "91bba5b7_896e05c0",
      "revId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "79e54d310d406320dce8daa44a45e5e59b862364",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}