{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3ad32b7_66dc97b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-04-27T04:46:00Z",
      "side": 1,
      "message": "James, could you please check on the questions here? Thanks.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1b0b819_44556b9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-28T01:23:35Z",
      "side": 1,
      "message": "Is there a bug or doc around this change? It\u0027s always good to think about alternatives to extending the API if this is currently for testing purposes.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e418861c_c138ff1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T04:09:09Z",
      "side": 1,
      "message": "I didn\u0027t create a bug or doc. This intends to provide an API for an external model to help partition type selection. I am currently working on the implementation. I basically follow the previous vp9\u0027s pattern. If you think there is a better naming or syntax, I\u0027m glad to make the change. For example, instead of \"_t\", use C++ CamelCase.",
      "parentUuid": "d1b0b819_44556b9c",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15e4717a_1e1e8722",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-28T17:34:33Z",
      "side": 1,
      "message": "\u003e I didn\u0027t create a bug or doc. This intends to provide an API for an external model to help partition type selection. I am currently working on the implementation. I basically follow the previous vp9\u0027s pattern. If you think there is a better naming or syntax, I\u0027m glad to make the change. For example, instead of \"_t\", use C++ CamelCase.\n\nThanks, I wasn\u0027t thinking about vpx_ext_ratectrl.h when I made the comment. For the api would should be consistent with the current naming so _t is ok.",
      "parentUuid": "e418861c_c138ff1f",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54ae786a_bde90ec4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-04-28T17:44:51Z",
      "side": 1,
      "message": "thanks you both for double checking on this.",
      "parentUuid": "15e4717a_1e1e8722",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e229258_ca1893f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "Cheng: Please consider my review as supplemental, because I only checked a few aspects of the CL quickly.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46456a86_fa3fa8e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "Thanks for the review.",
      "parentUuid": "4e229258_ca1893f9",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28246e5e_2b7eb85e",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-28T17:47:44Z",
      "side": 1,
      "message": "like vpx, this interface should have its own abi value that contributes to the overall one.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "110c9832_a247c72b",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "Could you point me to an example?",
      "parentUuid": "28246e5e_2b7eb85e",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a661030b_c73a5194",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-28T20:13:45Z",
      "side": 1,
      "message": "\u003e Could you point me to an example?\n\nVPX_EXT_RATECTRL_ABI_VERSION [1] feeds into the overall ABI. Since this is a public structure changes to it and the related functions needs to be tracked for compatibility between versions.\n\nhttps://chromium.googlesource.com/webm/libvpx/+/refs/tags/v1.10.0/vpx/vpx_ext_ratectrl.h#28\nhttps://chromium.googlesource.com/webm/libvpx/+/refs/tags/v1.10.0/vpx/vpx_encoder.h#60",
      "parentUuid": "110c9832_a247c72b",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "478766b5_32c6ca31",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T23:54:43Z",
      "side": 1,
      "message": "Thank you!\nI added an ABI version for it.",
      "parentUuid": "a661030b_c73a5194",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9245cb70_60bf6a6c",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-23T01:29:41Z",
      "side": 1,
      "message": "function",
      "range": {
        "startLine": 22,
        "startChar": 19,
        "endLine": 22,
        "endChar": 26
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6d466bb_7955bf05",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-23T03:27:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9245cb70_60bf6a6c",
      "range": {
        "startLine": 22,
        "startChar": 19,
        "endLine": 22,
        "endChar": 26
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bed000ef_6fdbd7b7",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-23T01:29:41Z",
      "side": 1,
      "message": "It\u0027s unlikely to conflict, but technically _t is a reserved namespace. We\u0027re stuck with it in the api for now, but I think it would be good to normalize internal structures. The c++ style is one option we use in libwebp for instance:\nhttps://google.github.io/styleguide/cppguide.html#Type_Names",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eee5dd33_a8533a56",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-23T03:27:22Z",
      "side": 1,
      "message": "Do you suggest all the _t names be replaced?",
      "parentUuid": "bed000ef_6fdbd7b7",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc943f30_6eb5494e",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-27T03:06:32Z",
      "side": 1,
      "message": "It could be good to ping James to confirm this one.",
      "parentUuid": "eee5dd33_a8533a56",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52ed3547_bc4f5c87",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-04-28T01:21:16Z",
      "side": 1,
      "message": "\u003e It could be good to ping James to confirm this one.\n\nSorry I missed the update. In the internal code normalizing the struct naming would be a good cleanup. Anything that\u0027s part of the public API should be left as is for now.",
      "parentUuid": "dc943f30_6eb5494e",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8d202cb_3ce1a4a2",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "This sentence looks like an incomplete draft.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8eb3aad5_37e1de08",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "Yes. The \"func()\" has not been defined yet. So I just leave it as a placeholder.",
      "parentUuid": "b8d202cb_3ce1a4a2",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae018ea0_bf0fbb3f",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "Please add a WARNING or NOTE comment to say that new members may be added to this struct, but they must be added after existing members, and existing members must not be removed. Otherwise we need to bump the major version of libaom.\n\nThe reason this struct can be extended without breaking compatibility is that this struct is only allocated and provided (read only) to external model.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deb61aa9_91934fd8",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "Thanks, that\u0027s a good suggestion.\nI add a NOTE.",
      "parentUuid": "ae018ea0_bf0fbb3f",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10fc4ea1_34519632",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "This struct is filled in by libaom clients. If you think you may change the definition of this struct in the future, we should design this struct to allow it to be extended without breaking compatibility.",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67c38508_f733b544",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "I also add a NOTE for it.",
      "parentUuid": "10fc4ea1_34519632",
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7068e1_0d93e74d",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "Nit: This doesn\u0027t really matter, but usually \"_ptr\" is omitted in the names of pointer parameters. I am just wondering why only this pointer parameter has \"_ptr\" in its name.",
      "range": {
        "startLine": 95,
        "startChar": 40,
        "endLine": 95,
        "endChar": 44
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c50ab1a4_53aae9b0",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-28T18:14:16Z",
      "side": 1,
      "message": "IMPORTANT: Since aom_ext_part_model_t is already a pointer (void *, see line 31), does this parameter need to be a pointer to aom_ext_part_model_t?",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 26
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b268f4bd_3b9b4783",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "You\u0027re right. It should be aom_ext_par_model_t only, except the one in aom_ext_part_create_model_fn_t.",
      "parentUuid": "c50ab1a4_53aae9b0",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 26
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2d74808_69bc3884",
        "filename": "aom/aom_external_partition.h",
        "patchSetId": 4
      },
      "lineNbr": 95,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-04-28T18:47:20Z",
      "side": 1,
      "message": "I removed \"_ptr\" suffix.",
      "parentUuid": "8d7068e1_0d93e74d",
      "range": {
        "startLine": 95,
        "startChar": 40,
        "endLine": 95,
        "endChar": 44
      },
      "revId": "672294d3348f9133f71202fd6e380ca7dd0945e8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}