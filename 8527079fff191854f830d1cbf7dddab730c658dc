{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26405cc2_fa6a63e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-07-29T21:21:19Z",
      "side": 1,
      "message": "Hi Paul,\nI tested this CL on mixedformat1080.y4m\nThe with or without this CL, the\nkey frames appears at the same positions as follows and the coding stats are identical.\nKey frame positions.\n1:I\n51:I\n67:I\n83:I\n98:I\n114:I\n130:I\n146:I\n",
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2d1244b_e36f4f22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-07-29T21:51:52Z",
      "side": 1,
      "message": "For the one pass mode\nWith this CL, the key frame locations are|\n1:I\n    --\u003e missing 51:I \n67:I\n83:I\n98:I\n114:I\n130:I\n146:I\n\n51:I is missing because the define_kf_interval() assumes the current frame will not be the keyframe. Therefore, frames_to_key starts at one.\nThis is true for two pass mode. However, for one pass mode, we call define_kf_interval at the beginning of each GOP. If the first frame of the GOP should be key frame, we will miss that.\n\nAnyway, I will come-up with a follow-up CL to address that part if you guys think it\u0027s okay to check this in first.\n\nWithout this CL, the key frame locations are\n1:I\n52:I --\u003e off by one error\n67:I\n83:I\n98:I\n114:I\n130:I\n146:I\n\nI guess there is still some corner cases that I didn\u0027t notice.",
      "parentUuid": "26405cc2_fa6a63e9",
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2804d2_3ff1ff0d",
        "filename": "av1/encoder/firstpass.c",
        "patchSetId": 9
      },
      "lineNbr": 1445,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-07-30T03:06:48Z",
      "side": 1,
      "message": "It seems that the callers of av1_firstpass_info_peek() ensure this condition is true. If so, then we can remove this check or replace it with an assertion.",
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65c3939d_3910620c",
        "filename": "av1/encoder/firstpass.h",
        "patchSetId": 9
      },
      "lineNbr": 232,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-07-30T03:06:48Z",
      "side": 1,
      "message": "Nit: Align this with \"struct of firstpass_info.\" in the line above?",
      "range": {
        "startLine": 232,
        "startChar": 36,
        "endLine": 232,
        "endChar": 48
      },
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9154beac_1b64c42b",
        "filename": "av1/encoder/firstpass.h",
        "patchSetId": 9
      },
      "lineNbr": 339,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-07-30T03:06:48Z",
      "side": 1,
      "message": "Nit: This comment still has grammatical errors. 1) We need to add \"that\" or \"which\" before \"aims\". 2. After the word \"at\", we need to change \"replace\" to \"replacing\". Alternatively, we can change \"at\" to \"to\".\n\nOr maybe \"This is the first pass data structure intended to replace stats_in\"?",
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79814e77_305df0b3",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 9
      },
      "lineNbr": 62,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-07-30T03:06:48Z",
      "side": 1,
      "message": "Optional: Thank you for explaining that \"_sub\" means a sub function. This is an uncommon abbreviation, but I don\u0027t have a good suggestion. Maybe \"_new\" (with a comment to explain this is the new version of the function) or \"_v2\".",
      "range": {
        "startLine": 62,
        "startChar": 36,
        "endLine": 62,
        "endChar": 40
      },
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6da5ce5a_dcffe849",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 9
      },
      "lineNbr": 2707,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-07-30T03:06:48Z",
      "side": 1,
      "message": "I am just wondering why we subtract 1 here.",
      "range": {
        "startLine": 2707,
        "startChar": 59,
        "endLine": 2707,
        "endChar": 63
      },
      "revId": "8527079fff191854f830d1cbf7dddab730c658dc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}