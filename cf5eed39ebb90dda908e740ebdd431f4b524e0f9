{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2bf9c898_24e18231",
        "filename": "av1/encoder/lookahead.c",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T20:18:13Z",
      "side": 1,
      "message": "Here is the `aom_copy_metadata_to_frame_buffer()` source code:\n\n```\nint aom_copy_metadata_to_frame_buffer(YV12_BUFFER_CONFIG *ybf,\n                                      const aom_metadata_array_t *arr) {\n  if (!ybf || !arr || !arr-\u003emetadata_array) return -1;\n  if (ybf-\u003emetadata \u003d\u003d arr) return 0;\n  aom_remove_metadata_from_frame_buffer(ybf);\n  ybf-\u003emetadata \u003d aom_img_metadata_array_alloc(arr-\u003esz);\n  ...\n}\n```\n\nNote the `aom_remove_metadata_from_frame_buffer(ybf)` call.",
      "revId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f66d4ed2_1f19f584",
        "filename": "av1/encoder/lookahead.c",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T20:25:33Z",
      "side": 1,
      "message": "Looking at this closer, I found that the new code behaves differently from the original code under one condition: if `src-\u003emetadata` is a null pointer. In this case, the original code will remove metadata from \u0026buf-\u003eimg but the new code won\u0027t.\n\nSince I am not familiar with this code, I don\u0027t know whether `src-\u003emetadata` can be a null pointer here, so it is better to not touch this code.",
      "parentUuid": "2bf9c898_24e18231",
      "revId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6003c76a_b217ffef",
        "filename": "av1/encoder/lookahead.c",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 14148
      },
      "writtenOn": "2022-08-30T22:37:05Z",
      "side": 1,
      "message": "Hi! This is done like this so operations are atomic, the aom_remove_metadata_from_frame_buffer() will remove metadata from the frame_buffer to ensure its metadata is empty before proceeding (might carry metadata from previous frame if I remember correctly) and the aom_copy_metadata_to_frame_buffer() will add metadata for this frame_buffer, the copy_metadata() will still call the remove_metadata() internally for safety as we can\u0027t be sure the caller has removed it before, but we are also not sure there will be metadata to copy into this frame_buffer, so the copy_metadata() function ends and returns 0 to let you know nothing was copied on its input.",
      "parentUuid": "f66d4ed2_1f19f584",
      "revId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cf5eed39ebb90dda908e740ebdd431f4b524e0f9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}