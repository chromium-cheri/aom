{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "685d0264_d7452038",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-09-08T17:51:35Z",
      "side": 1,
      "message": "The structure `CdefSearchCtx` holds the buffers required during CDEF search. In the parent commit, these buffers were allocated and deallocated locally within `av1_cdef_search()`. In the event of an early termination during CDEF search, these allocated buffers would not be freed and would result in memory leaks. This CL refactors the above-mentioned buffer allocations by introducing a pointer to the `CdefSearchCtx` structure in `AV1_COMP`. This will facilitate the deallocation of the CDEF search context buffers in `encoder_destroy()` thereby preventing any possible leaks. Also, `CHECK_MEM_ERROR()` is now used for allocating the CDEF search context buffers in `cdef_alloc_data()`.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc.",
      "revId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "822bc9af_a236814a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-09-08T22:30:37Z",
      "side": 1,
      "message": "looks good.",
      "parentUuid": "685d0264_d7452038",
      "revId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "013a408b_49a7767c",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 6
      },
      "lineNbr": 819,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-09-08T22:30:37Z",
      "side": 1,
      "message": "For better knowing what is used/modified in 1 function, only passing in the needed parameters instead of cpi is desired. So, we may not want this type of refactoring. It might be fine here since this function is a high level one.",
      "range": {
        "startLine": 819,
        "startChar": 31,
        "endLine": 819,
        "endChar": 34
      },
      "revId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20a352d4_04c60763",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 6
      },
      "lineNbr": 819,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-09-11T12:24:17Z",
      "side": 1,
      "message": "Acknowledged. This refactoring was done to facilitate the allocation of `cpi-\u003ecdef_search_ctx` inside `av1_cdef_search()` whenever required.",
      "parentUuid": "013a408b_49a7767c",
      "range": {
        "startLine": 819,
        "startChar": 31,
        "endLine": 819,
        "endChar": 34
      },
      "revId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "44e151138c4ed22c1bd07c49cd735aa727f9aeb0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}