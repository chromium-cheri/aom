{
  "comments": [
    {
      "key": {
        "uuid": "d4b36216_c822f1fb",
        "filename": "aom/aom_image.h",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Delete this sentence. This case is treated as an error now.",
      "range": {
        "startLine": 395,
        "startChar": 0,
        "endLine": 395,
        "endChar": 80
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57c26075_ad0160cf",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 6
      },
      "lineNbr": 293,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit: Change sz \u003c\u003d 0 to sz \u003d\u003d 0. (sz is of the size_t type, so sz cannot be negative.)\n\nNote: [Let\u0027s deal with this issue later.] The new check disallows a zero-length metadata payload. It may be okay to allow a zero-length metadata payload.",
      "range": {
        "startLine": 293,
        "startChar": 15,
        "endLine": 293,
        "endChar": 22
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6eff38_e696971f",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 6
      },
      "lineNbr": 295,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "We don\u0027t need to use calloc here. Use malloc instead:\n\n      (aom_metadata_t *)malloc(sizeof(aom_metadata_t));",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdfa87ae_b1dd8008",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 6
      },
      "lineNbr": 298,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "We don\u0027t need to use calloc here. Use malloc instead:\n\n  metadata-\u003epayload \u003d (uint8_t *)malloc(sz);",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5a75301_cd65f23c",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 6
      },
      "lineNbr": 768,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit/optional: Before this line, assert that img-\u003emetadata is NULL:\n\n    assert(!img-\u003emetadata);",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1cf6000_de51a648",
        "filename": "av1/av1_iface_common.h",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "The assert.h header is a system header, so we should put its name inside \u003c\u003e, not \"\". Also our Style Guide recommends that we include system headers first. So these three lines should be changed to:\n\n#include \u003cassert.h\u003e\n\n#include \"aom_ports/mem.h\"\n#include \"aom_scale/yv12config.h\"",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "056ec835_587c9ad1",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 6
      },
      "lineNbr": 583,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Change the error code to AOM_CODEC_MEM_ERROR.",
      "range": {
        "startLine": 583,
        "startChar": 35,
        "endLine": 583,
        "endChar": 58
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c0e5f4f_93ef84fe",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 6
      },
      "lineNbr": 589,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Change the error code to AOM_CODEC_MEM_ERROR.",
      "range": {
        "startLine": 589,
        "startChar": 37,
        "endLine": 589,
        "endChar": 60
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2d08ea2_96a62417",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit: Add \"for United States\".",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ed66e18_dad2ff6d",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit: I just wanted to confirm that you meant to change the \u0027limit\u0027 argument from 5 to 15.",
      "range": {
        "startLine": 114,
        "startChar": 49,
        "endLine": 114,
        "endChar": 51
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6006be86_1f3bc506",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "This should be ASSERT_TRUE.",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2afe0ad_ee84041b",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Before this line, add:\n\n  ASSERT_EQ(metadata-\u003esz, kExampleDataSize);",
      "range": {
        "startLine": 236,
        "startChar": 2,
        "endLine": 236,
        "endChar": 74
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a21eea6f_fb7d7181",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit: This should be ASSERT_EQ.",
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f97490d_e4c0e109",
        "filename": "test/metadata_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 267,
      "author": {
        "id": 9545
      },
      "writtenOn": "2019-12-23T17:41:05Z",
      "side": 1,
      "message": "Nit: We need to check metadata-\u003esz with ASSERT_EQ before using metadata-\u003epayload, because if metadata-\u003esz is wrong, then it is not safe to use metadata-\u003epayload. The metadata-\u003epayload check just needs to use EXPECT_EQ. So these three lines should read:\n\n    EXPECT_EQ(metadata-\u003etype, types[i]);\n    ASSERT_EQ(metadata-\u003esz, kExampleDataSize);\n    EXPECT_EQ(memcmp(kExampleData, metadata-\u003epayload, kExampleDataSize), 0);",
      "range": {
        "startLine": 265,
        "startChar": 2,
        "endLine": 267,
        "endChar": 40
      },
      "revId": "cc02f01560fede458bdff45b416280d891268676",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}