{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2d73910_06936e47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 30017
      },
      "writtenOn": "2022-04-25T14:23:34Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nIn this CL, we have created a wrapper function to implement quad filtering of the lpf module for NEON. This patch also enables unit test support for the same.\n\nFor this patch, we ensured bit match output for both 32 bit and 64 bit ARM builds.\nPlease check the encoder speed up w.r.t C function,\n\n               gains%\nStill_bright   3.197\nFour_people    3.876\n\n\n\nPlease review the patch.\n\nThanks \u0026 Regards, \nArun\n",
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08dca6b1_a101e196",
        "filename": "aom_dsp/arm/loopfilter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 711,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-04-25T16:01:09Z",
      "side": 1,
      "message": "Quad function calls dual function directly here, so calling aom_lpf_vertical_14_quad_neon() has no speed benefit than calling aom_lpf_vertical_14_dual_neon(). Possible to make any improvement here with aom_lpf_vertical_14_quad_neon()? Otherwise, having quad version doesn\u0027t help much, right?\n\nSame applies to other functions below.",
      "range": {
        "startLine": 709,
        "startChar": 2,
        "endLine": 711,
        "endChar": 31
      },
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9101d145_0e2d0928",
        "filename": "aom_dsp/arm/loopfilter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 711,
      "author": {
        "id": 30017
      },
      "writtenOn": "2022-04-28T11:09:36Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nIn the parent version, the quad implementation of lpf does not have NEON optimization. Hence, without this patch, the quad filter call would use ‘C’ functions. Moreover, ARM-v8 architecture does not have support for 256 bit instructions (equivalent to AVX instruction set in x86).\n\nHence, we have submitted this patch to facilitate the quad implementation using existing dual NEON functions. However, we got ~1% speed up for speed 9, 10 each for SSE2 intrinsic implementation of quad lpf functions. We are expecting a similar speed up by rewriting the same function with NEON intrinsic.\n\nPlease let us know your opinion on the above.\n\nThanks \u0026 Regards, \nArun",
      "parentUuid": "08dca6b1_a101e196",
      "range": {
        "startLine": 709,
        "startChar": 2,
        "endLine": 711,
        "endChar": 31
      },
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "827d8e9b_2015a674",
        "filename": "aom_dsp/arm/loopfilter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 711,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-04-28T16:47:06Z",
      "side": 1,
      "message": "Thanks for the explanation. Yes, it is good to have an initial neon version so we don\u0027t have to use the c version. Let\u0027s check this CL in first. Further optimization is also needed since a fast RTC encoder for phones is important for VC applications.\n\nBy the way, you added optimization comments below for horizontal_quad functions. Does that also apply to vertical_quad functions?",
      "parentUuid": "9101d145_0e2d0928",
      "range": {
        "startLine": 709,
        "startChar": 2,
        "endLine": 711,
        "endChar": 31
      },
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f1108a7_308af1f0",
        "filename": "aom_dsp/arm/loopfilter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 711,
      "author": {
        "id": 30017
      },
      "writtenOn": "2022-04-29T16:50:58Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nYes, the optimization is applicable for vertical_quad functions. However, the same function can be used by vertical_quad with transpose of the source buffer (similar to SSE2 implementation).\n\nThanks \u0026 Regards, \nArun",
      "parentUuid": "827d8e9b_2015a674",
      "range": {
        "startLine": 709,
        "startChar": 2,
        "endLine": 711,
        "endChar": 31
      },
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af37b98e_62312a9e",
        "filename": "aom_dsp/arm/loopfilter_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 711,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-04-29T17:07:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3f1108a7_308af1f0",
      "range": {
        "startLine": 709,
        "startChar": 2,
        "endLine": 711,
        "endChar": 31
      },
      "revId": "e7cf326de110162b86b94d05acb6536a38c99373",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}