{
  "comments": [
    {
      "key": {
        "uuid": "092861be_a559a232",
        "filename": "av1/common/blockd.h",
        "patchSetId": 24
      },
      "lineNbr": 522,
      "author": {
        "id": 5610
      },
      "writtenOn": "2017-06-15T09:18:14Z",
      "side": 1,
      "message": "Why do you declare the static luts inside the static inline function?",
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f070c6a5_1e6e8637",
        "filename": "av1/common/blockd.h",
        "patchSetId": 24
      },
      "lineNbr": 522,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-06-16T14:28:42Z",
      "side": 1,
      "message": "In fact, there is no specific reason for declaring a static variable inside an inline static function here. I simply followed the coding style of the functions compound_ref0_mode() and compound_ref1_mode() in this file. Checking online, in my current understanding, the local variables inside an inline static function are not guaranteed to be static, i.e. global hidden, hence it is still meaningful to declare a static variable inside a static function.\n\nPlease further advise. I am definitely not an expert here. Thank you for pointing this out and enforce me to dig deeper.",
      "parentUuid": "092861be_a559a232",
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd94d929_ae71edcf",
        "filename": "av1/common/blockd.h",
        "patchSetId": 24
      },
      "lineNbr": 522,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-06-16T18:24:35Z",
      "side": 1,
      "message": "Yes, I find this weird as well. From what I understand, if you declare this \u0027static\u0027, then every file that includes this header file (blockd.h) will contain a copy of this variable.\nWhy not use \u0027static const\u0027 instead? \u0027const\u0027 should tell the compiler not to create copies.\n\nAnd why not just \u0027const\u0027? Because:\n\u0027const\u0027 variable in a function has a lifetime only for that function.\n\u0027static const\u0027 variable in a function has a lifetime of the entire program.",
      "parentUuid": "f070c6a5_1e6e8637",
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b69fd26_2ac0b764",
        "filename": "av1/common/blockd.h",
        "patchSetId": 24
      },
      "lineNbr": 522,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-06-16T21:57:11Z",
      "side": 1,
      "message": "Thanks for all the valuable discussions and suggestions. \"const\" is finally adopted.",
      "parentUuid": "cd94d929_ae71edcf",
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62d51fb7_c788e366",
        "filename": "av1/common/entropymode.c",
        "patchSetId": 24
      },
      "lineNbr": 1348,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-06-13T21:56:55Z",
      "side": 1,
      "message": "Just double checking: do you need any default CDFs for these?",
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dce8a256_afe415b9",
        "filename": "av1/common/mvref_common.h",
        "patchSetId": 24
      },
      "lineNbr": 274,
      "author": {
        "id": 5610
      },
      "writtenOn": "2017-06-15T09:18:14Z",
      "side": 1,
      "message": "It is not immediately obvious to me what this is doing ?",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 274,
        "endChar": 5
      },
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b0b4592_ffef513f",
        "filename": "av1/common/mvref_common.h",
        "patchSetId": 24
      },
      "lineNbr": 274,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-06-16T14:28:42Z",
      "side": 1,
      "message": "Here is essentially to convert a pair of reference frames into one single integer value, for all the compound reference pairs. For instance, (LAST_FRAME, BWDREF_FRAME) will be converted to \"6\", (LAST2_FRAME, BWDREF_FRAME) will be \"7\", and so on. Through this conversion, all the reference frame options, including all the single reference and compound reference combinations, will be mapped to a unique integer index, valued between 0 and the total number of reference choices minus one.\n\nThis will be used to group different motion vector reference choices according to different reference frame options, i.e. namely different frame types - one frame type indicates one reference option, which could be either single or compound.",
      "parentUuid": "dce8a256_afe415b9",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 274,
        "endChar": 5
      },
      "revId": "b0f28596e823e9414fa5b650698e6bddd79cc0d7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}