{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "68b34739_3af23d66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-03T16:58:23Z",
      "side": 1,
      "message": "This CL adds a speed feature to reduce the number of frames considered in TPL by skipping TPL processing for LF_UPDATE frames.  The results are as follows:\n```\n                  Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr     ssim   \n 6       LOWRES2     -0.000         0.0000      0.0000     0.0000    \n 6       MIDRES2      1.053        -0.6726     -0.5757    -0.1711    \n 6        HDRES2      2.009        -0.3081     -0.2670    -0.0548    \n 6       Average      1.014        -0.3270     -0.2810    -0.0754   \n\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc\n```\nThe BD-Rate gain observed is because of the following:\n- As TPL statistics of LF_UPDATE frames are not present, the sf `inter_sf.prune_inter_modes_based_on_tpl` is turned off for those frames. \n- The ML model which prunes intra search in inter frames (i.e., sf `skip_intra_in_interframe`) is turned off for LF_UPDATE frames as TPL statistics are not present.\n- The highest layer INTNL_ARF_UPDATE frames (specifically frame number 2, 6, 10, 14 for gf group size\u003d16)  are used as reference by LF_UPDATE frames. Now, during TPL processing as LF_UPDATE frames are skipped, most of the highest layer INTNL_ARF_UPDATE frames are not referenced. This results in setting of `delta_q_present_flag` (function `allow_deltaq_mode()`) to 0 for the  highest layer INTNL_ARF_UPDATE frames (NOTE : In the current codebase, `delta_q_present_flag` is set to 0 for LF_UPDATE frames only). \n\nThe speed feature is disabled for lowres as there is no instruction count reduction but BD-Rate loss for ssim as follows:\n```\n                  Instruction Count      BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)      avg.psnr   ovr.psnr    ssim   \n 6      LOWRES2      -0.025          -0.4578    -0.4199    0.1693   \n```\nIn this CL, the speed feature is enabled only for speed 6. The results of extending this sf to speed 5 are as follows:\n```\n                   Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)       avg.psnr   ovr.psnr    ssim   \n 5       LOWRES2     -0.000            0.0000      0.0000     0.0000\n 5       MIDRES2      0.519           -0.5526     -0.5091    -0.0432\n 5        HDRES2      0.967           -0.2306     -0.1972     0.0063\n 5       Average      0.482           -0.2619     -0.2365    -0.0128\n```\nPlease let us know your opinion.",
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ed55e16_c544c542",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-04T16:56:09Z",
      "side": 1,
      "message": "Really good coding gain! From what you mentioned above, does it \n mean inter_sf.prune_inter_modes_based_on_tpl and skip_intra_in_interframe give bad speed/quality tradeoff at least for speed 6?\n\nRegarding delta_q_present_flag change, so the coding gain is due to delta_q signaling saving? Does the coding gain mostly come from this change or the above 2 sf disabling?\n\nAny clips show quality loss?\n\nThis looks good for speed 5 as well. Thanks.",
      "parentUuid": "68b34739_3af23d66",
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efb3f240_61dfeb67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-07T11:49:04Z",
      "side": 1,
      "message": "The coding gain is majorly contributed by setting `delta_q_present_flag` to 0 for the highest layer `INTNL_ARF_UPDATE` frames and disabling the sf `inter_sf.prune_inter_modes_based_on_tpl` for `LF_UPDATE` frames. To study the impact we have done few experiments and the results are below:\n\n1) `inter_sf.prune_inter_modes_based_on_tpl`\n- Disable the speed feature `inter_sf.prune_inter_modes_based_on_tpl` for `LF_UPDATE` frames (except `LF_UPDATE` frames in first gf group of the key-frame interval) \n```\n                   Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)       avg.psnr   ovr.psnr    ssim  \n 6       LOWRES2       -1.991         -0.0904    -0.0927   -0.0600 \n 6       MIDRES2       -1.849         -0.0979    -0.0973   -0.0846 \n 6        HDRES2       -1.655         -0.1072    -0.1207   -0.0836 \n 6       Average       -1.832         -0.0985    -0.1036   -0.0761 \n```\n\n2) `intra_sf.skip_intra_in_interframe`\n- Disable the ML model which prunes intra modes in inter frames for `LF_UPDATE` frames (except `LF_UPDATE` frames in first gf group of the key-frame interval) \n- Skip intra modes in inter frame if the best inter mode is transform skip for block sizes with width \u003e\u003d 16 and height \u003e\u003d 16 for `LF_UPDATE` frames (except `LF_UPDATE` frames in first gf group of the key-frame interval) \n```\n                 Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim   \n 6       LOWRES2      -0.160        0.0131     0.0134   0.0122  \n 6       MIDRES2      -0.039        0.0462     0.0417   0.0426  \n 6        HDRES2      -0.032        0.0368     0.0413   0.0268  \n 6       Average      -0.077        0.0320     0.0322   0.0272  \n```\n\n3) `delta_q_present_flag`\n- Set `delta_q_present_flag` to 0 for the highest layer `INTNL_ARF_UPDATE` frames  (except for frames in first gf group of the key-frame interval) \n```\n                  Instruction Count       BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)     avg.psnr   ovr.psnr    ssim   \n 6       LOWRES2       0.129        -0.1656    -0.1596   -0.0729  \n 6       MIDRES2       0.090        -0.2749    -0.2733   -0.2959  \n 6        HDRES2       0.097        -0.1939    -0.1991   -0.1743  \n 6       Average       0.105        -0.2115    -0.2107   -0.1810  \n```\n\nThe above results show that coding gain is achieved by setting `delta_q_present_flag` to 0 for the highest layer `INTNL_ARF_UPDATE` frames and disabling the sf `inter_sf.prune_inter_modes_based_on_tpl`  for `LF_UPDATE` frames.\n\nThe clips showing high BD-Rate loss/gain are as follows:\n ```\nContent                                          avg.psnr   ovr.psnr   ssim\nNetflix_PierSeaside_2048x1080_60fps_8bit_420     1.0471      1.4883    -0.4702\nCampfire_1280x720_30fps_8bit                    -0.1030      0.0947     1.3833\nToddlerFountain_1280x720_60fps_8bit              0.2331      0.3580     1.3458\nped_1080p25                                      0.4596      0.4760     1.3045\n\nMobisode2_832x480_30                            -1.8134     -1.9696    -1.9137\nstation2_480p25                                 -1.4848     -1.4883    -1.7342\nfactory_1080p30                                 -1.3998     -1.8459    -1.0418\nin_to_tree_1080p50                              -1.0322     -0.7747    -1.3243\n```\nNote : The results of setting `delta_q_present_flag` to 0 for all frames of type `INTNL_ARF_UPDATE` are as follows: \n\n```\n                  Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr    ovr.psnr     ssim   \n 6       LOWRES2      0.383        -0.5399     -0.4846      0.0164  \n 6       MIDRES2      0.355        -0.8588     -0.7428     -0.4906  \n 6        HDRES2      0.292        -0.2347     -0.2303     -0.3396  \n 6       Average      0.344        -0.5445     -0.4859     -0.2713 \n\n```",
      "parentUuid": "4ed55e16_c544c542",
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08824f57_b9dac606",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-07T15:53:10Z",
      "side": 1,
      "message": "Thanks for the deep investigation!\n\nLooks like the 1st sf still works fine while the 2nd one doesn\u0027t impact much anymore.\n\nIt is kind of surprise to see that disabling delta_q_present_flag for all INTNL_ARF_UPDATE frames gives even more coding gain back. Maybe something is wrong here?",
      "parentUuid": "efb3f240_61dfeb67",
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06ef490f_604215ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-08T12:14:22Z",
      "side": 1,
      "message": "The BD-Rate plots of disabling `delta_q_present_flag` for all `INTNL_ARF_UPDATE` frames show that coding gain is mainly achieved due to saving of delta_q signaling.\n \nThe results of setting `delta_q_present_flag \u003d 0` for all frames are as follows:\n```\n                Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim   \n 6       LOWRES2      0.265        -0.0988    -0.0053    4.0577  \n 6       MIDRES2      0.206        -0.0638     0.1162    5.2711  \n 6        HDRES2      0.246         1.3836     1.4602    5.4132  \n 6       Average      0.239         0.4070     0.5237    4.9140 \n```\nThe results of setting `delta_q_present_flag \u003d 0` for all frames except key-frames (i.e., `delta_q_present_flag \u003d 0` for all `ARF_UPDATE` and `INTNL_ARF_UPDATE` frames) are as follows:\n```\n                 Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim   \n 6       LOWRES2      0.377        -0.3599    -0.2639    2.7536  \n 6       MIDRES2      0.396        -0.7002    -0.5275    2.7710  \n 6        HDRES2      0.459         0.5050     0.5762    3.0024  \n 6       Average      0.411        -0.1850    -0.0717    2.8423  \n```\nThe above results show that enabling delta q modulation for key-frames and base layer ARFs show coding gain (for the ssim metric).",
      "parentUuid": "08824f57_b9dac606",
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6d5938c_532e754b",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 2
      },
      "lineNbr": 1884,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-04T16:56:09Z",
      "side": 1,
      "message": "How does a fixed factor work here? Besides # of leaf frames, would this factor be affected by other factors?",
      "range": {
        "startLine": 1884,
        "startChar": 27,
        "endLine": 1884,
        "endChar": 70
      },
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20b415a6_d8f20516",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 2
      },
      "lineNbr": 1884,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-07T11:49:04Z",
      "side": 1,
      "message": "Yes. This factor is also dependent on the prediction degradation information of the leaf frames on the base layer ARF. However, this information is not available as tpl is skipped for leaf frames. \n\nFor gf group size of 32, earlier, the number of frames used to calculate `cpi-\u003erd.r0` of base layer ARF (i.e., frame number 32) was 31+3 (frames from next gf group). Now, as tpl is skipped for leaf frames, the number of frames used is 15+3 \u003d 18. This corresponds to a factor of 34/18\u003d1.9.This factor has to be reduced based on the prediction degradation of leaf frames on base layer ARF. Thus a factor of 1.6 is used.",
      "parentUuid": "a6d5938c_532e754b",
      "range": {
        "startLine": 1884,
        "startChar": 27,
        "endLine": 1884,
        "endChar": 70
      },
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "267a158d_2acaf894",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 2
      },
      "lineNbr": 1884,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-07T15:53:10Z",
      "side": 1,
      "message": "Sounds good. Thanks for the details.",
      "parentUuid": "20b415a6_d8f20516",
      "range": {
        "startLine": 1884,
        "startChar": 27,
        "endLine": 1884,
        "endChar": 70
      },
      "revId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "422ec1b9765b42e4c838a72a9dbb1d1bf59897dd",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}