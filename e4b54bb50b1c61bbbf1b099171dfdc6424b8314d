{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b1733423_e11d1f0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-21T16:59:52Z",
      "side": 1,
      "message": "Hi Wan-Teh, Chi Yo,\n\nIn this CL, we cleaned up ‘blk_idx \u003e 1’ check as per our discussion at \nhttps://aomedia-review.googlesource.com/c/aom/+/159021/5..10/av1/encoder/tx_search.c#b2810\n\nWe renamed the \u0027blk_idx\u0027 variable to \u0027num_sub_blks\u0027 and introduced an assert accordingly.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027 , \u0027RT\u0027 and ‘ALLINTRA’ encoding modes for a few contents with different speed settings. \n\nPlease review.\n\nRegards,\nRanjit\n",
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cac1eb7d_09275bdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-22T19:03:05Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1755353d_f982ef80",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1662,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-22T19:03:05Z",
      "side": 1,
      "message": "Nit/optional: We can calculate `num_sub_blks` directly:\n\n  const int num_sub_blks \u003d (1 + (bh \u003e\u003d bw)) * (1 + (bw \u003e\u003d bh));",
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb22ea5_492229a7",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1662,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-23T04:04:03Z",
      "side": 1,
      "message": "Ack.\n\nAs the number of sub-blocks is 2 or 4, the suggested approach (2 additions + 1 multiplication) requires lesser operations than the current approach (1 initialization + 2/4 additions). As the current approach is more readable and may not lead to a perceivable difference in encoding time, we prefer the current approach.\n\nPlease let us know your thoughts.",
      "parentUuid": "1755353d_f982ef80",
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "715f2242_ff136c76",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1662,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-23T18:14:12Z",
      "side": 1,
      "message": "Ranjit: I leave this to your judgment. This is why I marked this change as \"optional\".\n\nSince you can merge CLs, I will let you merge your own CLs.",
      "parentUuid": "9cb22ea5_492229a7",
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "153a6cb4_dc5bcf22",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1693,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-23T18:14:12Z",
      "side": 1,
      "message": "I just realized that we don\u0027t need this assertion, unless the code below is incorrect if num_sub_blks is equal to 1.\n\n(Line 1698 is incorrect if num_sub_blks is 0. But it doesn\u0027t seem necessary to assert num_sub_blks \u003e 0.)",
      "range": {
        "startLine": 1690,
        "startChar": 0,
        "endLine": 1693,
        "endChar": 27
      },
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c9885b_e0a88ee6",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1693,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-23T20:45:51Z",
      "side": 1,
      "message": "I found that this code (including the `if (blk_idx \u003e 1)` test) was originally added in\nhttps://aomedia-review.googlesource.com/c/aom/+/58421",
      "parentUuid": "153a6cb4_dc5bcf22",
      "range": {
        "startLine": 1690,
        "startChar": 0,
        "endLine": 1693,
        "endChar": 27
      },
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "974737d9_0cc14ac7",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 2
      },
      "lineNbr": 1693,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-24T14:42:06Z",
      "side": 1,
      "message": "Done.\nWe went through above CL. The check has been added to handle iteration 0 (no split case). As the relevant loop is currently in unrolled form and ‘if’ condition is specific to the code that corresponds to iteration 1 (split case), we also agree that cleaning of \u0027if\u0027 condition check and removal of assertion is correct.",
      "parentUuid": "e3c9885b_e0a88ee6",
      "range": {
        "startLine": 1690,
        "startChar": 0,
        "endLine": 1693,
        "endChar": 27
      },
      "revId": "e4b54bb50b1c61bbbf1b099171dfdc6424b8314d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}