{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa22fc05_67ffaeb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-06-29T11:32:31Z",
      "side": 1,
      "message": "This CL reduces the number of allocations and deallocations of the temporary buffers used in tpl module. Earlier, the temporary buffers used in tpl module were allocated and freed at every tpl block. Now, memory allocation of temporary buffers happen at every call of tpl module (similar to temporary buffers in temporal filtering). Also, in the multi-threaded scenario, the temporary buffers are allocated for every thread.\n\nThis is a bit-exact change and the results are as follows:\n```\n                 Instruction Count \ncpu      Testset   Reduction(%)    \n 5       LOWRES2      0.240        \n 5       MIDRES2      0.347         \n 5        HDRES2      0.391         \n 5       Average      0.326 \n\n 6       LOWRES2      0.315        \n 6       MIDRES2      0.495         \n 6        HDRES2      0.573         \n 6       Average      0.461 \n```\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc",
      "revId": "b0a0a9c8311034f3dbae6513d53eff2332537fcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ed16852_feadccbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-06-29T15:54:15Z",
      "side": 1,
      "message": "Nice optimization. Looks good. Thanks.",
      "parentUuid": "fa22fc05_67ffaeb4",
      "revId": "b0a0a9c8311034f3dbae6513d53eff2332537fcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}