{
  "comments": [
    {
      "key": {
        "uuid": "d7f252aa_b735397c",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T22:47:14Z",
      "side": 1,
      "message": "This isn\u0027t related to this patch, but these names could be better. I assume \u0027l\u0027 is for leaf but I don\u0027t know what \u0027r\u0027 is supposed to stand for.",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 73
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94e1d1f3_502710d6",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5290
      },
      "writtenOn": "2019-03-21T23:08:44Z",
      "side": 1,
      "message": "This is like a helper function for recursion, so they mean \"left\" and \"right\" here. That is, we need to set parameters from frames between \u0027l\u0027 and \u0027r\u0027.\nI renamed them to \u0027start\u0027 and \u0027end\u0027 to be clear.",
      "parentUuid": "d7f252aa_b735397c",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 73
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39f1a454_bd113abe",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T23:24:16Z",
      "side": 1,
      "message": "Oh I see, thanks for the explanation.",
      "parentUuid": "94e1d1f3_502710d6",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 73
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95b00ffe_81b488d2",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T22:47:14Z",
      "side": 1,
      "message": "It doesn\u0027t make sense for a leaf node to be at any level other than 0, so it seems weird to use a macro here.",
      "range": {
        "startLine": 44,
        "startChar": 44,
        "endLine": 44,
        "endChar": 59
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4ba2868_76ca49cf",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 5290
      },
      "writtenOn": "2019-03-21T23:08:44Z",
      "side": 1,
      "message": "My thought was that one could consider level \"1\" to be the bottom level or \"0\", depending on how things are indexed / how code is written.\nSo, this seemed clearer to me.",
      "parentUuid": "95b00ffe_81b488d2",
      "range": {
        "startLine": 44,
        "startChar": 44,
        "endLine": 44,
        "endChar": 59
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cda344f_81d46fb1",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 44,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T23:24:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d4ba2868_76ca49cf",
      "range": {
        "startLine": 44,
        "startChar": 44,
        "endLine": 44,
        "endChar": 59
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562b8286_ff578ca1",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T22:47:14Z",
      "side": 1,
      "message": "I am a little skeptical of using this check for use_altref rather than rc-\u003esource_alt_ref_pending. Could you possibly call get_pyramid_height from within this function so it is guaranteed the height came from a function that asserts pyramid_height will be 0 if there is no altref? Or use source_alt_ref_pending directly?",
      "range": {
        "startLine": 97,
        "startChar": 25,
        "endLine": 97,
        "endChar": 55
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b3441c_dda89e92",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 5290
      },
      "writtenOn": "2019-03-21T23:08:44Z",
      "side": 1,
      "message": "Let me explain the design I\u0027m thinking of:\n- This function is a low-level function that just creates the structure based on what it\u0027s given: length and height.\n- The function(s) above this in call-chain have the actual logic / strategy for picking the \u0027length\u0027 and \u0027height\u0027 parameters.\n\nThat\u0027s why I prefer the current logic.\n\nLet me know if you prefer adding extra asserts about \"rc-\u003esource_alt_ref_pending\" and \"height\" somewhere outside this function.",
      "parentUuid": "562b8286_ff578ca1",
      "range": {
        "startLine": 97,
        "startChar": 25,
        "endLine": 97,
        "endChar": 55
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53fd7fb4_79fccf09",
        "filename": "av1/encoder/gop_structure.c",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T23:24:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "89b3441c_dda89e92",
      "range": {
        "startLine": 97,
        "startChar": 25,
        "endLine": 97,
        "endChar": 55
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8542557a_ee475df9",
        "filename": "av1/encoder/ratectrl.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T22:47:14Z",
      "side": 1,
      "message": "Why was this originally 2? Is there any issue with this being 0 when we are still using the old structure?",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d3e86b_a8e2f869",
        "filename": "av1/encoder/ratectrl.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5290
      },
      "writtenOn": "2019-03-21T23:08:44Z",
      "side": 1,
      "message": "Confusingly enough, this macro was used only for the pyramid structure, hence the value 2 before -- because earlier, pyramid structure assumed presence of ALTREF and at least one internal Altref.",
      "parentUuid": "8542557a_ee475df9",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28aa0d58_48620c1f",
        "filename": "av1/encoder/ratectrl.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5186
      },
      "writtenOn": "2019-03-21T23:24:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d7d3e86b_a8e2f869",
      "range": {
        "startLine": 41,
        "startChar": 8,
        "endLine": 41,
        "endChar": 25
      },
      "revId": "db0db9d07a754fd2e0798ff496bfb027e459ba11",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}