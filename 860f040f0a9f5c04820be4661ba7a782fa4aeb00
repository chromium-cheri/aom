{
  "comments": [
    {
      "key": {
        "uuid": "4ef5346f_a0a49fdd",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 13
      },
      "lineNbr": 3492,
      "author": {
        "id": 5200
      },
      "writtenOn": "2018-02-17T00:03:18Z",
      "side": 1,
      "message": "Could you please justify that \"cm-\u003eframe_refs[cm-\u003eprimary_ref_frame].idx\" is always valid here?\nIs it possible \"cm-\u003eframe_refs[cm-\u003eprimary_ref_frame].idx \u003d\u003d INVALID_IDX\" here?\n\nFurther, it seems the range of cm-\u003eprimary_ref_frame shall belong to [0,REF_FRAMES-1], which is [0,7] inclusive. Nevertheless, we have only assigned \u0027idx\u0027/\u0027buf\u0027 for cm-\u003eframe_refs[0/1/2/3/4/5/6], and it has not been specified for cm-\u003eframe_refs[7]. Which is, when cm-\u003eprimary_ref_frame \u003d\u003d 7, it is not clear to me at the decoder that what we would expect for cm-\u003eframe_refs[7].idx, most likely would be valued as INVALID_IDX, which is \"-1\".\n\nRegardless of the encoder setup, the decoder may need to have sufficient sanity check to make sure we have a valid bitstream.",
      "revId": "860f040f0a9f5c04820be4661ba7a782fa4aeb00",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "800fb87f_d423005b",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 13
      },
      "lineNbr": 3492,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-02-17T00:32:20Z",
      "side": 1,
      "message": "For 7, it\u0027s the PRIMARY_REF_NONE condition above. However you\u0027re right in that on the decoder I need to specify behavior when a framebuffer is invalid (I\u0027ll specify it that it loads the default probabilities in this case).",
      "parentUuid": "4ef5346f_a0a49fdd",
      "revId": "860f040f0a9f5c04820be4661ba7a782fa4aeb00",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "116b1ae0_6d3dcedb",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 13
      },
      "lineNbr": 3492,
      "author": {
        "id": 5050
      },
      "writtenOn": "2018-02-28T20:50:58Z",
      "side": 1,
      "message": "I\u0027ve now resolved this with (a) the PRIMARY_REF_NONE condition and (b) making reading from an INVALID_INDEX an aom_internal_error. I decided to do that rather than load default probabilities as it makes conformance simpler.",
      "parentUuid": "800fb87f_d423005b",
      "revId": "860f040f0a9f5c04820be4661ba7a782fa4aeb00",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}