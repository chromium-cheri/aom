{
  "comments": [
    {
      "key": {
        "uuid": "cfc48a6b_d8c34714",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-28T18:38:16Z",
      "side": 1,
      "message": "Just wanted to point out that this function ignores the available buffer capacity (i.e., the buffer may not be full) and therefore will grow the buffer more than necessary. Let\u0027s go with this version. We can tweak this later if we want to.",
      "range": {
        "startLine": 183,
        "startChar": 30,
        "endLine": 183,
        "endChar": 57
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2766bc10_ae4ecf5f",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-28T18:41:45Z",
      "side": 1,
      "message": "Just wanted to clarify this comment. The original code computes the new capacity this way:\n\n    const size_t new_capacity \u003d\n        obu_bytes_buffered + bytes_read + 2 * obu_payload_length;\n\nNote that it uses \"obu_bytes_buffered + bytes_read\" instead of the current capacity (*obu_buffer_capacity).",
      "parentUuid": "cfc48a6b_d8c34714",
      "range": {
        "startLine": 183,
        "startChar": 30,
        "endLine": 183,
        "endChar": 57
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7395341_b11a7496",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-28T18:46:46Z",
      "side": 1,
      "message": "Ack: I considered this when writing the function, but I thought it simpler to do exactly what the caller requested and grow the buffer by exactly \u0027growth_amount\u0027 bytes. I think if we were to change behavior to consider the length of the buffer we\u0027d want to rename the function and args to refer to increasing available space instead (i.e. obudec_increase_capacity(size_t new_cap, ...)).",
      "parentUuid": "cfc48a6b_d8c34714",
      "range": {
        "startLine": 183,
        "startChar": 30,
        "endLine": 183,
        "endChar": 57
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d779dd25_8a6f143d",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-28T18:38:16Z",
      "side": 1,
      "message": "Since this is a static function, it can assume the caller passes valid arguments, so I think these null pointer checks can be omitted. (The caller already checked \u0027f\u0027, and passes non-null pointers for the rest.)\n\nI leave this decision to you.",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 17
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46abb649_a8fc3442",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-28T18:46:46Z",
      "side": 1,
      "message": "Sorry, I know: I explained in a previous comment but it\u0027s buried in a previous patchset:\n\n\u003e Moved null pointer check up above this, and added checks of other pointers. \n\u003e Unlikely to be an issue since this function is private at present, but I can \n\u003e foresee someone changing that to allow for a caller to read a single OBU \n\u003e directly at some point in the future.",
      "parentUuid": "d779dd25_8a6f143d",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 17
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "befd5183_68900272",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-28T18:38:16Z",
      "side": 1,
      "message": "I am sorry I missed this earlier. This should also be AOMMAX(*obu_buffer_capacity, OBU_MAX_HEADER_SIZE).",
      "range": {
        "startLine": 233,
        "startChar": 31,
        "endLine": 233,
        "endChar": 50
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cb608ce_a00b4176",
        "filename": "common/obudec.c",
        "patchSetId": 3
      },
      "lineNbr": 233,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-28T18:46:46Z",
      "side": 1,
      "message": "Oops, missed this myself. Thanks!",
      "parentUuid": "befd5183_68900272",
      "range": {
        "startLine": 233,
        "startChar": 31,
        "endLine": 233,
        "endChar": 50
      },
      "revId": "ff32766e7cd2b9c307531ebe205d4decbf25c869",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}