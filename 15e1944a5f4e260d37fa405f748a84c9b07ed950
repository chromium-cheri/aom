{
  "comments": [
    {
      "key": {
        "uuid": "d4be59ca_a285087d",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T13:45:15Z",
      "side": 1,
      "message": "Optional: The file could be moved to a separate CL. It is independent of the rest of the CL.",
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34086cef_96f16689",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T16:12:08Z",
      "side": 1,
      "message": "Please ignore this suggestion. This CL moves this comment block from common/tools_common.h.",
      "parentUuid": "d4be59ca_a285087d",
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7de87cea_6103c7df",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T13:45:15Z",
      "side": 1,
      "message": "Nit: \"See the documentation of aom/aom_codec.h for more details.\" seems self-referencing because this comment is in aom/aom_codec.h.",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a534b83_eb6beecc",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T16:12:08Z",
      "side": 1,
      "message": "Now I know why. This comment was in common/tools_common.h before.",
      "parentUuid": "7de87cea_6103c7df",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99ddd73_a46f7432",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-24T14:33:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a534b83_eb6beecc",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 26,
        "endChar": 36
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99612a3c_051065eb",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T13:45:15Z",
      "side": 1,
      "message": "Nit: [Just a comment. No changes requested.] This is the purpose of aom_codec_iface_t in the public API. It specifies the algorithm, and could be replaced by an algorithm id. Inside libaom, aom_codec_iface_t is used as the interface to an algorithm implementation, a common way to do object-oriented programming in C.\n\nSince libaom currently supports only one algorithm (AV1), aom_codec_iface_t is not that useful. To reconstruct the original purposes of aom_codec_iface_t, it is helpful to look at how vpx_codec_iface_t is used in libvpx, which supports two algorithms (VP8 and VP9):\n\n  * vpx_codec_vp8_cx\n  * vpx_codec_vp8_dx\n  * vpx_codec_vp9_cx\n  * vpx_codec_vp9_dx\n\nThat design could be one way for libaom to support both AV1 and AV2 in the future.\n\nNote: I am just providing additional information, not expressing a preference, for that design.",
      "range": {
        "startLine": 30,
        "startChar": 3,
        "endLine": 30,
        "endChar": 44
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91712f64_a264c3d5",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T13:45:15Z",
      "side": 1,
      "message": "Nit: Add \"for the AV1 algorithm\" after \"the aom_codec_iface_t\".",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25a8f699_490e39ee",
        "filename": "aom/aom_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 10034
      },
      "writtenOn": "2020-04-24T03:28:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91712f64_a264c3d5",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 36,
        "endChar": 44
      },
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "634e3e7a_f73d4d7f",
        "filename": "common/tools_common.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-23T13:45:15Z",
      "side": 1,
      "message": "Did clang-format move this here? The original location conforms to the Style Guide.",
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c5a9ae3_1e5b628d",
        "filename": "common/tools_common.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 10034
      },
      "writtenOn": "2020-04-24T03:28:34Z",
      "side": 1,
      "message": "I get a clang warning / compile error (using clang7, same as Jenkins) if I do not move this here, saying that system headers should not be placed before other headers.",
      "parentUuid": "634e3e7a_f73d4d7f",
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce5aaebe_24908616",
        "filename": "common/tools_common.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-04-24T14:33:19Z",
      "side": 1,
      "message": "I assume you meant this coding style warning (from cpplint.py) on patch set 2:\n\nCode Style Warnings (non-blocking):\n\n   common/tools_common.c:14:  Found C system header after other header. Should be: -.h, c system, c++ system, other.  [build/include_order] [4]\n\nNote that it warned about common/tools_common.c, not common/tools_common.h. So we should move the #include \u003cstdio.h\u003e back to the original location.\n\nAs for the warning on common/tools_common.c, I suspect cpplint.py fails to treat tools_common.c (a C file) as the implementation file of tools_common.h. I suggest we ignore this cpplint.py warning (it does not block CL submission) and follow the Style Guide\u0027s recommendation.\n\nI can file a bug report on cpplint.py to treat either foo.cc or foo.c as the implementation file of foo.h.",
      "parentUuid": "0c5a9ae3_1e5b628d",
      "revId": "15e1944a5f4e260d37fa405f748a84c9b07ed950",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}