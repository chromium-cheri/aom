{
  "comments": [
    {
      "key": {
        "uuid": "d247009a_c2adb2ba",
        "filename": "aom_dsp/variance.c",
        "patchSetId": 6
      },
      "lineNbr": 1051,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-01-31T20:39:05Z",
      "side": 1,
      "message": "using bitwise | here may help or at least not hurt; in the convolve dispatch in vp9 we got a boost in a 3 or 4 way check. that could be brought in separately if you\u0027d like.",
      "revId": "7ff25dc81bd43765c814f353f6bf54102d7366a0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae84c8d_361d2460",
        "filename": "aom_dsp/variance.c",
        "patchSetId": 6
      },
      "lineNbr": 1051,
      "author": {
        "id": 8900
      },
      "writtenOn": "2018-02-01T02:45:24Z",
      "side": 1,
      "message": "Using bitwise | is done.\n\nDoes \"3 or 4 way check\" means check subpel_x_q3 and subpel_y_q3 separately like the pseudocode below?\n\nif (!subpel_x_q3 \u0026\u0026 !subpel_y_q3) {\n  // memcpy\n}\nelse {\n  if (!subpel_y_q3) {\n    // only horiz\n  }\n  else if ( !subpel_x_q3 ){\n    // only vert\n  }\n  else {\n    // horiz\n    // vert\n  }\n}\n\nIf it is, then the other checks are done inside aom_upsampled_pred.\nThe check extracted here is just trying to skip the memcpy branch. \nIt seems no need to add more check here.",
      "parentUuid": "d247009a_c2adb2ba",
      "revId": "7ff25dc81bd43765c814f353f6bf54102d7366a0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d482bae0_d742c591",
        "filename": "aom_dsp/variance.c",
        "patchSetId": 6
      },
      "lineNbr": 1051,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-02-01T04:12:13Z",
      "side": 1,
      "message": "\u003e Using bitwise | is done.\n\u003e \n\nThanks.\n\n\u003e Does \"3 or 4 way check\" means check subpel_x_q3 and subpel_y_q3 separately like the pseudocode below?\n\u003e \n\u003e if (!subpel_x_q3 \u0026\u0026 !subpel_y_q3) {\n\u003e   // memcpy\n\u003e }\n\u003e else {\n\u003e   if (!subpel_y_q3) {\n\u003e     // only horiz\n\u003e   }\n\u003e   else if ( !subpel_x_q3 ){\n\u003e     // only vert\n\u003e   }\n\u003e   else {\n\u003e     // horiz\n\u003e     // vert\n\u003e   }\n\u003e }\n\u003e \n\u003e If it is, then the other checks are done inside aom_upsampled_pred.\n\u003e The check extracted here is just trying to skip the memcpy branch. \n\u003e It seems no need to add more check here.\n\nFor vp9 it was just a 3 value check:\n\nhttps://chromium.googlesource.com/webm/libvpx/+/v1.7.0/vpx_dsp/x86/convolve.h#35\n\nAV1 (VP10) branched from VP9 while VP9 was still under heavy development, so it doesn\u0027t have all the improvements from that code base.",
      "parentUuid": "aae84c8d_361d2460",
      "revId": "7ff25dc81bd43765c814f353f6bf54102d7366a0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf003687_1a42b092",
        "filename": "test/comp_mask_variance_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5230
      },
      "writtenOn": "2018-01-31T19:04:09Z",
      "side": 1,
      "message": "Move up 2 lines.",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "7ff25dc81bd43765c814f353f6bf54102d7366a0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "187700f4_27ef8b33",
        "filename": "test/comp_mask_variance_test.cc",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 8900
      },
      "writtenOn": "2018-02-01T02:45:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf003687_1a42b092",
      "range": {
        "startLine": 22,
        "startChar": 10,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "7ff25dc81bd43765c814f353f6bf54102d7366a0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}