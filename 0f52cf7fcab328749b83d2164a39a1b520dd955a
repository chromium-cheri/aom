{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2bf38a8b_42f20f03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 33002
      },
      "writtenOn": "2023-11-27T04:46:11Z",
      "side": 1,
      "message": "In the parent commit, the result of `add_grain_if_needed()` invoked in `decoder_get_frame()`\nfunction is handled using an `aom_internal_error()` call. But at this point, setjmp is not set and the intended longjmp wouldnâ€™t happen. In order to fix this issue, the `aom_internal_error()` call is avoided and `pbi-\u003eerror.error_code` is set to `AOM_CODEC_CORRUPT_FRAME` if `res\u003d\u003dNULL`. \n\nBut the caller of `decoder_get_frame()` from aomdec.c i.e., `main()-\u003eaom_codec_get_frame()-\u003edecoder_get_frame()` does not handle this error correctly. This is because when `aom_codec_get_frame()` returns NULL for the above failure case, the while loop exits and `ctrl_get_frame_corrupted()` will not be invoked. In order to fix this, `aom_codec_get_frame()` call is moved inside the loop and `ctrl_get_frame_corrupted()` is also modified to service this error. \nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "0f52cf7fcab328749b83d2164a39a1b520dd955a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}