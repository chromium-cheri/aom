{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1c2378e3_387ffc47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-03-22T14:34:08Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nThe buffer txfm_stats_list stores the frame level Tpl transform stats and this memory is allocated for MAX_LENGTH_TPL_FRAME_STATS frames. As Tpl is enabled only when lag_in_frames is greater than 1, we tried avoiding the memory allocation for the same when lag_in_frames \u003c\u003d 1. \n\nAn alternate approach would be to avoid the memory allocation of tpl_data buffer, but we preferred the current approach because of the following reasons: \n1. Some members of tpl_data were being accessed even when tpl was not enabled. \n2. txfm_stats_list buffer accounts for ~95% of the size of tpl_data.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit of patch-set2) for \u0027GOOD\u0027, \u0027RT\u0027 and \u0027ALLINTRA\u0027 encoding modes for a few contents with different encoding configurations. It was also verified that the output of AVIF encode is bit-exact w.r.t. parent version for a typical image dataset.\n\nThe heap memory and encode reduction numbers mentioned in commit message are generated for patch-set 2, but we have rebased to the latest commit in patch-set 3 to avoid the Jenkins build failure (due to “partition_search.c: unused function warning”). We have done minimal sanity verifications for patch-set 3.\n\nHEAP memory reduction was measured using the command below. \n$valgrind --tool\u003dmassif ./aomenc …\n\nPlease review.\n\nRegards,\nMudassir.\n",
      "revId": "3aae43d6921c2eb088a0033c8e21959c3941fb67",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}