{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a196a043_afdb191a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-13T18:29:08Z",
      "side": 1,
      "message": "Cheng: I noticed this issue while debugging the valgrind errors a couple of weeks ago.",
      "revId": "cb1d7b4c2933f8a6fafc5a7ddc2f24277e8b79a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a258a3e_4f776281",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 2
      },
      "lineNbr": 593,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-13T18:29:08Z",
      "side": 1,
      "message": "Cheng: av1_calc_mb_wiener_var_mt() ignores its and `sum_rec_distortion` and `sum_est_rate` parameters. Although you have a TODO comment in `cal_mb_wiener_var_hook()`:\n\n```\nstatic int cal_mb_wiener_var_hook(void *arg1, void *unused) {\n  ...\n  double sum_rec_distortion \u003d 0;\n  double sum_est_rate \u003d 0;\n  ...\n    // TODO(chengchen): properly accumulate the distortion and rate.\n    av1_calc_mb_wiener_var_row(cpi, x, xd, current_mi_row, src_diff, coeff,\n                               qcoeff, dqcoeff, \u0026sum_rec_distortion,\n                               \u0026sum_est_rate);\n```\n\nit is best to not call the incorrect version when `auto_intra_tools_off` is true.",
      "revId": "cb1d7b4c2933f8a6fafc5a7ddc2f24277e8b79a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "cb1d7b4c2933f8a6fafc5a7ddc2f24277e8b79a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "cb1d7b4c2933f8a6fafc5a7ddc2f24277e8b79a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "cb1d7b4c2933f8a6fafc5a7ddc2f24277e8b79a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}