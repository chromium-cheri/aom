{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2605fd11_768ffe9e",
        "filename": "common/obudec.c",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-14T21:54:37Z",
      "side": 1,
      "message": "James, do you know when this function should call `rewind(f)` before returning 0?",
      "revId": "c2272b1fecacb29067e9bb38514a44f8bedde935",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d7dd0e9_1a47d47e",
        "filename": "common/obudec.c",
        "patchSetId": 1
      },
      "lineNbr": 489,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-14T21:49:06Z",
      "side": 1,
      "message": "This change is not needed to fix this leak. This is change is fine if it is the convention in libaom for the free/destroy functions to allow a null input.",
      "revId": "c2272b1fecacb29067e9bb38514a44f8bedde935",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "431987df_5bbf037f",
        "filename": "common/obudec.c",
        "patchSetId": 1
      },
      "lineNbr": 491,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-14T21:49:06Z",
      "side": 1,
      "message": "Is this defensive programming?\n\nIn general setting `obu_ctx-\u003ebuffer` to NULL (and setting `obu_ctx-\u003ebuffer_capacity` and `obu_ctx-\u003ebytes_buffered` to 0) to undo the buffer allocation should be enough. Zeroing the whole `obu_ctx` struct requires the code reviewer to inspect the callers of `file_is_obu()`.",
      "revId": "c2272b1fecacb29067e9bb38514a44f8bedde935",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}