{
  "comments": [
    {
      "key": {
        "uuid": "13e83fb4_5a7c7494",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 10
      },
      "lineNbr": 1059,
      "author": {
        "id": 5188
      },
      "writtenOn": "2017-07-13T21:40:33Z",
      "side": 1,
      "message": "can be simplified as low \u003d AOMMAX(1, (pts_mvd[i - 1] - pts_mvd[0]) / (i - 1));\n\nBTW, would you please explain a bit more intuition of the threshold? Looks like it will end at the first place where pts_mvd[i] \u003e\u003d pts_mvs[i-1]+16*(pts_mvd[i-1]-pts_mvd[0])/(i-1), which is not super straightfoward",
      "range": {
        "startLine": 1057,
        "startChar": 4,
        "endLine": 1059,
        "endChar": 22
      },
      "revId": "92aa0fce8e4cdecab63cecad40ca6a5bfbb3cfc5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "909f2707_9cdf90c4",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 10
      },
      "lineNbr": 1059,
      "author": {
        "id": 5185
      },
      "writtenOn": "2017-07-13T22:56:38Z",
      "side": 1,
      "message": "if i\u003d1, will divide by 0. I will combine them to 1 line.\n\nAbout the thresholding, since mvd is already sorted, here just start from the sample with largest mvd and check the sample by calculating the gradients.\n\nTo decide if 1 sample is kept or removed, compare 2 gradients. the first one is the gradient between itself and the previous one (pts_mvd[i] - pts_mvd[i - 1]). The second one is the gradient between first sample and previous sample (i.e. \"low\"). If the first one is quite large (\u003e\u003d 16X) comparing to the second one, then remove it. Keep doing the checking until i \u003d 1.",
      "parentUuid": "13e83fb4_5a7c7494",
      "range": {
        "startLine": 1057,
        "startChar": 4,
        "endLine": 1059,
        "endChar": 22
      },
      "revId": "92aa0fce8e4cdecab63cecad40ca6a5bfbb3cfc5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}