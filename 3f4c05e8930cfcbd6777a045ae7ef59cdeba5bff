{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1ae4ebc1_01c076e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-08-18T12:56:10Z",
      "side": 1,
      "message": "Hi Marco, Yunqing, \n\nIn this CL, we adjust MV precision for relatively static (e.g. background) large blocks with low spatial complexity. This is enabled for speed 7, 8 HDRES only. We have renamed the existing sf: “force_half_pel_block” to “reduce_mv_pel_precision” to facilitate integration with function subpel_select() in nonrd_pickmode.c. \n\nThe following worst-case contents are visually tested:\nSpeed 7: mj1vc720p (600 kbps, 800 kbps), vidyo1 (800 kbps)\nSpeed 8: mj1vc720p (600 kbps, 800 kbps) \nThere are no noticeable differences as compared with the ref.\n\nWe have used a threshold to label a block has very low SAD. To do this, we have added an array element source_sad_nonrd[2]. If this is OK, that is already in the patchset. Alternatively, we can introduce and use a new level “kVerylowSad” in the existing enum table. However, this will need changes at several places to ensure bit-exactness. If you prefer that, we can do this in a separate CL.\n\nPlease review the CL.\n\nThanks,\nNeeraj",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27e3338b_93f39df4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-08-18T16:36:59Z",
      "side": 1,
      "message": "Good speedup. The tradeoff looks good too. Using a new level sounds more clear than current implementation.\n\nAlso, what is the speedups for those best \u0026 worst clips? Does worst clips get more speedups?",
      "parentUuid": "1ae4ebc1_01c076e2",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7613359_4235ce06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-08-19T15:33:06Z",
      "side": 1,
      "message": "Sure, we will create a new level kVerylowSad. Please see speed-ups for the best / worst case (considered all clips with \u003e0.5% avg.psnr loss):\n```    \n       cpu      clip              BD Rate Loss (%)          Instr. count \n                              avg.psnr   ovr.psnr    ssim   Reduction (%) \nBest    7    testnoise720p    -0.3958    -0.2445   -0.7787    1.82\n        8    testnoise720p    -0.7229    -0.486    -0.7079    1.51\nWorst   7    vidyo1            0.8261     0.7455    0.5534    4.88\n             mj1vc720p         0.6386     0.6482    0.7535    1.52\n        8    mj1vc720p         0.8805     0.8451    0.9263    1.65\n             vidyo1            0.8198     0.7863    0.673     4.74\n             vidyo3            0.7089     0.6697    0.6202    4.54\n```\nThe clip: mj1vc720p is offering less speed-up than expected. The drop is higher in Cb plane for speed 8, visually not noticeable. We can study this further.",
      "parentUuid": "27e3338b_93f39df4",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b13a0c_00a621c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-08-19T15:33:06Z",
      "side": 1,
      "message": "Hi Yunqing, Marco,\n\nThanks for reviewing the CL! In addition to specific responses to comments, we have another recent observation. \n\nTests indicated that we can employ both algos for some speeds. We can separate them into two separate sfs. For example, the existing logic can be enabled for speeds 8, 9, 10, whereas the new logic can be enabled for speeds 7, 8, 9. If we have the new logic on top of existing, we can get the following results already (without any tuning):\n```\ncpu Test set    Instr cnt     BD-Rate Loss (%)       trade   max-qty  max-drop-content\n                 Red (%) avg.psnr  ovr.psnr   ssim   -off     -drop   \n8    rtc         2.202    0.3904    0.3809   0.4481  0.1773   1.0272  mj1vc720p\n8    rtc_derf    1.383    0.1483    0.1715   0.1574  0.1073   0.9673  street180p\n9    rtc         1.811    0.4158    0.3704   0.3759  0.2295   1.7233  vidyo1_1280x720_60\n9    rtc_derf    1.588    0.5162    0.5427   0.3911  0.325    2.2115  desktopqvga2_320_240\n```\nHere, the action item will be to reduce quality impact in terms of all: avg psnr, ssim and importantly, visual tests.\n\nWe plan to study this in detail \u0026 get back in the next couple of days. Please let us know if any suggestions.\n\nRegards,\nNeeraj\n",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e000cc_78cd7e23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-08-19T18:02:16Z",
      "side": 1,
      "message": "Sounds good. Also, looks like we have another speed feature (reduce_zeromv_mvres) for MV precision. Please see if these 2 features can be consolidated while you do the refactoring.",
      "parentUuid": "a7613359_4235ce06",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7719847_bc301e98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-08-19T22:35:45Z",
      "side": 1,
      "message": "Let\u0027s get this one in and please continue on refactoring/addressing the comments. Thanks.",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6b38d18_0edc359f",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-08-18T16:50:45Z",
      "side": 1,
      "message": "This logic (reduce_mv_pel_precision \u003d\u003d 2) tends to reduce subpel for low motion areas, but we found (as in logic above at line 211, reduce_mv_pel_precision \u003d\u003d 2) that for high motion it was less noticeable to reduce from 1/4 -\u003e 1/2. For background low-motion blocks, subpel seemed useful for removing noise, so we kept it there. The visual impact of the two levels (1 and 2) are then different?",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c439bbf_2e3127b5",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-08-19T15:33:06Z",
      "side": 1,
      "message": "For reduce_mv_pel_precision \u003d\u003d 1 visual testing, some general observations are:\n(i) There are no artifacts introduced or worsened due to the CL \n(ii) If we play videos, the difference is unnoticeable for all tested contents (worst case: “vidyo1”, “vidyo4”, “mj1vc”, “marcooffice720p”)\n(iii) If we look at frames side-by-side, a part of frame has slightly different noise (“marcooffice720p”), there are no specific patterns / artifacts\n\nI feel, changing pel precision for spatial-temporally simple content in rtc-set generally does not seem to introduce any noticeable visual artifacts for our RT use-case at high speeds. I am not sure of the visual impact of reduce_mv_pel_precision \u003d\u003d 2. We can study that.\n\nYes, subpel is probably better for noise removal at somewhat higher SAD (e.g. 3-5 per-pixel) or to predict better if the block has details. For this algo, we tuned a lower kLowSad level (1.5 per-pixel) than the existing kLowSad (5 per-pixel). These blocks are relatively homogeneous (low source-var). In addition, for blocks with lower QP, subpel may still help, as there is a better chance of details being preserved post-quantization. Thus, (qband !\u003d 0) helped bring down worst-case drops.",
      "parentUuid": "a6b38d18_0edc359f",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db820158_3c96f755",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 222,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-08-19T22:30:47Z",
      "side": 1,
      "message": "Ok, i will try to test visually on some noisy clips next week.",
      "parentUuid": "8c439bbf_2e3127b5",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be025051_8cabd7f1",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 1346,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-08-18T16:57:32Z",
      "side": 1,
      "message": "For resoln \u003e\u003d 720p, look like we would have this feature on for 7,8, and 10. I think it should also be enabled for speed 9, can you check if setting 9 to the same existing level (\u003d2) as 10 as any benefit?",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f6cb69a_74054386",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 1346,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-08-19T15:33:06Z",
      "side": 1,
      "message": "If we extend the existing reduce_mv_pel_precision \u003d\u003d 2  from speed 10 to speeds 9, 8, 7,  the results are: \n```\ncpu    Test set  Instr. Cnt     BD-Rate Loss (%)    trade   max-qty  max-drop-content\n                  Red (%) avg.psnr ovr.psnr  ssim   -off    -drop\n7    rtc         1.073     0.3751   0.3972  0.5439  0.3496  3.8443  thaloundeskmtgvga\n7    rtc_derf    1.616     0.5296   0.5548  0.5275  0.3278  1.7053  desktopqvga_320_240\n8    rtc         0.662     0.2617   0.2776  0.2799  0.3954  1.855   desktop360p\n8    rtc_derf    0.785     0.1222   0.1406  0.0773  0.1557  0.7328  desktop1_320_180\n9    rtc         0.779     0.1474   0.1693  0.1403  0.1893  1.1946  marcooffice720p\n9    rtc_derf    0.946     0.3168   0.3201  0.3054  0.335   1.014   capture_pixel_outdoor  \n```\nHere, for cpu 9 rtc, we see a small speed-up. For other speed/test sets, the trade-off is not good. We can try tuning this to make better along with reduce_mv_pel_precision \u003d\u003d 1, as mentioned in the main review message.",
      "parentUuid": "be025051_8cabd7f1",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5083314b_4910d6d2",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 1346,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-08-19T22:30:47Z",
      "side": 1,
      "message": "Are these numbers with enabling both existing subpel reduction speed features (as they are both used for speed 10): reduce_mv_pel_precision \u003d 2 and reduce_zeromv_mvres \u003d true? Since they are both on at speed 10 wondering if they should both be enabled at speed 9.\n\nThe reduce_zeromv_mres will reduce subpel if block is likely static, so the aim is similar to the new reduce_mv_pel_precision \u003d 1. Can you compare these two speed features and maybe consolidate them?",
      "parentUuid": "2f6cb69a_74054386",
      "revId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3f4c05e8930cfcbd6777a045ae7ef59cdeba5bff",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}