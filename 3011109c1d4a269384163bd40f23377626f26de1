{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9cdd0b55_49c75cfb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 9823
      },
      "writtenOn": "2023-03-17T21:02:39Z",
      "side": 1,
      "message": "Using encoding_time increase might be a bit more intuitive when it gets slower.",
      "range": {
        "startLine": 17,
        "startChar": 47,
        "endLine": 17,
        "endChar": 61
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f8f8fda_1cc0b403",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2023-03-16T17:10:29Z",
      "side": 1,
      "message": "The performance gain looks real good.\nWhy is the encoding speed improved?\nThe cl extends the decision for using screen content tools, which usually slows down the encoding.",
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd42b155_069e32d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-03-16T17:13:45Z",
      "side": 1,
      "message": "The perf number I reported is encoding speed-up instead of encoding time, i.e., negative number means slower speed.\n\nThe big speed slow down is from the clips with significant bdrate gains.",
      "parentUuid": "3f8f8fda_1cc0b403",
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5a8f5ce_ca3c3aa4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6585
      },
      "writtenOn": "2023-03-16T17:16:56Z",
      "side": 1,
      "message": "Never mind. I understand the negative speedup means slow down now.\nPlease add a description for this in the commit message.",
      "parentUuid": "3f8f8fda_1cc0b403",
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53e7fbf7_2c40a748",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 6585
      },
      "writtenOn": "2023-03-16T17:13:28Z",
      "side": 1,
      "message": "This might be a way to silent the warning of const pointers.\nBut it also hides the intent of keeping cpi constant. It might be dangerous that cpi could be changed while we don\u0027t know.\nIs there a better way?",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6d4056b_fc9d8cf6",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-03-16T17:32:04Z",
      "side": 1,
      "message": "Yeah, I was also considering what is the best data structure to add this params in. Do you have better suggestions?",
      "parentUuid": "53e7fbf7_2c40a748",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56e44b8c_9443fcdb",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 6585
      },
      "writtenOn": "2023-03-16T23:00:16Z",
      "side": 1,
      "message": "I think you can pass palette_pixel_num as a pointer in the function.\nAlthough I know there might be a long path from the usage of the variable to the assignment of it.\nI didn\u0027t inspect it carefully, but I suggest you to try to pass it first.",
      "parentUuid": "d6d4056b_fc9d8cf6",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "519d18f5_f6c57014",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 9823
      },
      "writtenOn": "2023-03-17T21:02:39Z",
      "side": 1,
      "message": "+1. Do not cast `const AV1_COMP *` to `AV1_COMP *`. This is undefined behavior and will lead to more bugs down the line.\nAlso note that `cpi` is shared by multiple threads, so writing to it directly without synchronization is not thread safe (this is why cpi is marked as const in most functions). I\u0027m actually surprised that tsan didn\u0027t complain.\n\nYou can pass in another pointer to `av1_search_palette_mode` as suggested by Cheng, or you can add an additional member to `MACROBLOCK`. There is an independent `MACROBLOCK` for each thread, so it should be safe to write to it. You might need to aggregate the stats elsewhere though.",
      "parentUuid": "56e44b8c_9443fcdb",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04fc3d81_fa5c950b",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-03-17T21:54:11Z",
      "side": 1,
      "message": "You are right, thanks for reminding the thread safe concern of cpi.\n\nPer offline discussion with Cheng, we were planning to passing in a pointer into that function. \n\nFor MACROBLOCK member approach, it\u0027s new to me. Is it similar to what we are handling \"cnt_zeromv\" now, where we accumulate the stats via `av1_accumulate_rtc_counters()` in `encode_tiles()` and `accumulate_counters_enc_workers` for tiles and threads?",
      "parentUuid": "519d18f5_f6c57014",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2914c506_ec720da9",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 9823
      },
      "writtenOn": "2023-03-17T22:04:42Z",
      "side": 1,
      "message": "Yeah you should be able to use `cnt_zeromv` as a template if you add a member to `MACROBLOCK`.\n\nYou can also try to pass in an additional pointer to that function, but then you\u0027ll need to modify the call chain starting from `av1_encode_frame`, which might be quite a bit of work.",
      "parentUuid": "04fc3d81_fa5c950b",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9287272b_361aaaf2",
        "filename": "av1/encoder/intra_mode_search.c",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-03-17T22:14:26Z",
      "side": 1,
      "message": "Indeed. I initially wanna avoid it, but it turns out that casting cpi is not a good idea neither. Thank you Chi Yo and Cheng.",
      "parentUuid": "2914c506_ec720da9",
      "range": {
        "startLine": 1031,
        "startChar": 6,
        "endLine": 1031,
        "endChar": 18
      },
      "revId": "3011109c1d4a269384163bd40f23377626f26de1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}