{
  "comments": [
    {
      "key": {
        "uuid": "69a858ac_57592ecb",
        "filename": "aom_dsp/bitreader_buffer.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5005
      },
      "writtenOn": "2018-06-22T18:57:32Z",
      "side": 1,
      "message": "I am a little suspicious about this and below. This would add overhead to all the calls to this function even when bits are passed in as a known constant..",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "6a10316079723f6936308e0ae48ab43a1de43034",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dda3944_24779ccc",
        "filename": "aom_dsp/bitreader_buffer.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-06-29T23:20:02Z",
      "side": 1,
      "message": "If bits \u003e 31 is true, we should call error handler and return 0, similar to lines 28-29:\n\n  if (bits \u003e 31) {\n    if (rb-\u003eerror_handler) rb-\u003eerror_handler(rb-\u003eerror_handler_data);\t\n    return 0;\t\n  }\n\nIt is bad to return successfully with an incorrect value.",
      "range": {
        "startLine": 35,
        "startChar": 17,
        "endLine": 35,
        "endChar": 26
      },
      "revId": "6a10316079723f6936308e0ae48ab43a1de43034",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52e72d4d_27952c8d",
        "filename": "aom_dsp/bitreader_buffer.c",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-06-29T23:20:02Z",
      "side": 1,
      "message": "The aom_rb_read_xxx functions are easy to use, but are inefficient. (For example, it reads only one bit at a time.) The overhead of this check should be negligible compared with the cost of the for loop below.",
      "parentUuid": "69a858ac_57592ecb",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "6a10316079723f6936308e0ae48ab43a1de43034",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}