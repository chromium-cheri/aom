{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "612d097d_94f0032e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-07-31T08:57:40Z",
      "side": 1,
      "message": "In this CL, a `longjmp` target has been introduced in `tpl_worker_hook()` to facilitate the error propagation in case of tpl row-multithreading. \n\nA mutex lock object and a flag `tpl_mt_exit` is introduced in the structure `AV1TplRowMultiThreadInfo` for error handling. `tpl_mt_exit` will be set to 1 in case a main/worker thread encounters an error. The other workers will terminate their jobs appropriately by checking the status of this flag. Also added `tpl_dealloc_temp_buffers()` calls inside `aom_codec_destroy()` to de-allocate the tpl buffers in case of an error during tpl processing. \n\nIn case of tpl row-multithreading, due to top-right dependency, the worker on an mb_row waits for the completion of the tpl processing of the top and top-right blocks. Hence, in case a thread (main/worker) encounters an error,  in order to avoid the dependent workers from waiting indefinitely (in `av1_mc_flow_dispenser_row()`) `set_mode_estimation_done()` is invoked before returning from the hook function. \n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}