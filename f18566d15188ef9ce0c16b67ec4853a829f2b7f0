{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "612d097d_94f0032e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-07-31T08:57:40Z",
      "side": 1,
      "message": "In this CL, a `longjmp` target has been introduced in `tpl_worker_hook()` to facilitate the error propagation in case of tpl row-multithreading. \n\nA mutex lock object and a flag `tpl_mt_exit` is introduced in the structure `AV1TplRowMultiThreadInfo` for error handling. `tpl_mt_exit` will be set to 1 in case a main/worker thread encounters an error. The other workers will terminate their jobs appropriately by checking the status of this flag. Also added `tpl_dealloc_temp_buffers()` calls inside `aom_codec_destroy()` to de-allocate the tpl buffers in case of an error during tpl processing. \n\nIn case of tpl row-multithreading, due to top-right dependency, the worker on an mb_row waits for the completion of the tpl processing of the top and top-right blocks. Hence, in case a thread (main/worker) encounters an error,  in order to avoid the dependent workers from waiting indefinitely (in `av1_mc_flow_dispenser_row()`) `set_mode_estimation_done()` is invoked before returning from the hook function. \n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4006c667_4b2f5229",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-07-31T23:32:46Z",
      "side": 1,
      "message": "Looks good. Thanks.",
      "revId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "759da181_7cb8a980",
        "filename": "av1/encoder/tpl_model.h",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-07-31T23:32:46Z",
      "side": 1,
      "message": "Make sense to add a mutex for all threads\u0027 error handling.",
      "range": {
        "startLine": 79,
        "startChar": 19,
        "endLine": 79,
        "endChar": 25
      },
      "revId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "f18566d15188ef9ce0c16b67ec4853a829f2b7f0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}