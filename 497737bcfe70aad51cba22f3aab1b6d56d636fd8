{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6fcf7b5e_1a21ce2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2023-03-20T14:25:24Z",
      "side": 1,
      "message": "Can we make next release libaom 4.0.0, i.e. an incompatible release?\n\nThere\u0027re several reasons:\n\n1. 3.0.0 was released two years ago, I think it\u0027s a long enough time to keep compatibility.\n2. If we want to add new features, it\u0027s difficult to keep compatibility. We can\u0027t keep it forever. At some point we\u0027ll need to break.\n3. Work on AV1 RTC for Meet is very active, especially SVC. It\u0027ll be messy and hard to use if we do this kind of change every time.\n\nJames, Wan-Teh, please let me know what you think.",
      "revId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24b30cff_ace25390",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-20T16:43:45Z",
      "side": 1,
      "message": "Jerome: This kind of issue can still arise after libaom 4.0.0. In this particular case, there are several ways to restore compatibility. Versioning the `aom_svc_params_t` struct is not the only solution.\n\nFor example, we can remove the `speed_per_layer` field from the `aom_svc_params_t` struct and add a new codec control, say `AV1E_SET_SVC_SPEED_PER_LAYER`, to set the speed per layer.",
      "parentUuid": "6fcf7b5e_1a21ce2c",
      "revId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc44c76a_87dd5675",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2023-03-20T16:49:31Z",
      "side": 1,
      "message": "Adding a new codec control sounds good, but it may be confusing since everything else is in aom_svc_params_t, why speed per layer setting is not?\n\nIs it worth to sacrifice the easiness to use the library while trying to keep it compatible?",
      "parentUuid": "24b30cff_ace25390",
      "revId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb5c7ce0_a2827da6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2023-03-20T17:23:22Z",
      "side": 1,
      "message": "I\u0027m fine we adding new setting with new control, Will revert the change,",
      "parentUuid": "dc44c76a_87dd5675",
      "revId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "497737bcfe70aad51cba22f3aab1b6d56d636fd8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}