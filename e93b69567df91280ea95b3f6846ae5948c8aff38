{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1dd3daab_eb0b5a5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5290
      },
      "writtenOn": "2020-11-02T17:23:47Z",
      "side": 1,
      "message": "I\u0027ll let Maggie review again, and rubber-stamp +2 later.",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9819254b_f06e1ed0",
        "filename": "tools/convexhull_framework/src/CalcBDRate.py",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 18232
      },
      "writtenOn": "2020-11-02T19:09:34Z",
      "side": 1,
      "message": "if qp[] is in decreasing order, qp[i] always \u003e\u003d qp[i+1], so qp[i] always \u003e qp[i+1] - 1. not quite understand why check (qp[i] !\u003d qp[i+1]-1) which seems always true. did I miss anything?\n\nI have 2 ideas here:\n- Can we remove line 38/39 if check, and change line 42 from (qp[i] !\u003d qp[i+1]-1) to (qp[i] \u003e qp[i+1] + 1)?\n\n- we can remove (i\u003clen(qp)-1) from line 42 if check by changing line 33 for loop from range(len(qp)) to range(len(qp) -1) and at the end of function just appending the last element of the 3 lists (using[-1]). As (i\u003clen(qp)-1) is mainly to exclude the last item from interpolating operation. I think this change will make logic more straightforward.",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bb2d5e5_fe38d083",
        "filename": "tools/convexhull_framework/src/CalcBDRate.py",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-11-02T23:09:49Z",
      "side": 1,
      "message": "the input QP may not be in monotonic increasing or decreasing order. I updated the comment and logic here to make it more clearer. Basically, as long as qp[i] and qp[i+1] are not continuous value, we will need to generate interpolated points in the range of (qp[i], qp[i+1), excluding qp[i] and qp[i+1]. but we always need to make sure the interpolated (logbr, qt) are in the monotonic non-decreasing order.",
      "parentUuid": "9819254b_f06e1ed0",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7bcd2fd_44de0edf",
        "filename": "tools/convexhull_framework/src/CalcBDRate.py",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-11-03T17:49:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0bb2d5e5_fe38d083",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cf7c974_4159020a",
        "filename": "tools/convexhull_framework/src/CalcBDRate.py",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 18232
      },
      "writtenOn": "2020-11-02T19:09:34Z",
      "side": 1,
      "message": "minor one: can be simplified as \"if EnablePreInterpolation\" since EnablePreInterpolation is boolean type.",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbc5eaf8_eede10de",
        "filename": "tools/convexhull_framework/src/CalcBDRate.py",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-11-02T23:09:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9cf7c974_4159020a",
      "revId": "e93b69567df91280ea95b3f6846ae5948c8aff38",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}