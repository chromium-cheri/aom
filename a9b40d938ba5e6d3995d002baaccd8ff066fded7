{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e20f9235_5fdcdb64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-10-27T20:46:16Z",
      "side": 1,
      "message": "Coverity warns about the code that Satheesh just added in https://aomedia-review.googlesource.com/c/aom/+/182962.\n\nWe can look into creating a function model for `aom_internal_error()`. But note that `aom_internal_error()` calls `longjmp()` only if `info-\u003esetjmp` is 1:\n\n```\nvoid aom_internal_error(struct aom_internal_error_info *info,\n                        aom_codec_err_t error, const char *fmt, ...) {\n  ...\n\n  if (info-\u003esetjmp) longjmp(info-\u003ejmp, info-\u003eerror_code);\n}\n```\n\nIt seems hard for a static analyzer to prove that `info-\u003esetjmp` must be 1 inside `identify_regions()`.",
      "revId": "a9b40d938ba5e6d3995d002baaccd8ff066fded7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "861c97ea_699cc35e",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1770,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-10-27T20:46:16Z",
      "side": 1,
      "message": "We can also return `bool` here and use `true` for success and `false` for memory allocation failure. Would you prefer that?",
      "revId": "a9b40d938ba5e6d3995d002baaccd8ff066fded7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}