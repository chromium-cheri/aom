{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "583a5a2b_92af7760",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-28T21:58:22Z",
      "side": 1,
      "message": "I remember UBSan warns about unaligned loads for x86, so it\u0027s good to avoid them if we can.",
      "revId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd60667e_9e8fc638",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-04-28T23:34:07Z",
      "side": 1,
      "message": "\u003e I remember UBSan warns about unaligned loads for x86, so it\u0027s good to avoid them if we can.\n\nThat\u0027s more in the sense of *(uint32_t*)uint8_ptr. Here the underlying instructions for _mm_loadl_epi64 and _mm_loadu_si128 (as opposed to _mm_load_si128) accept unaligned addresses",
      "parentUuid": "583a5a2b_92af7760",
      "revId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2f38a1a_36fbe520",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-29T00:48:42Z",
      "side": 1,
      "message": "`*(uint32_t*)uint8_ptr` (in the form of `((const uint32_t *)smooth_weights)[0]`) is used in two places in aom_dsp/x86/intrapred_ssse3.c,",
      "parentUuid": "fd60667e_9e8fc638",
      "revId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a01d0226_ca0d4564",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-04-29T01:51:38Z",
      "side": 1,
      "message": "\u003e `*(uint32_t*)uint8_ptr` (in the form of `((const uint32_t *)smooth_weights)[0]`) is used in two places in aom_dsp/x86/intrapred_ssse3.c,\n\nMy mistake, I didn\u0027t look. In any case I don\u0027t think this surfaced because of the default alignment being used and now that we\u0027re forcing it things will be fine.",
      "parentUuid": "a2f38a1a_36fbe520",
      "revId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "dbd7660f140c04c547de8e12f4a3a36876b653b7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}