{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0aef36_57368388",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-12-22T00:13:53Z",
      "side": 1,
      "message": "So, with this CL, every place that calls this function needs to handle the NULL return?",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 31
      },
      "revId": "89eae446122d780de4f57e1b238fa53719acf555",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55d10cb5_60b23660",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-12-22T02:55:45Z",
      "side": 1,
      "message": "\u003e So, with this CL, every place that calls this function needs to handle the NULL return?\n\nFor now, yes. I had another modification which passed in an error struct, but I think the call sites need a closer look since they can be called from different threads. That was made more complicated with the changes made for frame parallel encoding. This is what I was referring to when we talked about changing the ownership of the bug to Ittiam.\n\nThis isn\u0027t a great fix on its own, but it lowers the security risk (NULL pointer dereferences are lower priority, often marked no security impact, than an arbitrary code jump).",
      "parentUuid": "aa0aef36_57368388",
      "range": {
        "startLine": 152,
        "startChar": 9,
        "endLine": 152,
        "endChar": 31
      },
      "revId": "89eae446122d780de4f57e1b238fa53719acf555",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}