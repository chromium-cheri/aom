{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6a48c310_b549bd83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-31T16:53:56Z",
      "side": 1,
      "message": "Hi Marco, Yunqing,\n\nIn this CL, we fixed issues with the speed feature skip_cdef_sb when SB size is 128x128. \nIn the parent version, the decision to skip CDEF filtering is done and stored at 64x64/64x128/128x64/128x128 block level (i.e., first mi instance) in pick_sb_modes_nonrd(). This is consistent with signaling in the bitstream. Eg: After processing 128x128 superblock, the skip decision of first 64x64 CDEF block overwrites the decisions of remaining 64x64 CDEF blocks after the call to av1_nonrd_use_partition() in encode_nonrd_sb(). The same is seen when 128x64/64x128 blocks are chosen. As per our understanding, this is not correct. Hence the relevant code is cleaned-up in this CL.\n\nThe CL has effect only for rtc-screen, speed\u003d9 and 10 as it fixes issues when skip_cdef_sb\u003d1, cdef_pick_method \u003d CDEF_PICK_FROM_Q and sb_size\u003d128x128. \n\nFor rtc-screen, speed\u003d9, 7 out of 9 contents improve in quality. For rtc-screen, speed\u003d10, 8 out of 9 contents improve in quality. The contents that are dropping in BD-Rate are given below:\n\n```\n                                                      BD-Rate Loss(%)\ncpu                 Content                    avg.psnr   ovr.psnr   ssim\n9             slides_webplot.1920_1080          1.2493     1.9070    1.2734\n10        screen_crd_colwinscroll.1920_1128     0.3104     0.2370   -0.1049\n```\n\nWe also verified that CL produces bit-exact output for few test-set/speed setting combinations in case of --rt/--good usage.\n\nPlease let us know your opinion on the CL.\n\nRegards,\nRanjit",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6af52b_7b7efe4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-10-31T19:52:35Z",
      "side": 1,
      "message": "There\u0027s some code in pick_sb_modes_nonrd to change the flag based on mode search and noise sensitivity:\n\nhttps://aomedia.googlesource.com/aom/+/refs/heads/main/av1/encoder/partition_search.c#2296\n\nWhich is very important to reduce visual artifacts from cdef skipping.",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ab15ca8_23701171",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-10-31T19:54:36Z",
      "side": 1,
      "message": "If the superblock size is 128x128, the flag change is based on the 128x128 block. This is to be conservative about cdef skipping to prevent severe visual artifacts.",
      "parentUuid": "5f6af52b_7b7efe4b",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b02e3e2_61ff03c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-10-31T20:02:46Z",
      "side": 1,
      "message": "Correction: The flag is decided further based on mode search, color sensitivity (not noise) and distance from key frame, and source sad, after the initialization to 1.",
      "parentUuid": "5ab15ca8_23701171",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b68783ff_fe1bae5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-31T20:04:48Z",
      "side": 1,
      "message": "Hi Jerome,\nWhen superblock size is 128x128, the skip flag (in first mi block) is not obtained covering complete superblock in pick_sb_modes_nonrd(), but it is still used to overwrite the skip flags of all 64x64 blocks. Hence we feel that current CL fixes an algorithmic inconsistency as it is not correct to skip the CDEF filtering of complete superblock region based on first 64x64 region. \nPlease let us know if you see any issues with our understanding.\nRegards,\nRanjit",
      "parentUuid": "5f6af52b_7b7efe4b",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b02d03a6_9f795ee9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2022-10-31T20:37:32Z",
      "side": 1,
      "message": "There\u0027re two cases here when superblock size is 128x128:\n\n1. The superblock is not splitted. In this case, the skip flag set in pick_sb_modes_nonrd covers the whole superblock, thus the skip flag for 64x64 subblocks inside needs to be overwritten. If not, 3 of the 64x64 subblocks will always be skipped for CDEF, which may cause visual artifacts.\n\n2. The superblock is splitted into 64x64 or smaller. In this case, the skip flag will be set for each 64x64 subblock inside the superblock, in pick_sb_modes_nonrd. Then there\u0027s no need to overwrite the flags.\n\nSo this change should only apply to case 2. I think a correct change should see if the superblock is splitted or not when SB size is 128x128. And overwrite if it\u0027s not splitted.",
      "parentUuid": "b68783ff_fe1bae5c",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a095b237_20cb2635",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-11-02T12:29:58Z",
      "side": 1,
      "message": "Hi Jerome, \nPlease find our comments below.\nRegards,\nRanjit",
      "revId": "f695447e0b6f6def2d5b17b6a8550cef3d579f8f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}