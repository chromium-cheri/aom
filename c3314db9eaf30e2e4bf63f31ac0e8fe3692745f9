{
  "comments": [
    {
      "key": {
        "uuid": "efbed7f9_1222f200",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5020
      },
      "writtenOn": "2019-08-14T20:01:25Z",
      "side": 1,
      "message": "HIGHBITDEPTH",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae436017_05381421",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5960
      },
      "writtenOn": "2019-08-14T20:13:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efbed7f9_1222f200",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3a9ce99_92ac86a5",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5020
      },
      "writtenOn": "2019-08-14T20:01:25Z",
      "side": 1,
      "message": "\u0027pipeline\u0027 and maybe \u00278-bit\u0027",
      "range": {
        "startLine": 108,
        "startChar": 40,
        "endLine": 108,
        "endChar": 47
      },
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a475dc8f_87ab7367",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 5960
      },
      "writtenOn": "2019-08-14T20:13:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3a9ce99_92ac86a5",
      "range": {
        "startLine": 108,
        "startChar": 40,
        "endLine": 108,
        "endChar": 47
      },
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0376ee7_09cfa063",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5020
      },
      "writtenOn": "2019-08-14T20:01:25Z",
      "side": 1,
      "message": "for compatibility I think we could also add a test for CONFIG_LOWBITDEPTH and use that if FORCE_ wasn\u0027t set. Tom, what do you think? Where would be the best place for the test?",
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f00da6c0_321997be",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-08-15T17:06:30Z",
      "side": 1,
      "message": "\u003e for compatibility I think we could also add a test for CONFIG_LOWBITDEPTH\n\nIf we do this people will never stop expecting CONFIG_LOWBITDEPTH to work. I don\u0027t really like that-- but it\u0027s probably not going to hurt anything but my feelings.\n\n\u003e Where would be the best place for the test?\n\nProbably at the top of aom_configure.cmake: before the comment about generating the user config.  The only annoying part is setting the right help string when you change the FORCE_HIGHBITDEPTH_DECODING value because a user expected CONFIG_LOWBITDEPTH to work.\n\nNote: this should be a macro, but since there\u0027s only one config value we care about dropping this in should be fine.\n\nif(CONFIG_LOWBITDEPTH)\n  message(WARNING \"CONFIG_LOWBITDEPTH has been removed, enabling FORCE_HIGHBITDEPTH_DECODING\")\n  set(FORCE_HIGHBITDEPTH_DECODING 1 CACHE NUMBER \"${cmake_cmdline_helpstring}\")\nendif()\n\nThe helpstring nonsense will ensure -DFORCE_HIGHBITDEPTH_DECODING\u003d1 shows up in the config string stored in aom_config.c. That\u0027ll be in addition to the -DCONFIG_LOWBITDEPTH\u003d1, but I don\u0027t see a problem with that.",
      "parentUuid": "d0376ee7_09cfa063",
      "revId": "c3314db9eaf30e2e4bf63f31ac0e8fe3692745f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}