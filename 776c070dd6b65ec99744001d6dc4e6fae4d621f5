{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "697c2854_77c7c86d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2023-01-06T19:54:01Z",
      "side": 1,
      "message": "Hi Yunqing,\nIn this CL, we refactored the code related to weight calculation in apply_temporal_filter(). In the parent version, few of the variables related to weight calculation were calculated for every pixel though they are constant at sub-block level. In this CL, the relevant calculations are done beforehand and the same are indexed appropriately during the weight calculation. We modified both SSE2 and AVX2 variants of the function accordingly.\n\nPlease check the borg results for good encoding mode below:\n```\n                     Instruction Count      BD-Rate Loss(%)\n   cpu   Testset       Reduction(%)    avg.psnr   ovr.psnr   ssim\n     3   LOWRES2         0.070         0.0000     0.0000    0.0000\n     3   MIDRES2         0.107         0.0000     0.0000    0.0000\n     3    HDRES2         0.126         0.0000     0.0000    0.0000\n     4   LOWRES2         0.117         0.0000     0.0000    0.0000\n     4   MIDRES2         0.163         0.0000     0.0000    0.0000\n     4    HDRES2         0.191         0.0000     0.0000    0.0000\n     5   LOWRES2         0.201         0.0000     0.0000    0.0000\n     5   MIDRES2         0.263         0.0000     0.0000    0.0000\n     5    HDRES2         0.321         0.0000     0.0000    0.0000\n     6   LOWRES2         0.115         0.0000     0.0000    0.0000\n     6   MIDRES2         0.243         0.0000     0.0000    0.0000\n     6    HDRES2         0.296         0.0000     0.0000    0.0000\n\n```\n\nThe instruction count reduction specified has been measured using command:\n $ perf stat -e instructions:u ./aomenc â€¦\n\nPlease review the CL. \n\nRegards,\nRanjit",
      "revId": "776c070dd6b65ec99744001d6dc4e6fae4d621f5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}