{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f96a025_57201908",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-06-09T11:42:24Z",
      "side": 1,
      "message": "In sync_enc_workers(), the error status of master thread is not available, as winterface-\u003esync() is invoked only for worker threads. The error status of the master thread needs to be read to facilitate its error propagation. This CL fixes this issue by initializing \u0027had_error\u0027 with the error status of the master thread.\n\nThe sync of master thread in sync_enc_workers() earlier removed in this [CL](https://aomedia-review.googlesource.com/c/aom/+/140223) to facilitate FPMT. This is because, in case of FPMT the master threads of each parallel encode frame (level 1 workers) will be overloaded as slave threads (level 2 workers) when they reach MT stages in their respective frame encodes. As the state of the master thread would be set to \"WORK\" due to the ‘get_compressed_data_hook’ being run on it, sync must not be called on it before it exits the frame parallel encode. Otherwise it may result in deadlock.",
      "revId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd68750d_91eca143",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-06-12T18:32:47Z",
      "side": 1,
      "message": "Mater thread\u0027s error isn\u0027t counted here yet, right?",
      "range": {
        "startLine": 1272,
        "startChar": 4,
        "endLine": 1272,
        "endChar": 42
      },
      "revId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59f663aa_fa8e3885",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-06-12T18:40:23Z",
      "side": 1,
      "message": "I see you have following CLs, so this is handled there?",
      "parentUuid": "dd68750d_91eca143",
      "range": {
        "startLine": 1272,
        "startChar": 4,
        "endLine": 1272,
        "endChar": 42
      },
      "revId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e01636cb_147b254f",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-06-13T10:46:43Z",
      "side": 1,
      "message": "In this CL \u0027had_error\u0027 is initialized with the error status of the main thread (please refer line 1267) and in the subsequent [CL](https://aomedia-review.googlesource.com/c/aom/+/176342) its error details are obtained. winterface-\u003esync() is not invoked by the main thread unlike the worker threads to facilitate FPMT.",
      "parentUuid": "59f663aa_fa8e3885",
      "range": {
        "startLine": 1272,
        "startChar": 4,
        "endLine": 1272,
        "endChar": 42
      },
      "revId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "68c14b0fd22c8e790b82c84db0c9f43d5086e82c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}