{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5cdb6f9_4f120287",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T22:08:16Z",
      "side": 1,
      "message": "PTAL.\n\nI tested error reporting up this call chain by artificially injecting an error into av1_lookahead_push().",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2148816d_762d9b48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-09-01T22:14:00Z",
      "side": 1,
      "message": "Yunqing, Chi Yo: Please review. Thanks!",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68bf8f99_592ca1f8",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 2916,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T22:08:16Z",
      "side": 1,
      "message": "Since ppi is not passed to av1_receive_raw_frame(), it is useless to check \u0026ppi-\u003eerror here. We should check cpi-\u003ecommon.error instead.",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9b0aff6_ee0d48b6",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 2916,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-09-02T02:56:26Z",
      "side": 1,
      "message": "Not relevant to this patch, but some minor variable naming style enforcement might help us to avoid situations like the ones that lead to this patch. I know this is just C code, but cpi/ppi are, imo, indefensibly awful variable names.",
      "parentUuid": "68bf8f99_592ca1f8",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bccf458_89e30f50",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 3876,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T22:08:16Z",
      "side": 1,
      "message": "encoder_encode() is the only caller of av1_receive_raw_frame().\n\nencoder_encode() calls setjmp(ppi-\u003eerror.jmp) but passes cpi instead of ppi to av1_receive_raw_frame(). Therefore the aom_internal_error(cm-\u003eerror) calls in av1_receive_raw_frame() won\u0027t call longjmp(). However, av1_receive_raw_frame() must call aom_internal_error(cm-\u003eerror) to save an error code in cm-\u003eerror.",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5d441f4_dbfbb3a3",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 3934,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T22:08:16Z",
      "side": 1,
      "message": "apply_denoise_2d() calls aom_internal_error() whenever it returns -1. Therefore we don\u0027t need to call aom_internal_error() here.",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb494ef6_bafd13da",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 3941,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-30T22:08:16Z",
      "side": 1,
      "message": "See my explanation at line 3876. We must call aom_internal_error() here, otherwise the caller (encoder_encode()) won\u0027t see an error code in cm-\u003eerror (i.e., cpi-\u003ecommon.error).",
      "revId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "6082b3688a767c543d0c6412cc2a5134f29d4432",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}