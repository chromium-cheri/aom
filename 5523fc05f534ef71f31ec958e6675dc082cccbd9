{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7750ae47_48561c36",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-10-01T19:26:25Z",
      "side": 1,
      "message": "Jerome: Please check the definition of all-layers:\n\n  /*!\\brief Codec control function to indicate whether to output one frame per\n   * temporal unit (the default), or one frame per spatial layer. int parameter\n   *\n   * In a scalable stream, each temporal unit corresponds to a single \"frame\"\n   * of video, and within a temporal unit there may be multiple spatial layers\n   * with different versions of that frame.\n   * For video playback, only the highest-quality version (within the\n   * selected operating point) is needed, but for some use cases it is useful\n   * to have access to multiple versions of a frame when they are available.\n   */\n  AV1D_SET_OUTPUT_ALL_LAYERS,\n\nand:\n\n  // Each time the decoder is called, we expect to receive a full temporal unit.\n  // This can contain up to one shown frame per spatial layer in the current\n  // operating point (note that some layers may be entirely omitted).\n  // If the \u0027output_all_layers\u0027 option is true, we save all of these shown\n  // frames so that they can be returned to the application. If the\n  // \u0027output_all_layers\u0027 option is false, then we only output one image per\n  // temporal unit.\n  //\n  // Note: The saved buffers are released at the start of the next time the\n  // application calls aom_codec_decode().\n  int output_all_layers;\n\nand:\n\n    if (cm-\u003eshow_existing_frame || cm-\u003eshow_frame) {\n      if (pbi-\u003eoutput_all_layers) {\n        // Append this frame to the output queue\n        if (pbi-\u003enum_output_frames \u003e\u003d MAX_NUM_SPATIAL_LAYERS) {\n          // We can\u0027t store the new frame anywhere, so drop it and return an\n          // error\n          cm-\u003ecur_frame-\u003ebuf.corrupted \u003d 1;\n          decrease_ref_count(cm-\u003ecur_frame, pool);\n          cm-\u003eerror.error_code \u003d AOM_CODEC_UNSUP_BITSTREAM;\n        } else {\n          pbi-\u003eoutput_frames[pbi-\u003enum_output_frames] \u003d cm-\u003ecur_frame;\n          pbi-\u003enum_output_frames++;\n        }\n      } else {\n        // Replace any existing output frame\n        assert(pbi-\u003enum_output_frames \u003d\u003d 0 || pbi-\u003enum_output_frames \u003d\u003d 1);\n        if (pbi-\u003enum_output_frames \u003e 0) {\n          decrease_ref_count(pbi-\u003eoutput_frames[0], pool);\n        }\n        pbi-\u003eoutput_frames[0] \u003d cm-\u003ecur_frame;\n        pbi-\u003enum_output_frames \u003d 1;\n      }\n    } else {\n      decrease_ref_count(cm-\u003ecur_frame, pool);\n    }\n\nI think all-layers may be the exact opposite of top-layer-only. If that\u0027s the case, then the default is already to only output the top spatial layer.",
      "range": {
        "startLine": 104,
        "startChar": 11,
        "endLine": 104,
        "endChar": 21
      },
      "revId": "5523fc05f534ef71f31ec958e6675dc082cccbd9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9874fc4_ea56d3a8",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-12T23:31:23Z",
      "side": 1,
      "message": "Just rebased the CL on the head of tree.\n\nThe codec control you mentioned is off by default in aomdec, so by definition, aomdec should only write top spatial layer (highest quality). However I tried using aomdec to decode a bitstream that has 3 spatial layers, 1 temporal layers in it, and the decoded file has all spatial layers in it. Here is the bitstream:\n\nhttps://drive.google.com/file/d/1NYhkUbKb-AelQiw7vB-n0qqSvJIDKpnI/view?usp\u003dsharing\u0026resourcekey\u003d0-iSMqojk2I0IBiG0SEHzr4A\n\nThe sequence has about 2113 frames, and the decoded result has x3 number of frames in it, showing that it has all spatial layers.\n\nHere is the command line I used:\naomdec --i420 ./out_2.av1 -o svc_test.yuv --summary\n\nIt is either broken or there is some misunderstanding here about the definition.",
      "parentUuid": "7750ae47_48561c36",
      "range": {
        "startLine": 104,
        "startChar": 11,
        "endLine": 104,
        "endChar": 21
      },
      "revId": "5523fc05f534ef71f31ec958e6675dc082cccbd9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25ef294b_ba839138",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-17T23:37:26Z",
      "side": 1,
      "message": "I inspected the bitstream (out_2.av1). It has three operating points. Operating point 0 has one temporal layer and three spatial layers. The problem with out_2.av1 is that each AV1 temporal unit is split into three IVF frames, but libaom assumes an IVF frame contains one AV1 temporal unit and does not rely on the AV1 temporal delimiters to determine the temporal unit boundaries.\n\nIf you fix the encoder program to put one temporal unit (consisting of three AV1 frames) in an IVF frame, then aomdec should be able to decode the highest spatial layers automatically (without the --all-layers option).",
      "parentUuid": "f9874fc4_ea56d3a8",
      "range": {
        "startLine": 104,
        "startChar": 11,
        "endLine": 104,
        "endChar": 21
      },
      "revId": "5523fc05f534ef71f31ec958e6675dc082cccbd9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}