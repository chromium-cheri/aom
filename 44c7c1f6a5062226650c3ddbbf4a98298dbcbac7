{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "101fa2b7_fe3aafa4",
        "filename": "av1/arg_defs.c",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-23T00:37:29Z",
      "side": 1,
      "message": "The other tuning modes use underscores as word separators, it\u0027s good to be consistent here. Should this be named `vmaf_...` if the intent is to tune for vmaf using a saliency map?",
      "revId": "44c7c1f6a5062226650c3ddbbf4a98298dbcbac7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "114fe79b_79741657",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-22T18:21:36Z",
      "side": 1,
      "message": "Unless we add another config, this won\u0027t be compiled:\n  https://build.aomedia.org/jenkins/job/libaom__compile/\n  \nMarking it as an experiment would work (see the examples below, the description should contain \u0027AV1 experiment\u0027):\n  https://build.aomedia.org/jenkins/job/libaom__compile_experiments/\n \nIf this is more of a permanent feature then can it be bundled under CONFIG_TUNE_VMAF?",
      "revId": "44c7c1f6a5062226650c3ddbbf4a98298dbcbac7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89f3431_141e964f",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5022
      },
      "writtenOn": "2023-02-22T23:24:02Z",
      "side": 1,
      "message": "This intends to be a feature that will be enabled in prod. It doesn\u0027t require VMAF lib to work.\n\nProbably a good idea to move it as a standalone experiment, and get unit tests coverage.",
      "parentUuid": "114fe79b_79741657",
      "revId": "44c7c1f6a5062226650c3ddbbf4a98298dbcbac7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b26fa226_ed646c91",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-22T23:45:17Z",
      "side": 1,
      "message": "Thanks James and Jingning. I will update the code.",
      "parentUuid": "f89f3431_141e964f",
      "revId": "44c7c1f6a5062226650c3ddbbf4a98298dbcbac7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e7c637_64b7dde9",
        "filename": "build/cmake/aom_config_defaults.cmake",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-23T00:37:29Z",
      "side": 1,
      "message": "\u003e Probably a good idea to move it as a standalone experiment, and get unit tests coverage.\n\nThat\u0027s compile coverage, not unit test, for any experiment.",
      "parentUuid": "b26fa226_ed646c91",
      "revId": "44c7c1f6a5062226650c3ddbbf4a98298dbcbac7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}