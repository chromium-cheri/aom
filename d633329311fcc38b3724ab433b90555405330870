{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1939030e_ade40d88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "Cheng: Thank you for writing the CL. I suggest some changes.",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e05823_2e7289cc",
        "filename": "aom/aomcx.h",
        "patchSetId": 1
      },
      "lineNbr": 1495,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "Nit: the example file name \"rate_distribution.csv\" has the .csv suffix, which implies the file contains comma-separated values. But the comment at line 1501 says the float values are separated by space. It would be good to avoid this apparent contradiction.\n\nIf the values are separated by space, perhaps we can use the .txt suffix in the example file name here.",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "071bfcba_c2919ab9",
        "filename": "aom/aomcx.h",
        "patchSetId": 1
      },
      "lineNbr": 1500,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "Please add \"const char * parameter\" to this comment.\n\nThe reason we document the type of the \"value\" parameter is that the `aom_codec_control()` function\u0027s prototype is missing the third parameter:\n\n```\n/*!\\brief Algorithm Control\n *\n * aom_codec_control takes a context, a control ID, and a third parameter\n * (with varying type). If the context is non-null and an error occurs,\n...\naom_codec_err_t aom_codec_control(aom_codec_ctx_t *ctx, int ctrl_id, ...);\n```",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "516c6a26_11691111",
        "filename": "aom/aomcx.h",
        "patchSetId": 1
      },
      "lineNbr": 1504,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "These two expressions can be simplified.\n\nIf integer division is used, I believe they are equivalent to\n```\n   * rows \u003d (frame_height + 3) / 4\n   * cols \u003d (frame_width + 3) / 4\n```\n\nIf we don\u0027t want to require integer division, I think they are equivalent to\n```\n   * rows \u003d ALIGN_POWER_OF_TWO(frame_height, 2) / 4\n   * cols \u003d ALIGN_POWER_OF_TWO(frame_width, 2) / 4\n```\nBut our users will need to know what `ALIGN_POWER_OF_TWO` means.",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6054385_b8d83548",
        "filename": "aom/aomcx.h",
        "patchSetId": 1
      },
      "lineNbr": 1506,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "Nit: the word \"requires\" is duplicated. Remove one.",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60d68b3e_db475afc",
        "filename": "av1/arg_defs.c",
        "patchSetId": 1
      },
      "lineNbr": 508,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "Nit: requires to read \u003d\u003e requires reading\n\nOr we can say \"it requires an input file specified by --rate-distribution-info.\"",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "167397db_4222ec3e",
        "filename": "av1/encoder/allintra_vis.c",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-10T18:50:20Z",
      "side": 1,
      "message": "A library should avoid writing a message to stdout or stderr. It is fine to do that in a program such as aomenc, but it is not appropriate to do that in the libaom library.\n\nCan this be avoided?\n\nAlso, ideally the function should fail rather than falling back on the default deltaq-mode\u003d3, so that the user can investigate what is wrong with the rate_distribution_info file. If we automatically fall back, the user may not notice this issue.",
      "revId": "d633329311fcc38b3724ab433b90555405330870",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}