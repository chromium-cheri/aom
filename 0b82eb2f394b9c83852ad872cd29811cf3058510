{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ae2b9f3_3e5fbb3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14993
      },
      "writtenOn": "2022-04-19T15:17:56Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nIn multi-threaded encoding, the dv_costs pointer value is copied from the master thread for all the worker threads. When dv cost update is enabled, this pointer needs to be reallocated on a need basis. Hence, the pointer is reset to NULL in such cases prior to the conditional allocation such that the conditional expression for calling aom_free() is simplified for the same. \n\nAs per the suggestions given by Wan-Teh in https://aomedia-review.googlesource.com/c/aom/+/155681, we have also added comments highlighting the need to keep track of the conditional expressions being used for alloc/free operations specific to worker threads.\n\nWe feel that this patch partially solves the need to decouple the conditional expressions for allocating and freeing thread_data-\u003etd-\u003emb.dv_costs. The check for dv_cost_upd_level !\u003d INTERNAL_COST_UPD_OFF can not be avoided as it results in a NULL pointer access when dv_cost_upd_level is set to INTERNAL_COST_UPD_OFF.\n\nWhen compared to the parent version, the behaviour is changed only when dv_cost_upd_level !\u003d INTERNAL_COST_UPD_OFF and intraBC tool is not evaluated. In such cases, earlier the dv_cost pointer used to be copied from the master thread whereas with this CL it will be set to NULL. Hence, it is ensured that the dv_costs pointer will not be accessed after it is set to NULL.\n\nWe have also validated that this approach fixes the crash which was reported in BUG\u003daomedia:3268 by testing this CL on top of the parent commit for the following fix which was submitted earlier:\nhttps://aomedia-review.googlesource.com/c/aom/+/156325\n\nPlease review this patch and let us know your opinion on this approach.\n\nRegards,\nJayasanker.",
      "revId": "0b82eb2f394b9c83852ad872cd29811cf3058510",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}