{
  "comments": [
    {
      "key": {
        "uuid": "f6d94510_91f3068d",
        "filename": "CMakeLists.txt",
        "patchSetId": 2
      },
      "lineNbr": 938,
      "author": {
        "id": 5215
      },
      "writtenOn": "2017-02-22T19:08:10Z",
      "side": 1,
      "message": "revert this change; just add the following in the if (CONFIG_ANALYZER) block up above:\n\n    set(AOM_APP_TARGETS ${AOM_APP_TARGETS} analyzer)\n\nAnd change the original set to:\n\n    set(AOM_APP_TARGETS ${AOM_APP_TARGETS} aom_cx_set_ref aomdec aomenc decode_to_md5\n        decode_with_drops lossless_encoder set_maps simple_decoder simple_encoder \n        twopass_encoder)",
      "range": {
        "startLine": 930,
        "startChar": 0,
        "endLine": 938,
        "endChar": 0
      },
      "revId": "61692e82426070d4cd13b4f186ad1da6aacc2a57",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b3e598a_99f95a6c",
        "filename": "examples.mk",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 5215
      },
      "writtenOn": "2017-02-22T19:08:10Z",
      "side": 1,
      "message": "You\u0027ll need these flags to build via cmake as well, no?\n\nTo pull in an external environment variable: $ENV{var_name}\n\nFor CXXFLAGS you want to update CMAKE_CXX_FLAGS, via set(), for ex:\n    set(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} $ENV{WX_CXXFLAGS})\n\nDitto for LDFLAGS, which in this case you\u0027ll want CMAKE_EXE_LINKER_FLAGS.\n\nAll of this can go in the if (CONFIG_ANALYZER) block you\u0027ve added in CMakeLists.txt. \n\nAlternatively, you can omit changes to the cmake build in this patch, and file a bug for supporting the analyzer in cmake and assign it to me. If you go that route, please reference this patch in the bug.",
      "range": {
        "startLine": 66,
        "startChar": 14,
        "endLine": 66,
        "endChar": 28
      },
      "revId": "61692e82426070d4cd13b4f186ad1da6aacc2a57",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}