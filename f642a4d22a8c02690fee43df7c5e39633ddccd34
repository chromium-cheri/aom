{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b407ee_af142558",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:41:30Z",
      "side": 1,
      "message": "You need to run clangformat for the code.\nCheck aom workflow 2.1",
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbb346fb_7bc3ad93",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 365,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "Use TEST(AV1FwdTxfm2dTest, DCTScaleTest) here.\n(I assume we are testing DCT here)",
      "range": {
        "startLine": 365,
        "startChar": 0,
        "endLine": 365,
        "endChar": 22
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c8754d9_72b137ea",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 366,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "Remove this line.",
      "range": {
        "startLine": 366,
        "startChar": 2,
        "endLine": 366,
        "endChar": 15
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "311c5705_c0078107",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 374,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "tx_size_list[4]",
      "range": {
        "startLine": 374,
        "startChar": 10,
        "endLine": 374,
        "endChar": 16
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9c9dd69_74196036",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 377,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "tx_size\n\nWe use Snake Case (stylized as snake_case) for variable here.",
      "range": {
        "startLine": 377,
        "startChar": 12,
        "endLine": 377,
        "endChar": 14
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c181d8_94c004ff",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 378,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "stride",
      "range": {
        "startLine": 378,
        "startChar": 8,
        "endLine": 378,
        "endChar": 19
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb1d937_55addcb0",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 378,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "Create a int stride_list[4] \u003d {4, 8, 16, 32} here.",
      "range": {
        "startLine": 378,
        "startChar": 22,
        "endLine": 378,
        "endChar": 34
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebdf29b2_108be55a",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 379,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "No need to use pow here.\npow() is designed for floating point.\nHere we simply need array_size \u003d stride * stride.",
      "range": {
        "startLine": 379,
        "startChar": 4,
        "endLine": 379,
        "endChar": 36
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f059ee62_f1d3dadd",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 386,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "No need to create a new variable.",
      "range": {
        "startLine": 386,
        "startChar": 4,
        "endLine": 386,
        "endChar": 33
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c71d64_cdd2f2e9",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 388,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "/*use_hadamard\u003d*/0",
      "range": {
        "startLine": 388,
        "startChar": 19,
        "endLine": 388,
        "endChar": 20
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ab6e969_2777a615",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 390,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "input_sse",
      "range": {
        "startLine": 390,
        "startChar": 11,
        "endLine": 390,
        "endChar": 12
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbae145f_dfb1c4a2",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 391,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "output_sse",
      "range": {
        "startLine": 391,
        "startChar": 11,
        "endLine": 391,
        "endChar": 12
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06501233_a68a3f13",
        "filename": "test/av1_fwd_txfm2d_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 400,
      "author": {
        "id": 5250
      },
      "writtenOn": "2021-04-30T02:39:19Z",
      "side": 1,
      "message": "What is the scale for each transform size you observed?\nCreate a double ref_scale_list[4] to store the expected value.\n\nYou should set a scale for each transform size.\nFor example, if you observe the scale is around 64 for 16x16 transform, you can use EXPECT_NEAR(scale, 64, 5) or EXPECT_NEAR(scale, ref_scale_list[tx_size], 5)",
      "range": {
        "startLine": 399,
        "startChar": 4,
        "endLine": 400,
        "endChar": 26
      },
      "revId": "f642a4d22a8c02690fee43df7c5e39633ddccd34",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}