{
  "comments": [
    {
      "key": {
        "uuid": "6563459e_ef163ff9",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-03-27T19:00:56Z",
      "side": 1,
      "message": "There is a list of SIMD functions defined under aom_dsp/simd/. Maybe check to see if a similar one exists already?",
      "range": {
        "startLine": 25,
        "startChar": 32,
        "endLine": 25,
        "endChar": 42
      },
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9c0543_57f3c9d1",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-28T08:54:02Z",
      "side": 1,
      "message": "Yunqing, great question it is, thanks a lot! Prior to abs_diff16 creation I looked through the project for sure and haven\u0027t found it. That\u0027s why it is here now.\nBut the question about aom_dsp/simd content is important.  Such intrinsics wrappers functions creation and usage makes sense when  we either combine several intrinsics in one operation as abs_diff does and/or  when we create unified wrapper for a single code based various platforms  (arm, x86) and various simd capabilities (sse2, sse4 etc) compilation. I\u0027ve considered it for my initial wrong commit sse2/sse4 problem fix but found out that AV1 project CURRENT architecture is not suitable for such things. So to move further with anything there I\u0027d like to understand your plans there.",
      "parentUuid": "6563459e_ef163ff9",
      "range": {
        "startLine": 25,
        "startChar": 32,
        "endLine": 25,
        "endChar": 42
      },
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4abe6e01_54aa2e79",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-03-27T19:00:56Z",
      "side": 1,
      "message": "How do you decide when to use AOM_FORCE_INLINE? Do you see better performance by using it? Want to know if it helps since we normally use INLINE and leave this decision to the compiler.",
      "range": {
        "startLine": 138,
        "startChar": 7,
        "endLine": 138,
        "endChar": 23
      },
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "746d4a8f_cf3a6a47",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 138,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-27T21:01:06Z",
      "side": 1,
      "message": "While I haven\u0027t investigated AV1 project, for other projects I used to work with it does have a significant performance impact.  Compilers are afraid of a long code and sometimes doesn\u0027t inline it resulting in visible performance drop. Moreover here (not in this file but the same lbd function) I\u0027ve replaced a macro with a function, so to keep it exactly the same as before it is better use it :)",
      "parentUuid": "4abe6e01_54aa2e79",
      "range": {
        "startLine": 138,
        "startChar": 7,
        "endLine": 138,
        "endChar": 23
      },
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca161398_ac828f90",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 7888
      },
      "writtenOn": "2018-03-27T17:54:14Z",
      "side": 1,
      "message": "why to keep if commented out?",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be369afe_891af5cf",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 215,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-27T21:01:06Z",
      "side": 1,
      "message": "It is a comment that describes what\u0027s going on in the next lines up  to 224. Useful for code understanding and further changes",
      "parentUuid": "ca161398_ac828f90",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e89f718_83a9942e",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 7888
      },
      "writtenOn": "2018-03-27T17:54:14Z",
      "side": 1,
      "message": "should be abs_diff16() used ?",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "566229eb_3094968d",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 218,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-27T21:01:06Z",
      "side": 1,
      "message": "right you are. To be fixed in the next commit...",
      "parentUuid": "2e89f718_83a9942e",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b979335_5be35054",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 223,
      "author": {
        "id": 7888
      },
      "writtenOn": "2018-03-27T17:54:14Z",
      "side": 1,
      "message": "do we need ffff declaration?",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00d033db_09abc774",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 223,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-27T21:01:06Z",
      "side": 1,
      "message": "not sure. but it doesn\u0027t influence neither performance no code style so my priorities of changing it are not high, sorry",
      "parentUuid": "8b979335_5be35054",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "744d635c_b36a97a9",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 665,
      "author": {
        "id": 7888
      },
      "writtenOn": "2018-03-27T17:54:14Z",
      "side": 1,
      "message": "as above, one time usage only?",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "423e5e5f_29bba8a9",
        "filename": "aom_dsp/x86/highbd_loopfilter_sse2.c",
        "patchSetId": 8
      },
      "lineNbr": 665,
      "author": {
        "id": 8911
      },
      "writtenOn": "2018-03-27T21:01:06Z",
      "side": 1,
      "message": "yes, just need to make it consistent with the version above. tbd but with low priority again",
      "parentUuid": "744d635c_b36a97a9",
      "revId": "0e2c6a5bfb12b6d1c2d98249a478dfd512ddc3e2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}