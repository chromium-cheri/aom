{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "68580bf2_6c0d9dd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-28T16:36:02Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9f7b717_bcc36216",
        "filename": "test/function_equivalence_test.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-07-28T04:52:32Z",
      "side": 1,
      "message": "some clean up could be done around TearDown/SetUp too.",
      "revId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e2c72cd_0704f778",
        "filename": "test/function_equivalence_test.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-28T16:36:02Z",
      "side": 1,
      "message": "Did you mean removing the TearDown() method?\n\nIt\u0027s not clear how to clean up SetUp(). Did you mean move its code to the constructor?",
      "parentUuid": "a9f7b717_bcc36216",
      "revId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5eb13fd_dc096480",
        "filename": "test/function_equivalence_test.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-07-28T19:45:22Z",
      "side": 1,
      "message": "\u003e Did you mean removing the TearDown() method?\n\u003e \n\nYes.\n\n\u003e It\u0027s not clear how to clean up SetUp(). Did you mean move its code to the constructor?\n\nYes. SetUp() should only really be necessary if you need to check an error return or skip a test to avoid a partially constructed object.",
      "parentUuid": "3e2c72cd_0704f778",
      "revId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "e9f2af0db8254236acf5e6ba9b8fbef798c23310",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}