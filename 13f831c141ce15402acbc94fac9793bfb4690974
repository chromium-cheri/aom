{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6b29b1c_68200ce4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31012
      },
      "writtenOn": "2022-11-08T14:32:13Z",
      "side": 1,
      "message": "Hi Yunqing,\nThis patch improves the AVX2 optimization of av1_block_error_lp_avx2() with the following changes.\nPerforming block error computation for two rows at a time\nLoop unrolling for most occurring block size\nPlease check the details of the changes.\nThis function computes block error for each row and stores the result in a temporary variable before accumulating to the final result (sse). Considering the maximum values possible for coeff, dqcoeff with appropriate change in precision, block error is modified to compute for two rows at a time.\nThe CL also unrolls the loop for block size above 32 which improves the performance of AVX2 optimization as it is a most occurring case.\n\nPlease check the encoder speed-up measured (for AVX2) using instruction count as below.\n```\n               Instruction Count    \ncpu Resolution    Reduction(%)\n 7   rtc_1080p      1.010\n 7         rtc      0.712\n 7    rtc_derf      0.557\n 7  rtc_screen      0.875\n\n 8   rtc_1080p      0.745\n 8         rtc      0.560\n 8    rtc_derf      0.426\n 8  rtc_screen      0.857\n\n 9   rtc_1080p      0.755\n 9         rtc      0.580\n 9    rtc_derf      0.414\n 9  rtc_screen      0.529\n\n10   rtc_1080p      0.739\n10         rtc      0.527\n10    rtc_derf      0.395\n10  rtc_screen      0.529\n```\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc â€¦\n\nPlease review the CL.\n\nThanks \u0026 Regards,\nDiksha",
      "revId": "13f831c141ce15402acbc94fac9793bfb4690974",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}