{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d94c5177_f1ffdd1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-04T21:59:49Z",
      "side": 1,
      "message": "I think this is a correct change, but this description is confusing, because it is possible to express sub-second frame rates today by using a `pts` increment or a frame duration greater than 1.\n\nFor example, with the default `g_timebase` value of `{1, 30}`, we can express a frame rate of 0.1 frames/second (the minimum frame rate allowed by libaom, see `av1_new_framerate()`) by using a frame duration of 300. This is used in the new test added in https://aomedia-review.googlesource.com/c/aom/+/190462.",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e46a565a_e3cda2ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 7025
      },
      "writtenOn": "2024-06-04T22:29:55Z",
      "side": 1,
      "message": "gotcha.\n\ni simply copied the description from the VP9 change. i have updated it now.",
      "parentUuid": "d94c5177_f1ffdd1b",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bb27f25_9e276d77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7025
      },
      "writtenOn": "2024-06-04T21:26:24Z",
      "side": 1,
      "message": "Frank, adding you as you were the reviewer of the equivalent libvpx change.",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb497666_14f26c93",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 674,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-04T21:59:49Z",
      "side": 1,
      "message": "I wonder if the upper bound should be `10 * cfg-\u003eg_timebase.den`, given that the minimum frame rate allowed by `av1_new_framerate()` is 0.1 frames/second.",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62fc1e53_a9b59caf",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 674,
      "author": {
        "id": 7025
      },
      "writtenOn": "2024-06-04T22:29:55Z",
      "side": 1,
      "message": "While it maybe theoretically correct to set it to 10*den, i don\u0027t think such large values will be used in practice. So it does not really matter.\n\nThe equivalent code in libvpx (`vp9_new_framerate`) also allows 0.1 fps. The code uses the same value for clamping num and den.\n\nPlease let me know if you think i should update it anyways.",
      "parentUuid": "cb497666_14f26c93",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccffe62c_560c0cac",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 674,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-04T23:14:03Z",
      "side": 1,
      "message": "You are right. My original suggestion was wrong. If `g_timebase.den` is 1000000000, then `10 * g_timebase.den` will overflow the `int` type.\n\nWe will need to do that check as follows:\n\n```\n  // Minimum frame rate is 0.1. See av1_new_framerate().\n  if (cfg-\u003eg_timebase.num / 10 \u003e cfg-\u003eg_timebase.den) {\n    ERROR(\"g_timebase \u003e 10\");\n  }\n```\n\nOptional: The check in `av1_new_framerate()` may be sufficient. I took a quick look at the code that uses `g_timebase` in libaom. I think we already check for integer overflows when we use it in arithmetic operations. So this check should be unnecessary.",
      "parentUuid": "62fc1e53_a9b59caf",
      "revId": "a622ead6af76b34cac28a1cda90a47a019b566df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}