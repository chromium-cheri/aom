{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "44cad3d3_e80f8625",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:04:32Z",
      "side": 1,
      "message": "We should check memory allocation failures in this CL.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02420df9_4b5e1936",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44cad3d3_e80f8625",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a0660f5_db9392ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T17:24:12Z",
      "side": 1,
      "message": "This is a follow-up CL to address some of the unresolved comments of https://aomedia-review.googlesource.com/c/aom/+/170101.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d2c8e10_c4246ff8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:04:32Z",
      "side": 1,
      "message": "Hi Lin,\n\nPlease consider my review as supplemental because I only took a quick look at parts of this CL.\n\nI guess this CL addresses the review comments in https://aomedia-review.googlesource.com/c/aom/+/170101?",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "692e4a39_1946c7df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "Hi, Wan-Teh,\nThanks for your comments. Yes, it is a follow-up CL to address the comments in https://aomedia-review.googlesource.com/c/aom/+/170101.",
      "parentUuid": "9d2c8e10_c4246ff8",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55eb923a_8eee3c16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "I agree with Wan-Teh\u0027s comments. When dealing with multiple follow ups like this sometimes it can help to break things up logically to make the changes easier to review, e.g., name changes, code moves, etc.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "147a222d_0bbf9bee",
        "filename": "aom/aomcx.h",
        "patchSetId": 4
      },
      "lineNbr": 1601,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:04:32Z",
      "side": 1,
      "message": "It would be good to mention this change in the commit message.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61859953_b007a3d2",
        "filename": "aom/aomcx.h",
        "patchSetId": 4
      },
      "lineNbr": 1601,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "This tune mode has not been fully implemented yet. I\u0027ll add this change in the commit message when I check in the algorithm improvement.",
      "parentUuid": "147a222d_0bbf9bee",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21fa04f5_e1976feb",
        "filename": "aom/aomcx.h",
        "patchSetId": 4
      },
      "lineNbr": 1601,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T20:54:11Z",
      "side": 1,
      "message": "Sorry, my previous comment was not clear. What I requested is to mention in the commit message that this CL restores the original value of AOM_TUNE_BUTTERAUGLI for backward compatibility.",
      "parentUuid": "61859953_b007a3d2",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8be6358_2eb86e7b",
        "filename": "aom/aomcx.h",
        "patchSetId": 4
      },
      "lineNbr": 1601,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:57:32Z",
      "side": 1,
      "message": "Oh, I see. Will do. Thanks Wan-Teh.",
      "parentUuid": "21fa04f5_e1976feb",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8ae3b3c_c3982882",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 1393,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:04:32Z",
      "side": 1,
      "message": "Nit: `cm-\u003eheight` and `cm-\u003ewidth` don\u0027t need to be parenthesized.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "565e622a_daa5b126",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 1393,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8ae3b3c_c3982882",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "128d3318_6a76d628",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 1681,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:19:34Z",
      "side": 1,
      "message": "Optional: This is a matter of preference, so you don\u0027t need to accept my suggestion.\n\nI think the original code is fine. On the allocation side (at line 1390 above), it is important to allocate `cpi-\u003esaliency_map` only when it\u0027s needed so that we don\u0027t waste memory.\n\nOn the deallocation side here, I think it is fine to just free `cpi-\u003esaliency_map` unconditionally. This relies on the fact that passing a null pointer to `aom_free()` is a no-op.",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd2a472c_0bed46c5",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 1681,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "128d3318_6a76d628",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "809750ba_cde0622a",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 3728,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "We can just put this in the following #if as:\n```\n    else if (oxcf-\u003etune_cfg.tuning \u003d\u003d AOM_TUNE_VMAF_WITHOUT_PREPROCESSING ||\n        oxcf-\u003etune_cfg.tuning \u003d\u003d AOM_TUNE_VMAF_MAX_GAIN ||\n        oxcf-\u003etune_cfg.tuning \u003d\u003d AOM_TUNE_VMAF_NEG_MAX_GAIN) {\n      av1_set_mb_vmaf_rdmult_scaling(cpi);\n    }\n```",
      "range": {
        "startLine": 3728,
        "startChar": 4,
        "endLine": 3728,
        "endChar": 10
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c134b0e_8311576b",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 3736,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "And remove this too",
      "range": {
        "startLine": 3736,
        "startChar": 2,
        "endLine": 3736,
        "endChar": 3
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cad7cca_697aed3d",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Please add a comment on the angle related to the indices 0-3 here",
      "range": {
        "startLine": 25,
        "startChar": 33,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ee2d537_880d2319",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "function",
      "range": {
        "startLine": 118,
        "startChar": 8,
        "endLine": 118,
        "endChar": 15
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a2eab52_81217a47",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 180,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "Gaussian",
      "range": {
        "startLine": 180,
        "startChar": 59,
        "endLine": 180,
        "endChar": 67
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94e4e97b_6db05c92",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 204,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Is this conversion needed?",
      "range": {
        "startLine": 204,
        "startChar": 51,
        "endLine": 204,
        "endChar": 59
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49734454_1c27d598",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 221,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Should check for mem errors. Also for other allocations too",
      "range": {
        "startLine": 221,
        "startChar": 18,
        "endLine": 221,
        "endChar": 28
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d4b41d2_89881bbd",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 227,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "This original array may not need to be allocated. You can have \n```\ndouble *original \u003d level \u003d\u003d in_level ? input : output\n```\nand it feels to me everything should work?",
      "range": {
        "startLine": 220,
        "startChar": 4,
        "endLine": 227,
        "endChar": 5
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8953864_e783c64a",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 229,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Will it be possible when level \u003c\u003d 0? In the for loop the condition is level \u003e out_level, is it possible for out_level to be \u003c 0? It might be better to change this into an assertion if level \u003c\u003d 0 is not expected.",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 20
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea414c6e_e9539ece",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 235,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Optional: it should be ok to remove this explicit conversion.",
      "range": {
        "startLine": 235,
        "startChar": 10,
        "endLine": 235,
        "endChar": 20
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f067cf0f_b86b8ee6",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 256,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "calculates",
      "range": {
        "startLine": 256,
        "startChar": 17,
        "endLine": 256,
        "endChar": 29
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c39bf2_74192183",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 257,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "coarser?",
      "range": {
        "startLine": 257,
        "startChar": 3,
        "endLine": 257,
        "endChar": 9
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efa9f0fd_b09ae2e9",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 257,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Do you mean the feature map is then the output? Maybe change to \"yielding the feature map\"?",
      "range": {
        "startLine": 257,
        "startChar": 18,
        "endLine": 257,
        "endChar": 40
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec8d8b7_2dfb983b",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 260,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Consider ordering this output param to the last of the list. From go/cstyle#Inputs_and_Outputs, \"When ordering function parameters, put all input-only parameters before any output parameters. In particular, do not add new parameters to the end of the function just because they are new; place new input-only parameters before the output parameters.\"",
      "range": {
        "startLine": 260,
        "startChar": 33,
        "endLine": 260,
        "endChar": 64
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fe1c545_30165f54",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 267,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Optional: maybe it is possible to save this allocation too? We can just use output[j] or output[j+1], and do something like \n```\n    output[j]-\u003ebuf[r * cur_width + c] \u003d\n            fabs((double)(input[k][r * cur_width + c] -\n                          output[j]-\u003ebuf[r * cur_width + c]));\n```",
      "range": {
        "startLine": 267,
        "startChar": 12,
        "endLine": 267,
        "endChar": 28
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff40018f_4b3a14b6",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 304,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "coarser",
      "range": {
        "startLine": 304,
        "startChar": 39,
        "endLine": 304,
        "endChar": 45
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2277f82_8f0599b9",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "This is very similar to center_surround_diff. If we pass input_1 and input_2 as the same pointer, is it true that this is exactly center_surround_diff? Maybe consider combining the two functions, or find better ways to reduce redundancy here.",
      "range": {
        "startLine": 305,
        "startChar": 12,
        "endLine": 305,
        "endChar": 36
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf028a59_969b9ec9",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 307,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Please reorder to the last in the list",
      "range": {
        "startLine": 307,
        "startChar": 37,
        "endLine": 307,
        "endChar": 69
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d2cc5a1_47228fa4",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 378,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "We can extract this part so it can be used for gaussian_pyramid_rgb too",
      "range": {
        "startLine": 366,
        "startChar": 4,
        "endLine": 378,
        "endChar": 31
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afdd4d2a_dbbdf92b",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 449,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "sizeof(*r)",
      "range": {
        "startLine": 449,
        "startChar": 51,
        "endLine": 449,
        "endChar": 57
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29edfcf1_eb5be16a",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 456,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-02-08T18:04:32Z",
      "side": 1,
      "message": "Nit: It\u0027d be clearer to initialize these variables in their declarations:\n\n```\n  double *r \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *g \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *b \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *y \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *rg_mat \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *by_mat \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *gr_mat \u003d (double *)aom_malloc(height * width * sizeof(double));\n  double *yb_mat \u003d (double *)aom_malloc(height * width * sizeof(double));\n```",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80bcebb1_0e940786",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 456,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T20:42:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29edfcf1_eb5be16a",
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f39cd45_fc8051ae",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 460,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "the arrays r, g, b, y are not really needed. We can just have local variables double r, g, b, y here inside the loop.",
      "range": {
        "startLine": 460,
        "startChar": 6,
        "endLine": 460,
        "endChar": 22
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f849fe89_2f5910d5",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 546,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "These seem to use the same logic as in get_feature_map_rgb. Maybe re-use a function?",
      "range": {
        "startLine": 535,
        "startChar": 5,
        "endLine": 546,
        "endChar": 31
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a665dd3c_6d3a22ec",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 550,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Consider making this into an array of double*, so it is easier to iterate over it in the following lines.",
      "range": {
        "startLine": 549,
        "startChar": 2,
        "endLine": 550,
        "endChar": 58
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96b23fc2_bb7f76ec",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 579,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Maybe change this into an array too",
      "range": {
        "startLine": 579,
        "startChar": 2,
        "endLine": 579,
        "endChar": 66
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b7da97_79f56525",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 613,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Maybe use something like max_value and min_value",
      "range": {
        "startLine": 613,
        "startChar": 75,
        "endLine": 613,
        "endChar": 79
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d98c8620_570361f5",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 634,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "*local_map.buf",
      "range": {
        "startLine": 634,
        "startChar": 68,
        "endLine": 634,
        "endChar": 74
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5351a063_0636ade6",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 641,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Optional: This copy can be optimized out, if we pass the stride, and starting point of the local window to the function find_min_max.",
      "range": {
        "startLine": 640,
        "startChar": 10,
        "endLine": 641,
        "endChar": 57
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8328fdf5_d69eebf7",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 664,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "*result",
      "range": {
        "startLine": 664,
        "startChar": 48,
        "endLine": 664,
        "endChar": 68
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "814b621f_a79f2c85",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 687,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "activation",
      "range": {
        "startLine": 687,
        "startChar": 43,
        "endLine": 687,
        "endChar": 55
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bce7836_bfd6f6aa",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 745,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "coarser",
      "range": {
        "startLine": 745,
        "startChar": 48,
        "endLine": 745,
        "endChar": 54
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fe8d01e_434635ab",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 4
      },
      "lineNbr": 929,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "Conspicuity?",
      "range": {
        "startLine": 929,
        "startChar": 5,
        "endLine": 929,
        "endChar": 16
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a1cbe9_7d3a3d8f",
        "filename": "av1/encoder/saliency_map.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-02-08T21:37:44Z",
      "side": 1,
      "message": "AOM_AV1_ENCODER_SALIENCY_MAP_H_",
      "range": {
        "startLine": 23,
        "startChar": 11,
        "endLine": 23,
        "endChar": 39
      },
      "revId": "a73f4873e43a27049c4954750ab82f2929c25b9c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}