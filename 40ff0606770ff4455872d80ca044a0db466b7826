{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "98130870_99b6a3bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-01-19T19:02:44Z",
      "side": 1,
      "message": "Hi Wan-Teh, Jingning, Paul\n\nWe have submitted the latest patch-set by addressing the comments given by Wan-Teh. Please review the patch.\n\nRegards,\nMudassir\n",
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aba4bbf_0775d3d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-25T03:27:03Z",
      "side": 1,
      "message": "Hi Mudassir,\n\nI am sorry for the late review. I will take a closer look tomorrow.",
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d9ca5ba_c2f0d163",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 4
      },
      "lineNbr": 337,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-25T03:27:03Z",
      "side": 1,
      "message": "Move lines 334-337 into the if statement below.",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 337,
        "endChar": 75
      },
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc9dea66_fbe5c74a",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 4
      },
      "lineNbr": 337,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-01-25T17:42:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d9ca5ba_c2f0d163",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 337,
        "endChar": 75
      },
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b9c4b62_7498ce71",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-25T03:27:03Z",
      "side": 1,
      "message": "I am wondering why the older versions of this CL also worked without this line.\n\nNit: It is a little inconsistent that this functions references cpi-\u003etd.mb.src_var_info_of_4x4_sub_blocks directly but references cpi-\u003etd.src_var_info_of_4x4_sub_blocks through a function parameter (source_variance_info).",
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9b4544e_42ca95e8",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-01-25T17:42:48Z",
      "side": 1,
      "message": "In the earlier patch-set, the pointer src_var_info_of_4x4_sub_blocks was being passed to allocate_src_var_of_4x4_sub_block_buf() function from cpi-\u003etd.mb and thread_data-\u003etd for master and worker threads respectively. For the master thread, allocation and freeing of src_var_info_of_4x4_sub_blocks used to happen at cpi-\u003etd.mb level whereas for worker threads, allocation and freeing used to happen at thread_data-\u003etd level. These pointers were copied to thread_data-\u003etd.mb for slave the threads. Hence, it didnâ€™t cause any issues in the earlier patch-set.\n\nHowever, cpi-\u003etd.src_var_info_of_4x4_sub_blocks was not being used in the earlier patch-set.\nWe changed this in the later patch-set because we felt that it is a better practice to allocate/free thread specific memory at thread (cpi-\u003etd, thread_data-\u003etd) level rather than at block (td.mb) level. This is consistent with the allocation/freeing of pixel_gradient_info.\n\nIt is possible to clean up both allocate_src_var_of_4x4_sub_block_buf() and  allocate_gradient_info_for_hog() functions by passing only cpi and deriving the respective buffer pointers inside these functions for the memory allocations. Please let us know if we should do this clean-up in a separate patch.",
      "parentUuid": "2b9c4b62_7498ce71",
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea4e8a5b_2585e43f",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-28T01:59:37Z",
      "side": 1,
      "message": "Yes, I think it is good to do this cleanup in a separate patch.",
      "parentUuid": "f9b4544e_42ca95e8",
      "revId": "40ff0606770ff4455872d80ca044a0db466b7826",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}