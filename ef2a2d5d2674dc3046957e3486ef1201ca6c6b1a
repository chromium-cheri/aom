{
  "comments": [
    {
      "key": {
        "uuid": "5aec3b3c_1f64a339",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 2
      },
      "lineNbr": 777,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-12-15T00:44:08Z",
      "side": 1,
      "message": "This code uses ANS_MAX_SYMBOLS as the window size.  Right now this is defined as (1\u003c\u003c24) which is 16,777,216.  The value returned by get_token_alloc() when called on a 4k video is 28,304,640.\n\nThis should have a negligible impact on metrics.  Did you mean to start with such a large window size?",
      "revId": "ef2a2d5d2674dc3046957e3486ef1201ca6c6b1a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a7fdbe6_bff5fdd0",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 2
      },
      "lineNbr": 777,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-12-15T00:56:46Z",
      "side": 1,
      "message": "Prior to this CL, that size is the initial allocation of the backing buffer that would grow exponentially (See aom_buf_ans_grow). Now we lock it in at the largest size it will ever use at the beginning. (I\u0027ve seen on the order of 68,000,000 coded symbols for an HD sized intra tile). At lower resolutions most of these pages will never get touched. \n\nI have a follow up to add a control to make this window smaller to simulate hardware (otherwise it would be better to just keep this define internal), but the patch was starting to get unwieldily so I split it here.",
      "parentUuid": "5aec3b3c_1f64a339",
      "revId": "ef2a2d5d2674dc3046957e3486ef1201ca6c6b1a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}