{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f955f25f_31e05d2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 31322
      },
      "writtenOn": "2024-01-04T10:25:58Z",
      "side": 1,
      "message": "This change is ready for review.",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "342ffcfc_819fc7fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-04T18:44:59Z",
      "side": 1,
      "message": "LGTM. Thanks. Just a function name nit.",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68832332_a6cee314",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 3
      },
      "lineNbr": 1237,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-04T18:44:59Z",
      "side": 1,
      "message": "Nit: Add \"filter\" or \"and_filter\" to the function name?\n\nThis function name should make it clear that it is the complement of `build_directional_and_filter_intra_predictors`.",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b2426aa_ba7fb42a",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 3
      },
      "lineNbr": 1237,
      "author": {
        "id": 31322
      },
      "writtenOn": "2024-01-05T11:30:37Z",
      "side": 1,
      "message": "In the parent version, build_intra_predictors() generates the pred data for the following intra modes:\n1. Directional \n2. Non-Directional\n3. Filter intra\n\nIn this CL, `build_directional_and_filter_intra_predictors()` specifically addresses the pred data generation for categories (1) and (3). Meanwhile, the calculation of pred data for category (2) is handled by `build_non_directional_intra_predictors()`. We feel that incorporating \"filter\" into the latter\u0027s name wouldn\u0027t provide meaningful clarity and decided to keep the function name as it is now. Hope it is fine.",
      "parentUuid": "68832332_a6cee314",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "222d9de7_0a1ec2e6",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 3
      },
      "lineNbr": 1237,
      "author": {
        "id": 31322
      },
      "writtenOn": "2024-01-08T12:19:22Z",
      "side": 1,
      "message": "Please let us know your opinion on our understanding.",
      "parentUuid": "0b2426aa_ba7fb42a",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7de0857_8ff1dc78",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 3
      },
      "lineNbr": 1237,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-08T20:10:20Z",
      "side": 1,
      "message": "Thank you for the reply. I am not familiar with the intra modes, so my code review is mainly based on general code analysis. As a result, I assumed that category 3 (Filter intra) had non-empty intersections with category 1 (Directional) and category 2 (Non-Directional). Under that assumption, some non-directional modes are also filter intra, and they are handled by `build_directional_and_filter_intra_predictors()`. So `build_non_directional_intra_predictors()` handles only the non-directional modes that are not also filter intra. This is why I suggest a different name for `build_non_directional_intra_predictors()`.\n\nAlthough you didn\u0027t say it explicitly, your comment implies that the three catogories are mutually disjoint. (Please confirm this!) So I agree the function names you chose are good.",
      "parentUuid": "222d9de7_0a1ec2e6",
      "revId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "176143360e2943e15965cbbc43bd785663a2abcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}