{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "30600ed1_c6044238",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-11T15:07:38Z",
      "side": 1,
      "message": "Hi Wan-Teh,\n\nIn this patch, the scaled source buffers (scaled_source and scaled_last_source) are allocated on-the-fly in order to reduce the heap memory usage caused by these buffers when they are not required. The scaled source buffers will now be allocated for the required target dimensions on a need basis.\n\nWe have modified the function av1_scale_if_required to take care of the allocation/reallocation of scaled source buffers when scaling is required (i.e. when the flag ‘scaling_required’ is true). The function is renamed as av1_realloc_and_scale_if_required. Also in init_motion_estimation(), the y_stride value which was taken from scaled_source is now calculated by replicating the stride computation that happens in calc_stride_and_planesize().\n\nWe had also thought of keeping a condition in alloc_util_frame_buffers() where the allocation is happening currently but we didn’t pursue that approach as it required a different handling for scaled_source and scaled_last_source based on their respective unscaled dimensions. We felt that the current approach could handle the allocations for both approaches in a cleaner way. The current approach is ensured to take care of allocating/reallocating the buffers in all conditions.\n\nThe speedup mentioned in the commit message is observed because the memset operation for scaled_source buffer is avoided for AVIF image encode.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027, \u0027RT\u0027 and \u0027ALLINTRA\u0027 encoding modes for a few contents with different encoding configurations. It was also verified that the output of AVIF encode is bit-exact w.r.t. parent version for a typical image dataset.\n\nWe validated the heap memory reduction for speed\u003d6 as well. \nFor AVIF image encode with speed\u003d6 and threads\u003d4,\n\n                HEAP Memory\nResolution      reduction(%)\t  \n360p-720p\t   2.80     \n\nThis patch is also applicable for \u0027GOOD\u0027 and \u0027RT\u0027 encoding modes when scaling is not enabled.\n\nFor libaom \u0027RT\u0027 usage with cpu-used \u003d 5,\n\n                        HEAP Memory reduction(%)\n                        Single      Multi\nResolution    Tile      thread      thread\n640x360       2x1        7.10        6.41 (2 threads)\n832x480       2x1        6.91        6.36 (2 threads)\n1280x720      2x2        6.09        5.47 (4 threads)\n1920x1080     4x2        5.95        5.19 (8 threads)\n\nFor libaom \u0027GOOD\u0027 usage with cpu-used \u003d 6,\n\n                        HEAP Memory reduction(%)\n                        Single      Multi\nResolution    Tile      thread      thread\n640x360       2x1        2.29        2.18 (2 threads)\n832x480       2x1        2.15        2.08 (2 threads)\n1280x720      2x2        1.97        1.91 (4 threads)\n1920x1080     4x2        1.87        1.80 (8 threads)\n\nHEAP memory reduction was measured using the command below. \n$valgrind --tool\u003dmassif ./aomenc …\n\nThe memory reductions seen in AVIF/allintra encode are only due to scaled_source buffer not being allocated as scaled_last_source buffer allocation was already avoided for allintra encoding. Whereas the heap memory reductions seen in ‘GOOD’ and ‘RT’ usage are resulting from not allocating both scaled_source and scaled_last_source buffers.\n\nPlease review this patch.\n\nRegards,\nJayasanker.\n",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8d497d8_5cacfbfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-12T21:31:17Z",
      "side": 1,
      "message": "Urvang: PTAL. Thanks!",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284374b0_96f08905",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Hi Jayasanker,\n\nThank you very much for the CL. I suggest a few small changes. I also have some questions. Please note the question marked with \"IMPORTANT\".",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "680cd281_f3e6b259",
        "filename": "aom_scale/yv12config.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Nit: luma \u003d\u003e y\n\nSee the next comment.",
      "range": {
        "startLine": 173,
        "startChar": 15,
        "endLine": 173,
        "endChar": 19
      },
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bda19c5_524307f8",
        "filename": "aom_scale/yv12config.h",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "680cd281_f3e6b259",
      "range": {
        "startLine": 173,
        "startChar": 15,
        "endLine": 173,
        "endChar": 19
      },
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9d140cf_a9164c5c",
        "filename": "aom_scale/yv12config.h",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Nit: I suggest renaming this function \u0027aom_calc_y_stride\u0027.",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8267ff91_e83c4513",
        "filename": "aom_scale/yv12config.h",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9d140cf_a9164c5c",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed9ea1d_5ff44142",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Nit: I suggest renaming these two variable \u0027target_width\u0027 and \u0027target_height\u0027.",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b627993_645da8af",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1350,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ed9ea1d_5ff44142",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6677f2d_03453d98",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Could you comment on the number of aom_realloc_frame_buffer() calls on cpi-\u003escaled_source and cpi-\u003escaled_last_source before and after this CL? Does the number increase, decrease, or stay roughly the same?",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25be4090_53e14123",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Let us consider two scenarios:\n\n1) When scaling_required \u003d false:\n\nIn the reference version for video encode, there used to be 1(init) + n(per frame encode) number of calls to aom_realloc_frame_buffer() for each of the buffers scaled_source and scaled_last_source. The memory allocation used to happen only once per buffer because the target dimensions are constant throughout the encoding. With the current CL, all these calls are avoided because aom_realloc_frame_buffer() will be called for scaled_source and scaled_last_source buffers only when scaling is required.\n\n2) When scaling_required \u003d true:\n\nIn the reference version for video encode, there used to be at least 1(init) + n(per frame encode) number of calls to aom_realloc_frame_buffer() for each of the buffers scaled_source and scaled_last_source. The memory allocation used to happen whenever there is a change in the target dimensions. With this CL, the number of calls to aom_realloc_frame_buffer() for scaled_source and scaled_last_source buffers will reduce slightly as the calls during av1_set_frame_size() and av1_check_initial_width() are avoided and av1_realloc_and_scale_if_required() is called on the fly instead. But, the number of frame buffer allocations would remain constant between the reference version and the current CL.\n\nPlease let us know if there are any concerns.",
      "parentUuid": "c6677f2d_03453d98",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cd65e8e_762c1391",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1361,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-15T00:31:08Z",
      "side": 1,
      "message": "Thank you very much for the detailed reply. aom_realloc_frame_buffer() needs to do a lot of work to calculate the required buffer size, etc., so it has some overhead even when it does not do memory allocation. It is good that this CL will reduce the number of calls to aom_realloc_frame_buffer().",
      "parentUuid": "25be4090_53e14123",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5cdfb3b_ddec551d",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1362,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "IMPORTANT: The original code always passes cm-\u003ewidth and cm-\u003eheight to the aom_realloc_frame_buffer() calls. See line 377 and line 392 in av1/encoder/encoder_alloc.h of the orignal code.\n\nWhy does the new code pass scaled_width and scaled_height (the target dimensions)? Is this a bug fix?",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9f793b6_8ebe7a8a",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1362,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "The values of scaled_width and scaled_height (now renamed as target_width and target_height) will be equal to cm-\u003ewidth and cm-\u003eheight except when scaling is performed for PSNR calculation. When scaling is done for PSNR calculation, the frame buffer allocation is called with the target dimensions  as in realloc_and_scale_source().",
      "parentUuid": "b5cdfb3b_ddec551d",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "032d1fea_bdecc2ac",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1367,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Nit: the \u0027scaled\u0027 parameter may refer to either \"scaled source buffer\" or \"scaled last source buffer\", so this error message is not always accurate. Perhaps we can just say \"scaled buffer\"? Or we can pass \"scaled source buffer\" or \"scaled last source buffer\" as an input parameter for use in this error message.",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2826b683_1ac1155c",
        "filename": "av1/common/resize.c",
        "patchSetId": 1
      },
      "lineNbr": 1367,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Ack. We have changed the error message to \"Failed to allocate scaled buffer\".",
      "parentUuid": "032d1fea_bdecc2ac",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f33e59a8_257176e4",
        "filename": "av1/common/resize.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Optional: I suggest renaming this parameter \u0027alloc_y_buffer_8bit\u0027.",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d839bd6_3d9cd312",
        "filename": "av1/common/resize.h",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f33e59a8_257176e4",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61847415_817c7ca5",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 1868,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-14T01:22:45Z",
      "side": 1,
      "message": "Nit: I suggest using the same expression as in aom_realloc_frame_buffer():\n\n    const int aligned_width \u003d (cm-\u003ewidth + 7) \u0026 ~7;",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73b93ad4_f2ae5e31",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 1868,
      "author": {
        "id": 14993
      },
      "writtenOn": "2021-10-14T16:19:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61847415_817c7ca5",
      "revId": "7a42144f8009acc695700f18598c43405177efb2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}