{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a24bcb7_ac22ccbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-11T14:48:38Z",
      "side": 1,
      "message": "Hi Venkata, could you take a look?",
      "revId": "2e7efc18a739727c8e354eb0fc20b83adc02ff66",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ecf0383_bdf7dbde",
        "filename": "aom_dsp/x86/avg_intrin_avx2.c",
        "patchSetId": 3
      },
      "lineNbr": 517,
      "author": {
        "id": 9611
      },
      "writtenOn": "2022-10-12T06:56:42Z",
      "side": 1,
      "message": "Hi Kyle,\n\nHere, the increment needs to be:  \nconst uint8_t *s_y1 \u003d s_y0 + (8 * p);\n\nIn the existing unit-test (i.e., AvgTest8bpp_avg_8x8_quad), functionality is verified by setting x16_idx and y16_idx to 0 always. Hence, this issue is not caught with unit-test.\n\nNit: Feel free to modify unit-test such that it tests for different x16_idx and y16_idx values.\n\nThanks.",
      "range": {
        "startLine": 517,
        "startChar": 24,
        "endLine": 517,
        "endChar": 34
      },
      "revId": "2e7efc18a739727c8e354eb0fc20b83adc02ff66",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2e50a9b_a7161067",
        "filename": "aom_dsp/x86/avg_intrin_avx2.c",
        "patchSetId": 3
      },
      "lineNbr": 517,
      "author": {
        "id": 30842
      },
      "writtenOn": "2022-10-13T18:39:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ecf0383_bdf7dbde",
      "range": {
        "startLine": 517,
        "startChar": 24,
        "endLine": 517,
        "endChar": 34
      },
      "revId": "2e7efc18a739727c8e354eb0fc20b83adc02ff66",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}