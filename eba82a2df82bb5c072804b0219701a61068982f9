{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d4c317b_a91fbbc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2023-08-03T15:52:38Z",
      "side": 1,
      "message": "In the temporal filter, the block size at which prediction needs to happen is decided by doing motion estimation at block sizes 32x32, and for four sub-blocks of size 16x16. This CL introduces a speed feature ‘allow_sub_blk_me_in_tf’ to avoid 16x16 sub-block motion search by using source variance calculated at 4x4 sub-block level. If the variation between the minimum and maximum variance is large then only allow motion search at sub-block level and vice versa. Currently, this sf is enabled only in speed 6 for MIDRES2 and HDRES2 resolutions.\n\nThe below shows Borg test results for speed 6.\n```\n                 Instruction Count         BD-Rate Loss(%)\ncpu   Test_Set     Reduction(%)      avg.psnr   ovr.psnr    ssim\n 6    LOWRES2        0.000           0.0000     0.0000      0.0000\n 6    MIDRES2        0.766          -0.0159     0.0449      0.0311\n 6    HDRES2         1.384          -0.0566    -0.0766     -0.0486\n 6    Average        0.717          -0.0242    -0.0106     -0.0056\n```\nAs trade-off is poor for LOWRES2 dataset, the sf is disabled for the same. Extending this sf to speed 5 is not within the trade-off.",
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cbb97c5_71c8c8a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-03T17:00:09Z",
      "side": 1,
      "message": "Yes, the block size decision correlates with the resolution. For lowres, 16x16 might be used a lot. This is fine since we are focusing on high res optimization. Nice speedup!",
      "parentUuid": "3d4c317b_a91fbbc1",
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7131d2a_300589a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-03T17:18:58Z",
      "side": 1,
      "message": "Also, the condition used here only consider the source variance. What is the worst quality drop here (at what bitrate)?",
      "parentUuid": "9cbb97c5_71c8c8a6",
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "249f8b58_7aa222c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2023-08-04T16:45:17Z",
      "side": 1,
      "message": "The following gives the summary of maximum and minimum BD-rate drop contents:\n```\nWorst contents:\nstation2_1080p25   : 0.9123% \nspeed_bag_480p     : 0.7683%\nnetflix_tunnelflag : 0.6975%\n\nBest contents:\nsintel_shot_854x480_24fps: -3.2430%\nrush_hour_1080p25        : -0.9153%\nfactory_1080p30          : -0.7049%\n```\nFrom the plots it is seen that high bitrate points are less affected as compared to low and mid bitrate points.\nWhen tried using residual variance instead of source variance, the maximum drops have increased by \u003e 1% and the scope is reduced to 0.5% due to the requirement of predictor. Hence, we preferred source variance here.",
      "parentUuid": "f7131d2a_300589a4",
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28d6bc85_13305e0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-04T17:06:19Z",
      "side": 1,
      "message": "Ok. Interesting result. Thanks.",
      "parentUuid": "249f8b58_7aa222c2",
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87fef758_88aaa570",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-03T17:00:09Z",
      "side": 1,
      "message": "Not sure how expensive this calculation is? Is this necessary?",
      "range": {
        "startLine": 83,
        "startChar": 21,
        "endLine": 83,
        "endChar": 26
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2fadda5_25624b6e",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 9611
      },
      "writtenOn": "2023-08-04T16:45:17Z",
      "side": 1,
      "message": "The time spent on log1p and division operation is negligible (~0.01%). Similar kind of implementation is done in \u0027av1_rd_pick_partition()\u0027, for deciding NONE vs SPLIT partition. We adopted the same idea and used the implementation for consistency.",
      "parentUuid": "87fef758_88aaa570",
      "range": {
        "startLine": 83,
        "startChar": 21,
        "endLine": 83,
        "endChar": 26
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf5f499e_897a15ab",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-04T17:06:19Z",
      "side": 1,
      "message": "Ok.",
      "parentUuid": "b2fadda5_25624b6e",
      "range": {
        "startLine": 83,
        "startChar": 21,
        "endLine": 83,
        "endChar": 26
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9841135e_5ff9e2fe",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 246,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-03T17:00:09Z",
      "side": 1,
      "message": "Include this part under \"if (allow_me_for_sub_blks)\" as well?",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 246,
        "endChar": 25
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc337993_0fb85fd2",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 246,
      "author": {
        "id": 9611
      },
      "writtenOn": "2023-08-04T16:45:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9841135e_5ff9e2fe",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 246,
        "endChar": 25
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6279ba2_5b036af8",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 913,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-03T17:00:09Z",
      "side": 1,
      "message": "Should this be adjusted based on bit depth? If so, maybe at least add a comment here.",
      "range": {
        "startLine": 913,
        "startChar": 49,
        "endLine": 913,
        "endChar": 52
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eaadb35_5c194fc2",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 5
      },
      "lineNbr": 913,
      "author": {
        "id": 9611
      },
      "writtenOn": "2023-08-04T16:45:17Z",
      "side": 1,
      "message": "Yes Yunqing, we do not see any adjustment to the variation based on bit depth. Hence, the threshold needs to be adjusted based on the bit depth. As suggested, we added a comment for the same.",
      "parentUuid": "a6279ba2_5b036af8",
      "range": {
        "startLine": 913,
        "startChar": 49,
        "endLine": 913,
        "endChar": 52
      },
      "revId": "eba82a2df82bb5c072804b0219701a61068982f9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}