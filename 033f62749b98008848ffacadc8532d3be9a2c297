{
  "comments": [
    {
      "key": {
        "uuid": "d97d69e9_929af210",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-09-28T16:33:06Z",
      "side": 1,
      "message": "The above may not be needed since we already have:\n\n aom_highbd_upsampled_pred(xd, cm, mi_row, mi_col, mv, comp_pred8, width,\n                            height, subpel_x_q3, subpel_y_q3, ref8, ref_stride,\n                            bd, subpel_search);\n aom_highbd_comp_mask_pred(comp_pred8, pred8, width, height, comp_pred8, width,\n                            mask, mask_stride, invert_mask);\n\nI think only SIMD functions should be here. Looks like LBD functions are done this way, which isn\u0027t really necessary.",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca328cd6_e3072156",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 9616
      },
      "writtenOn": "2018-10-03T13:31:42Z",
      "side": 1,
      "message": "As there is only sse2 variant of \u0027aom_highbd_upsampled_pred\u0027, aom_dsp_rtcd.h will have the function #defined to sse2, i.e.,\n#define aom_highbd_upsampled_pred aom_highbd_upsampled_pred_sse2\n\nThus removing the function pointer for \u0027aom_highbd_comp_mask_upsampled_pred\u0027 would call \u0027aom_highbd_upsampled_pred_sse2\u0027 function for both ref(c code) and test(simd) cases.\n\nPlease let us know if you have any other approach.",
      "parentUuid": "d97d69e9_929af210",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a411949_864a0c1d",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-10-03T16:05:31Z",
      "side": 1,
      "message": "In aom_dsp_rtcd_defs.pl, we have\nspecialize qw/aom_highbd_upsampled_pred sse2/;\nThat means there are c and sse2 versions of aom_highbd_upsampled_pred. Run-time detection decides which version to use.\nYou see \"#define aom_highbd_upsampled_pred aom_highbd_upsampled_pred_sse2\", which means your allow to use sse2 optimization. If you config to use c only, you should see it uses c version.\nThus, there should be no issue for aom_highbd_comp_mask_upsampled_pred.",
      "parentUuid": "ca328cd6_e3072156",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e966e2f_3b1bcc5d",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-10-03T17:11:22Z",
      "side": 1,
      "message": "We agree that adding \u0027aom_highbd_comp_mask_upsampled_pred\u0027 here is unnecessary when running the encoder. However, in the unit tests, C vs SIMD comparison happens in the function AV1HighbdCompMaskUpVarianceTest::RunCheckOutput. Because aom_highbd_upsampled_pred is defined as aom_highbd_upsampled_pred_sse2, the RunCheckOutput actually compares SSE2 implementation with SSE2 implementation (instead of C implementation) which is incorrrect. Thus, we feel the above change is required.",
      "parentUuid": "8a411949_864a0c1d",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eae90573_97a60610",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-10-03T17:30:23Z",
      "side": 1,
      "message": "I see. Is it possible to modify the unit test? We don\u0027t want to add unnecessary complexity to the codebase.",
      "parentUuid": "7e966e2f_3b1bcc5d",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f722e178_6251de7f",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 9616
      },
      "writtenOn": "2018-10-04T15:21:05Z",
      "side": 1,
      "message": "We have removed \u0027aom_highbd_comp_mask_upsampled_pred\u0027 from aom_dsp_rtcd_defs.pl and its use in testbench. Instead the two functions being called by \u0027aom_highbd_comp_mask_upsampled_pred\u0027 are used in the testbench, i.e., \u0027aom_highbd_upsampled_pred\u0027 and \u0027aom_highbd_comp_mask_pred\u0027.\n\nPlease see if these changes are fine.",
      "parentUuid": "eae90573_97a60610",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25a063be_d02bb1b7",
        "filename": "aom_dsp/aom_dsp_rtcd_defs.pl",
        "patchSetId": 1
      },
      "lineNbr": 926,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-10-04T16:11:18Z",
      "side": 1,
      "message": "Another approach would be to call \u0027aom_highbd_comp_mask_upsampled_pred\u0027 in the unit tests instead of two functions (\u0027aom_highbd_upsampled_pred\u0027 followed by \u0027aom_highbd_comp_mask_pred\u0027 as done in currently in \u0027Patchset 2,3\u0027), with the function pointers \u0027aom_highbd_convolve8_horiz\u0027 and \u0027aom_highbd_convolve8_vert\u0027 set appropriately (C version or SIMD version). This would result in C vs SIMD comparison everywhere except for the case of subpel_x_q3\u003d0 and subpel_y_q3\u003d0 (as the SIMD code is inlined in the function \u0027aom_highbd_comp_mask_upsampled_pred_sse2\u0027 for the case of subpel_x_q3\u003d0 and subpel_y_q3\u003d0). \n\nHowever, for the case of subpel_x_q3\u003d0 and subpel_y_q3\u003d0 we can do the following : \n- Abstract the inlined SIMD code into a function named \u0027aom_highbd_convolve8_copy_sse2\u0027.\n- Abstract the corresponding C function as \u0027aom_highbd_convolve8_copy_c\u0027 and call it in \u0027aom_highbd_upsampled_pred_c\u0027.\n- Have a function pointer named \u0027aom_highbd_convolve8_copy\u0027 which would be set to C or SIMD implementation in aom_dsp_rtcd.h.\n- Write a AVX2 variant of \u0027aom_highbd_convolve8_copy\u0027. This is to ensure that aom_dsp_rtcd.h would have a function pointer and not a #define allowing us to set the function pointer \u0027aom_highbd_convolve8_copy\u0027 appropriately (C or SIMD) in the unit tests.",
      "parentUuid": "f722e178_6251de7f",
      "range": {
        "startLine": 919,
        "startChar": 1,
        "endLine": 926,
        "endChar": 0
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba9dd4f6_0c096130",
        "filename": "test/comp_avg_pred_test.h",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-09-28T16:33:06Z",
      "side": 1,
      "message": "Thanks for modifying the unit tests. Later we also need to add USE_2_TAPS here.",
      "range": {
        "startLine": 454,
        "startChar": 25,
        "endLine": 454,
        "endChar": 35
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb6c4da_81ac2aa0",
        "filename": "test/comp_avg_pred_test.h",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 9616
      },
      "writtenOn": "2018-10-03T13:31:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ba9dd4f6_0c096130",
      "range": {
        "startLine": 454,
        "startChar": 25,
        "endLine": 454,
        "endChar": 35
      },
      "revId": "033f62749b98008848ffacadc8532d3be9a2c297",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}