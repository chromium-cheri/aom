{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "623258d5_5f09a84b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-09T23:36:35Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "284889ce_6bb4db4d",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 3981,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-09T23:36:35Z",
      "side": 1,
      "message": "I am curious why this condition isn\u0027t written as `cpi-\u003emt_info.num_workers \u003d\u003d 1`. Can `cpi-\u003emt_info.num_workers` be 0 or negative?",
      "revId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b684dcfc_a2ef9f3e",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 3981,
      "author": {
        "id": 31022
      },
      "writtenOn": "2023-01-10T06:49:18Z",
      "side": 1,
      "message": "Hi Wan-Teh\n\nWe observed that `cpi-\u003emt_info.num_workers` is 0 when thread configuration is set as 1 (`--threads\u003d1`). Hence, assert is added for `cpi-\u003emt_info.num_workers \u003c\u003d 1`",
      "parentUuid": "284889ce_6bb4db4d",
      "revId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0efa6fd0_c04825c2",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 3981,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T16:45:35Z",
      "side": 1,
      "message": "Thank you for the reply. I studied the relevant code. It seems that `cpi-\u003emt_info.num_workers` is only set the \"correct\" value when the number of threads is \u003e 1. So if the number of threads is 1, `cpi-\u003emt_info.num_workers` is equal to 0 (presumably because we zero-initialize the containing struct).\n\nThe following code snippet in av1/av1_cx_iface.c seems to be the code that sets `ppi-\u003ep_mt_info.num_workers`, which I believe is assigned to `cpi-\u003emt_info.num_workers` later:\n\n```\n    if ((num_workers \u003e 1) \u0026\u0026 (ppi-\u003ep_mt_info.num_workers \u003d\u003d 0)) {\n      // Obtain the maximum no. of frames that can be supported in a parallel\n      // encode set.\n      if (is_stat_consumption_stage(cpi)) {\n        ppi-\u003enum_fp_contexts \u003d av1_compute_num_fp_contexts(ppi, \u0026cpi-\u003eoxcf);\n      }\n      av1_create_workers(ppi, num_workers);\n```\n\n`ppi-\u003ep_mt_info.num_workers` is incremented inside the `av1_create_workers()` call. If `num_workers` is equal to 1, then we do not enter the if block, so `av1_create_workers()` is not called.\n\nDo you think my analysis is correct?",
      "parentUuid": "b684dcfc_a2ef9f3e",
      "revId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "d47b2bc9f176dc681e34212d4046d009a1f0c0de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}