{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3eb26f8_5e29a8a2",
        "filename": "av1/common/arm/jnt_convolve_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 1172,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-05-04T19:20:14Z",
      "side": 1,
      "message": "this passes the tests and test vectors, but from the comment it sounds like you meant:\n\n```\n(1 \u003c\u003c ((ROUND0_BITS - 1)) - 1\n```\n\nnot:\n\n```\n1 \u003c\u003c ((ROUND0_BITS - 1) - 1)\n```\n\nmaybe merge the two to -2",
      "range": {
        "startLine": 1172,
        "startChar": 44,
        "endLine": 1172,
        "endChar": 74
      },
      "revId": "e1d52df6c1307a1003f3d009d5fbd067590d01af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34227e6e_6825867d",
        "filename": "av1/common/arm/jnt_convolve_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 1172,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-05-04T19:46:37Z",
      "side": 1,
      "message": "To implement a rounding shift we need to add a shim of the form:\n\n1 \u003c\u003c (shift - 1)\n\nIf we hadn\u0027t halved all of the filter values, we\u0027d have had:\n\n1 \u003c\u003c (ROUND0_BITS - 1)\n\nBut since we did, we now need:\n\n1 \u003c\u003c ((ROUND0_BITS - 1) - 1)\n\nRe-reading the code comment again, it probably makes more sense to say \"The innermost -1 is needed because we halved the filter values\", rather than the \"outermost -1\".\n\nAll of that said, I like to not collapse all of the constants - so that people reading it have a hope of deriving why they are what they are. (Happy to make changes though if still wanted.)",
      "parentUuid": "d3eb26f8_5e29a8a2",
      "range": {
        "startLine": 1172,
        "startChar": 44,
        "endLine": 1172,
        "endChar": 74
      },
      "revId": "e1d52df6c1307a1003f3d009d5fbd067590d01af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}