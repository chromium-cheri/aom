{
  "comments": [
    {
      "key": {
        "uuid": "80820107_dbda5814",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5550
      },
      "writtenOn": "2017-07-27T18:12:07Z",
      "side": 1,
      "message": "Is the purpose here to pick the upper-left MV out of the 8x8 neighbor block?\nDoesn\u0027t VP9 use the lower-right MV in this case?",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cb5bdd_7fda49ee",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5022
      },
      "writtenOn": "2017-07-27T18:21:17Z",
      "side": 1,
      "message": "This makes the offset aligned to 8x8 block grid in the frame.\n\nConsider mi_row \u003d 3, mi_col \u003d 0 case. The nearest neighbors will be scanned in 4x4 unit.\nWhen row_offset is above 1, the search should be aligned to row index 0 instead of 1, i.e., row_offset in use should be -3 instead of -4, if one wants to only store the 8x8 block mvs for non-immediate spatial neighbors.",
      "parentUuid": "80820107_dbda5814",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53eb482d_20a233e0",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5550
      },
      "writtenOn": "2017-07-27T19:38:36Z",
      "side": 1,
      "message": "Ok - the 2nd part of the question is whether it would be better to use lower-right instead of upper-left for the 8x8 granularity MVs.\n\nTake the case of an 8x8 block surrounded on above/left by 4x4 blocks. Currently the MVs at (0,-2) and (-2,0) are used as the above/left neighbors.  Wouldn\u0027t it be better to use the adjacent blocks (1,-1) and (-1,1)?\n\nIn h/w, this would be more similar to the VP9 scheme.",
      "parentUuid": "c4cb5bdd_7fda49ee",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2bac816_712ddb91",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5022
      },
      "writtenOn": "2017-07-27T20:05:22Z",
      "side": 1,
      "message": "I see. Would it make better sense to start at (0, -1) and (-1, 0) then?",
      "parentUuid": "53eb482d_20a233e0",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0a1219c_780c9f52",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5550
      },
      "writtenOn": "2017-07-27T20:22:06Z",
      "side": 1,
      "message": "I think lower-right is slightly preferable, as (0,-1) is the lower-left of the above block and (-1,0) is the upper-right of the left block. This would require double the storage for each 8x8 granularity position. If we use the lower-right, it can be used as a neighbor for both sides.  (also, more compatibility with the VP9 code).",
      "parentUuid": "a2bac816_712ddb91",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "132e00b0_fea699aa",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5022
      },
      "writtenOn": "2017-07-27T20:49:45Z",
      "side": 1,
      "message": "Just to clarify the meaning of (0, -1) here.\n\nIt means the offset from current block position, i.e., (0, -1) points to the immediate left neighbor of (mi_row, mi_col) -\u003e (mi_row, mi_col - 1).",
      "parentUuid": "e0a1219c_780c9f52",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e13f3a6d_19cf3969",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5550
      },
      "writtenOn": "2017-07-27T21:48:39Z",
      "side": 1,
      "message": "Ah, right, (0,-1) points left - I had the two switched.\nI guess my point was that using lower-right MV to represent the 8x8 granularity position is beneficial as it can act as both an above and left neighbor.",
      "parentUuid": "132e00b0_fea699aa",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f357e04_cd640bba",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5022
      },
      "writtenOn": "2017-07-27T21:51:01Z",
      "side": 1,
      "message": "I see, we can do some experiments on this.",
      "parentUuid": "e13f3a6d_19cf3969",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44542bcd_2698d80c",
        "filename": "av1/common/mvref_common.c",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 5022
      },
      "writtenOn": "2017-07-28T04:26:17Z",
      "side": 1,
      "message": "I did two follow up experiments on this matter:\n (1). Always use 4x4 block resolution to search over the immediate neighbors.\nhttps://aomedia-review.googlesource.com/c/16561/\nThis slightly improves the coding performance by another 0.05%.\n\n (2). To access an 8x8 block, use its bottom right 4x4 motion information.\nhttps://aomedia-review.googlesource.com/c/16562/\nThis hurts the coding performance by 0.03%.\n\nIf it is more desirable to use (2) for hw design, we can go with that option. The coding stats is about even. Please let us know. Thanks.",
      "parentUuid": "6f357e04_cd640bba",
      "range": {
        "startLine": 172,
        "startChar": 0,
        "endLine": 173,
        "endChar": 39
      },
      "revId": "7968302e47dc35a063ecd58cad0d6d8b318bb733",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}