{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "390fa0f5_ba0e8ed8",
        "filename": "tools/dump_obu.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-07-31T01:17:49Z",
      "side": 1,
      "message": "This issue seems to be an example of Google\u0027s totw/133.\n\nThis issue is discussed in this Stack Overflow article:\nhttps://stackoverflow.com/questions/76867698/what-does-ignoring-attributes-on-template-argument-mean-in-this-context\n\nDo you think we should adopt their solution instead?",
      "revId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "082d5be8_d5a33fa6",
        "filename": "tools/dump_obu.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-07-31T01:21:26Z",
      "side": 1,
      "message": "libavif uses the approach in the Stack Overflow article:\nhttps://github.com/AOMediaCodec/libavif/blob/main/include/avif/avif_cxx.h",
      "parentUuid": "390fa0f5_ba0e8ed8",
      "revId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f871b848_ac1c7bc5",
        "filename": "tools/dump_obu.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-07-31T02:10:04Z",
      "side": 1,
      "message": "\u003e libavif uses the approach in the Stack Overflow article:\n\u003e https://github.com/AOMediaCodec/libavif/blob/main/include/avif/avif_cxx.h\n\nThis solution seems a little more straightforward since we\u0027re not trying to hide multiple types.",
      "parentUuid": "082d5be8_d5a33fa6",
      "revId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "73c232fc7225d290074d35217d2fd0f32e130685",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}