{
  "comments": [
    {
      "key": {
        "uuid": "7cdf6d2e_0467e581",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 432,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:12:28Z",
      "side": 1,
      "message": "I do this here to avoid code duplication. If you prefer, I can duplicate this in the if-else structure above. (There will be five copies.)",
      "range": {
        "startLine": 431,
        "startChar": 0,
        "endLine": 432,
        "endChar": 23
      },
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33d1ea68_6f67f359",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 477,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:19:12Z",
      "side": 1,
      "message": "av1_receive_compressed_data() sets cm-\u003ecur_frame to a valid pointer here. So we need to set cm-\u003ecur_frame-\u003ebuf.corrupted to 1 on all error paths after this point, to preserve the current behavior.",
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "674b004b_54c91770",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 499,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:19:12Z",
      "side": 1,
      "message": "This is the first error path. It calls release_frame_buffers() (at line 497).",
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf646624_950b9b7f",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 511,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:19:12Z",
      "side": 1,
      "message": "This is the second error path. It also calls release_frame_buffers() (at line 509). So I decided to set cm-\u003ecur_frame-\u003ebuf.corrupted to 1 in release_frame_buffers().",
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "608249f9_54d7fbf6",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 4
      },
      "lineNbr": 533,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:19:12Z",
      "side": 1,
      "message": "This is the third error path. At this point, only the swap_frame_buffers() call at line 525 can set cm-\u003eerror.error_code to an error, so I set set cm-\u003ecur_frame-\u003ebuf.corrupted to 1 in wap_frame_buffers(), where it sets cm-\u003eerror.error_code to AOM_CODEC_UNSUP_BITSTREAM (at line 400).",
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "492474d0_080222ac",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 4
      },
      "lineNbr": 6635,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-30T01:12:28Z",
      "side": 1,
      "message": "We only need to clear cm-\u003ecur_frame if cm-\u003enew_fb_idx is valid, so I moved this into this if statement.",
      "range": {
        "startLine": 6635,
        "startChar": 6,
        "endLine": 6635,
        "endChar": 27
      },
      "revId": "f606ef8d15b434b54cc8f11f89f4c435a5f1e120",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}