{
  "comments": [
    {
      "key": {
        "uuid": "c5b2fe10_705f187a",
        "filename": "av1/common/clpf.c",
        "patchSetId": 15
      },
      "lineNbr": 107,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "Any intention for rectangular blocks? Passing bs once would make it a little easier to follow.",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e500e287_c5a5fa9c",
        "filename": "av1/common/clpf.c",
        "patchSetId": 15
      },
      "lineNbr": 107,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "It\u0027s this way to allow 4x8 and 8x4 along edges for chroma if the filter is extended to chroma in the future.",
      "parentUuid": "c5b2fe10_705f187a",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_b02fe088",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "s_max/s_min? p and m don\u0027t seem to mean anything",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5f91ed7_0493164e",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "p \u003d plus, m \u003d minus.",
      "parentUuid": "c5b2fe10_b02fe088",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_1069f48f",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "This doesn\u0027t allow for filtering when the whole source is 8x8. Is that intentional?",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05041697_c6ce2263",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Does the spec really allow an 8x8 source frame and will the encoder internally only use 8x8 in that case?  Yes, the filter will not work correctly along the right edge in that case.  A minimum frame size of 16x16 is assumed.  If the encoder really allows 8x8 internally, a test should be added outside this function and we should fall back to the C code in this patholofical case.",
      "parentUuid": "c5b2fe10_1069f48f",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_503f7cb4",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "const\n\nc_shuff/b_shuff? also weird that c is before b",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f6eae3_23960a3e",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 27,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Ok, whatever, just a temp variable name used once.",
      "parentUuid": "c5b2fe10_503f7cb4",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_f03fa867",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "const l1, l2",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_d034ac8e",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 37,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "I think everything but o can be const?",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05041697_a6d32609",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 37,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "I regard consts for local temporary variables superfluous, but I can accommodate.",
      "parentUuid": "c5b2fe10_d034ac8e",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_b0e5a033",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "Why negative y0? That should never happen? Or you only care if both y and y0 are 0 at the same time?",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05041697_86d82a24",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Yes, it\u0027s a test for y and y0 both being 0.",
      "parentUuid": "c5b2fe10_b0e5a033",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_d0494c3b",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 41,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "You already added 128 to x. Why not shuffle those values and omit the add8 for b and c?",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85356664_82891a21",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 41,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Good point.",
      "parentUuid": "c5b2fe10_d0494c3b",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_10b694ef",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 98,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "shuffle x, save an add_8",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_d0a4ac50",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 194,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "Don\u0027t change the order of width/height and sizey.",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e500e287_a59afe5a",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 194,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Moved between y0 and width in case that looks better.",
      "parentUuid": "c5b2fe10_d0a4ac50",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_0ba1c990",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "Had to look up this function. _zero might be better than _init.",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_8bb5d9c8",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 21,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "Same complaint about sp/sm",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_eb20dd05",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "const in lots of places",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85356664_22960e3e",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "I must say I find this coding style odd (and verbose), especially for pre C99 where declarations must be at the top.  Sometimes one might want to change the order of the code, so:\n\nconst tmp \u003d ...;\n\nbecomes\n\nint tmp;\n...\ntmp \u003d ...;\n\nand be forced to throw away the const (which adds no real value for the encoder) though tmp is only read after its assignment, so what becomes const is pretty arbitrary.  But whatever, I\u0027ve added them.",
      "parentUuid": "c5b2fe10_eb20dd05",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_0bf309a1",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "r_stride/o_stride? so is very hard to understand.\n\nguessing reconstruction/original? seems like original should come first in the argument list.",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05041697_66be4ea4",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 26,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Changed names and order.",
      "parentUuid": "c5b2fe10_0bf309a1",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_ab2ad5df",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 36,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "k1/l1?",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05041697_46bb52b2",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 36,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Even temp variables got a have a name.  1/2 is the line.",
      "parentUuid": "c5b2fe10_ab2ad5df",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_cbfe4154",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 40,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "in the other function o is the value modified",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_4b1351b6",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "shuffle x",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "250bdaaa_27961a3e",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Changed the s1/s2 names too as in clpf_block for readability",
      "parentUuid": "c5b2fe10_4b1351b6",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b2fe10_d09a6c5c",
        "filename": "test/test.mk",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-08-26T23:24:04Z",
      "side": 1,
      "message": "LIBAOM_TEST_SRCS-$(CONFIG_CLPF)",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6515d2be_a99add5a",
        "filename": "test/test.mk",
        "patchSetId": 15
      },
      "lineNbr": 108,
      "author": {
        "id": 5111
      },
      "writtenOn": "2016-08-27T07:02:33Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "c5b2fe10_d09a6c5c",
      "revId": "7d69b94af2eeac9b78cb96aeedae03443e4e0fe1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}