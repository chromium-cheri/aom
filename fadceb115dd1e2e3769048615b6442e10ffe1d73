{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6a3878e8_c373cf11",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "Please summarize what the improvements are. I see testing the \"inspect\" interface and three codec controls (AV1_SET_TILE_MODE, AV1D_EXT_TILE_DEBUG, and AV1D_SET_IS_ANNEXB).",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b28afdb1_d950f3be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-20T20:36:40Z",
      "side": 1,
      "message": "Indeed, I put more details in the commit message.",
      "parentUuid": "6a3878e8_c373cf11",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f21c935_65a08583",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-09T20:11:00Z",
      "side": 1,
      "message": "Note that this fuzzer found in some minutes a null deref with setting AV1D_EXT_TILE_DEBUG",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b39f051_3fba1782",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "Hi Philippe,\n\nThank you for the CL. I am not familiar with the inspect interface, so I am learning about it as I review this CL. Please pardon me if some of my comments are naive or incorrect.",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8da4bf3d_581b8c7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-23T07:51:49Z",
      "side": 1,
      "message": "Some changes done in https://aomedia-review.googlesource.com/c/aom/+/186461",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab1aa820_0813298b",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "av1/av1_iface_common.h is a private header. But I know it\u0027s the only way to get a declaration of `aom_codec_av1_inspect_algo`.\n\nWe should add a `aom_codec_av1_inspect()` function that returns the address of `aom_codec_av1_inspect_algo`.",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9ac70f5_789fcca7",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-20T20:36:40Z",
      "side": 1,
      "message": "Do you really want me and this change to add a public API ? I meant only to improve fuzzing coverage... Adding a public API seems another kind of change...",
      "parentUuid": "ab1aa820_0813298b",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22f34758_23226598",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-23T00:17:25Z",
      "side": 1,
      "message": "I\u0027m sorry my comment was confusing. My comment is a note to the libaom maintainers (including myself). You don\u0027t need to add the `aom_codec_av1_inspect()` function in this CL. I just wrote a CL to do that:\nhttps://aomedia-review.googlesource.com/c/aom/+/186541\n\nbut I am not sure if we should expose the `aom_codec_av1_inspect_algo` interface in the public API.\n\nAre you using the `aom_codec_av1_inspect_algo` interface? If not, then I suggest we not test it in this file.",
      "parentUuid": "f9ac70f5_789fcca7",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7433a553_f87f7c35",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-23T07:51:49Z",
      "side": 1,
      "message": "Yes `aom_codec_av1_inspect_algo` is used in order to fuzz `decoder_inspect`",
      "parentUuid": "22f34758_23226598",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abff12aa_d63713b3",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-23T19:24:01Z",
      "side": 1,
      "message": "I see my previous question is ambiguous. What I meant to ask is: are you using the `aom_codec_av1_inspect_algo` interface in your own project or product?\n\nThe reason I asked is that the `aom_codec_av1_inspect_algo` interface is not exported in the public API and is also not used by libaom internally (except when the `CONFIG_THREE_PASS` cmake option is set). So we may be able to delete the `aom_codec_av1_inspect_algo` interface.",
      "parentUuid": "7433a553_f87f7c35",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ab42b2_e5366fcb",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "Should we also call `aom_codec_control(AV1_SET_INSPECTION_CALLBACK)`?",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a94b6ca8_6b23f1f5",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-20T20:36:40Z",
      "side": 1,
      "message": "What for ? What should the callback do ?",
      "parentUuid": "f4ab42b2_e5366fcb",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9acb25f1_697981b3",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-23T00:17:25Z",
      "side": 1,
      "message": "I saw `aom_codec_control(AV1_SET_INSPECTION_CALLBACK)` in examples/inspect.c, so I thought it may be related to `aom_codec_av1_inspect_algo`. If you don\u0027t know the answer to this question, I will ask my colleagues or try to find the answer myself.\n\nBut this question is moot if we don\u0027t test the `aom_codec_av1_inspect_algo` interface in this file. See my comment at line 26.",
      "parentUuid": "a94b6ca8_6b23f1f5",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "691c54ad_16fdc7a6",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-23T07:51:49Z",
      "side": 1,
      "message": "I think that the current CL brings already some coverage improvements.\n\n`AV1_SET_INSPECTION_CALLBACK` may bring more, but it is unclear to me what the callback should test, so I leave that as is for the moment...",
      "parentUuid": "9acb25f1_697981b3",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5185463d_e71db7d3",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "I wonder if we should add more input files to the corpus (e.g., some files encoded in the Annex B format).",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "538f4c1f_15ce57fc",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-20T20:36:40Z",
      "side": 1,
      "message": "The corpus is not part of this git repository but it is located at https://storage.googleapis.com/aom-test-data/fuzzer/dec_fuzzer_seed_corpus.zip is that correct ?\n\nGeneerally speaking, I think more diverse files are always welcome in the corpus, even if I do not know what this annex B is)",
      "parentUuid": "5185463d_e71db7d3",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f40bcb23_aa7457a4",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-23T00:17:25Z",
      "side": 1,
      "message": "A problem with deriving these three boolean flags this way is that certain input data will only be tested with certain values of these boolean flags.\n\nFor example, if the fourth bit (0x8) is set in the middle byte of the input data, the input data will only be tested with AV1D_SET_IS_ANNEXB\u003d1. This is not ideal.\n\nI found that this function (before this CL) ignores the first `IVF_FILE_HDR_SZ` bytes in the input data (see lines 56-57). So it would be better to derive these three boolean flags from the first `IVF_FILE_HDR_SZ` bytes, so that they are independent of the data passed to the decoder.",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31e25e2a_46d1b1d3",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-23T07:51:49Z",
      "side": 1,
      "message": "Indeed, doing that",
      "parentUuid": "f40bcb23_aa7457a4",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64c3f98_39120a43",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-01-18T21:39:04Z",
      "side": 1,
      "message": "I suggest we still pass `nullptr` as the last argument when inspect is not used.",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1639fe1b_773dac26",
        "filename": "examples/av1_dec_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 33720
      },
      "writtenOn": "2024-01-20T20:36:40Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "c64c3f98_39120a43",
      "revId": "fadceb115dd1e2e3769048615b6442e10ffe1d73",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}