{
  "comments": [
    {
      "key": {
        "uuid": "f6ae2d55_aa7fffd7",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-08-04T07:04:38Z",
      "side": 1,
      "message": "I suggest instead to modify the condition to:\nif(!cpi-\u003ecommon.show_frame \u0026\u0026 !cpi-\u003ecommon.show_existing_frame)\n\nIt seems simpler than messing with the control flow ; what do you think?",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb2bd20c_a9e27e33",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-04T15:01:58Z",
      "side": 1,
      "message": "I agree that the control flow should remain simple.\n\nModifying the condition to if(!cpi-\u003ecommon.show_frame \u0026\u0026 !cpi-\u003ecommon.show_existing_frame) does not resolve the issue. What is required is exiting the loop when cpi-\u003eshow_existing_frame \u003d\u003d true (maybe we need to exit when cpi-\u003eshow_frame\u003d\u003dtrue).\n\nFrom my understanding, containers require that superframes have one visible frame. \n\nFundamentally, the \"cx_data_sz \u003e\u003d ctx-\u003ecx_data_sz / 2\" condition and the show_existing_frame logic are incompatible (because the show_existing_frame code flushes and continues to next frame).",
      "parentUuid": "f6ae2d55_aa7fffd7",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6479ebe2_5f58dcde",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-08-04T16:06:41Z",
      "side": 1,
      "message": "\u003e From my understanding, containers require that superframes have one visible frame. \n\nYes.\n\n\u003e Because the show_existing_frame code flushes and continues to next frame\n\nYes, but flushing closes the current superframe, and starts a new superframe, so I don\u0027t think it\u0027s relevant whether the loop continues or not.\n\nUnder these conditions, \"show_existing_frame\u003d1\" or \"show_frame\u003d1\" are both equivalent conditions that should trigger flushing.\n\nPlease let me know if I\u0027m missing something.",
      "parentUuid": "bb2bd20c_a9e27e33",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ef43b72_d3d44aa2",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1255,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-04T18:11:44Z",
      "side": 1,
      "message": "Yes it relevant, when the loop continues, it causes a mismatch in the test_decode function, as it is the caller of this function.\n\nConcretely, after encoder_encode() the test_decode function will also decode the content and obtain the reconstructed frames using the functions av1_cx_iface.c:ctrl_get_new_frame_image and av1_dx_iface.c:ctrl_get_new_frame_image.\n\nThe function av1_cx_iface.c:ctrl_get_new_frame_image will return the frame at\nlast_show_frame_buf_idx whereas, the function av1_dx_iface.c:ctrl_get_new_frame_image\nwill return cm-\u003eframe_to_show. If the current loop does not exit, these frames will not match.\n\nThis can be reproduced by following the instructions in https://bugs.chromium.org/p/aomedia/issues/detail?id\u003d669\n\nAnother solution could be to make functions av1_cx_iface.c:ctrl_get_new_frame_image and av1_dx_iface.c:ctrl_get_new_frame_image return the same frame.",
      "parentUuid": "6479ebe2_5f58dcde",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c42cda4_37ffee19",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1287,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-08-03T16:11:41Z",
      "side": 1,
      "message": "Could you please clarify one point: is it currently possible (with current master), to get multiple shown frames inside the same superframe?\nOr is it something that only becomes possible when line 1293 (below) is introduced?",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9f5bfbe_57260baf",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1287,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-04T02:30:28Z",
      "side": 1,
      "message": "Yes, it is possible with the current master to get multiple shown frames inside the same superframe. This causes test-decode\u003dfatal runs to fail see https://bugs.chromium.org/p/aomedia/issues/detail?id\u003d669",
      "parentUuid": "9c42cda4_37ffee19",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "784bff52_25927810",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1287,
      "author": {
        "id": 6000
      },
      "writtenOn": "2017-08-04T07:04:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b9f5bfbe_57260baf",
      "revId": "da01fcf33956031777b59e4f7d39df0b4854a3ee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}