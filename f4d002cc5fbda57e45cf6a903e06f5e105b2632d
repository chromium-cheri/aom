{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2eae8ce1_a1266279",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31592
      },
      "writtenOn": "2023-05-05T12:38:57Z",
      "side": 1,
      "message": "This CL introduces a conservative approach to prune motion search for the speed feature `skip_fullpel_search_using_startmv`. This sf skips `NEWMV` mode based on closeness of previously evaluated start_mv’s w.r.t the current reference frame `start_mv`. \n\nIn the parent version, the mode is skipped if the `start_mv` is closer to any of the start_mv\u0027s prior to current `ref_mv_idx` (Level 2). This CL improves the logic conservatively by checking all the previously evaluated start_mv\u0027s (Level 1) to skip the full-pel search.\n\nThis CL impacts only ‘good’ encoding for speed 5. Pruning levels used for the speed feature w.r.t resolution as follows.\n\n```\nCpu/Testset   LOWRES2   MIDRES2   HDRES2\n  Speed 5     Level 1   Level 1   Level 2\n  Speed 6     Level 2   Level 2   Level 2\n```\n\nPlease check the Borg test results below.\n```\n                Instruction Count       BD-Rate Loss(%)      \ncpu    Testset    Reduction(%)    avg.psnr   ovr.psnr    ssim \n 5     LOWRES2      1.100         0.0312     0.0248   -0.0242\n 5     MIDRES2      1.026        -0.0260    -0.0268   -0.0287\n 5     HDRES2       1.165         0.0350     0.0199    0.0186\n 5     Average      1.097         0.0134     0.0059   -0.0114\n```\n\nThe CL is verified to be bit-exact for cpu 6.\n\nIn the commit message:\n[-] sign indicates encode time increase\n[+] sign indicates encode time reduction\n\nThe instruction count reduction specified has been measured using command:\n`$ perf stat -e instructions:u ./aomenc`",
      "revId": "f4d002cc5fbda57e45cf6a903e06f5e105b2632d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "353592ce_8af5268c",
        "filename": "av1/encoder/motion_search_facade.c",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-05-05T15:48:36Z",
      "side": 1,
      "message": "The result looks good. Not sure why this works better than level 1\u0027s condition? Did you observe anything or get an explanation?",
      "range": {
        "startLine": 213,
        "startChar": 8,
        "endLine": 213,
        "endChar": 59
      },
      "revId": "f4d002cc5fbda57e45cf6a903e06f5e105b2632d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "194f8433_71e54156",
        "filename": "av1/encoder/motion_search_facade.c",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 31592
      },
      "writtenOn": "2023-05-08T12:11:45Z",
      "side": 1,
      "message": "Thanks for reviewing the CL,\nIn the parent version, `skip_fullpel_search_using_startmv` sf is disabled for speed 5 and only enabled for speed 6.\nThe newly introduced sf level 1 is used in LOWRES2 and MIDRES2 test sets for speed 5.\nSince in level 1, motion vector match is ensured against all the previously evaluated start_mvs it works more conservatively than level 2.",
      "parentUuid": "353592ce_8af5268c",
      "range": {
        "startLine": 213,
        "startChar": 8,
        "endLine": 213,
        "endChar": 59
      },
      "revId": "f4d002cc5fbda57e45cf6a903e06f5e105b2632d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}