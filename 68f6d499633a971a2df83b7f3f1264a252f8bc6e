{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1f24fd03_8eccb5af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T21:08:52Z",
      "side": 1,
      "message": "Tom: Please review the changes to test/test.cmake. Thank you!",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfa097c4_c021e12f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "Mark: Thanks for the fix. I suggest some changes.",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5f72055_60d8df2b",
        "filename": "test/ratectrl_qmode_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 347,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "Nit: change \"here\" to \"in libaom\" to be more precise? Or we could omit \"since it\u0027s the first use of gmock here\".",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fda43ed_6a39f3c9",
        "filename": "test/ratectrl_qmode_test.cc",
        "patchSetId": 7
      },
      "lineNbr": 347,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5f72055_60d8df2b",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26dcfe4b_cd54080f",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 381,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "We should be able to merge these two target_include_directories() calls:\n\n  target_include_directories(\n    aom_gtest\n    PUBLIC \"${AOM_ROOT}/third_party/googletest/src/googletest/include\"\n    PRIVATE \"${AOM_ROOT}/third_party/googletest/src/googletest\")",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f9192a3_e2005030",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 381,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26dcfe4b_cd54080f",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28e639b7_fd5fd042",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 383,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "Update this comment to be specific to the GTEST_HAS_PTHREAD macro because this comment does not apply to the GTEST_OS_WINDOWS macro. (Please see my comment at line 386.)",
      "range": {
        "startLine": 383,
        "startChar": 4,
        "endLine": 383,
        "endChar": 36
      },
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de3879bb_1ee96066",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 383,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28e639b7_fd5fd042",
      "range": {
        "startLine": 383,
        "startChar": 4,
        "endLine": 383,
        "endChar": 36
      },
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af0aa26f_afbc5265",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "Undo this change. GTEST_OS_WINDOWS is defined by \"gtest/internal/gtest-port-arch.h\". Here is the relevant comment from gtest/internal/gtest-port.h:\n\n```\n// Platform-indicating macros\n// --------------------------\n//\n// Macros indicating the platform on which Google Test is being used\n// (a macro is defined to 1 if compiled on the given platform;\n// otherwise UNDEFINED -- it\u0027s never defined to 0.).  Google Test\n// defines these macros automatically.  Code outside Google Test MUST\n// NOT define them.\n//\n//   ...\n//   GTEST_OS_WINDOWS  - Windows (Desktop, MinGW, or Mobile)\n//   ...\n```\n\nNote: We should delete lines 385-386. Probably should do that in a separate CL.",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ea8dfbe_7ca82f5a",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "Oh, good point. \nI changed it to define GTEST_HAS_PTHREAD\u003d0 on Windows, which should be innocuous.\nI\u0027m not sure it\u0027s even necessary to check for MSVC or WIN32 here, but  it shouldn\u0027t hurt to leave it. We\u0027ll see what Jenkins says...\n\nTom added this originally, so perhaps he\u0027ll have more insight. There were a few comments about this in http://go/aomcl/78142/7/test/test.cmake.",
      "parentUuid": "af0aa26f_afbc5265",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e6bfd7d_fb447f05",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T01:37:33Z",
      "side": 1,
      "message": "It made it through the Jenkins gauntlet, FWIW.",
      "parentUuid": "2ea8dfbe_7ca82f5a",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42a91840_c5dae5d8",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-04-12T17:09:35Z",
      "side": 1,
      "message": "\u003e\u003e Tom added this originally, so perhaps he\u0027ll have more insight. \n\nIIRC use of GTEST_OS_WINDOWS was related to some painful integration issues encountered when attempting to use the Googletest CMake build directly via add_subdirectory(). I would lean toward listening to the developer docs in Googletest instead of my fuzzy recollection of the problem at the time, which has likely long been sorted out. \n\nDropping it seems fine, but we\u0027ll know within a couple of days if some combination of build toolchain and windows version becomes unhappy.",
      "parentUuid": "1e6bfd7d_fb447f05",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b5ba3bc_184fb03a",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-12T19:12:25Z",
      "side": 1,
      "message": "Mark: The presubmit Jenkins tests do not include compiling with Visual Studio. We have a nightly Jenkins test that compiles with Visual Studio. I can the removal of this line on my Windows computer at home tonight.",
      "parentUuid": "42a91840_c5dae5d8",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25c45175_ae4ddfb9",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T20:21:58Z",
      "side": 1,
      "message": "Sure, thanks Wan-Teh, that would be great. I\u0027ll wait for your verdict.",
      "parentUuid": "8b5ba3bc_184fb03a",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "084c8db1_8321b1cf",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 402,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "We should be able to merge these two target_include_directories() calls:\n\n  target_include_directories(\n    aom_gmock\n    PUBLIC \"${AOM_ROOT}/third_party/googletest/src/googlemock/include\"\n    PRIVATE \"${AOM_ROOT}/third_party/googletest/src/googlemock\")",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bc8be72_0c336361",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 402,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "084c8db1_8321b1cf",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38e2f78_50246949",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 431,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-04-11T22:09:26Z",
      "side": 1,
      "message": "Are these three target_link_libraries() calls (at lines 418, 424, 431) necessary? We can build libaom without them right now.",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "365194d5_aaba8198",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 431,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-12T00:00:31Z",
      "side": 1,
      "message": "That\u0027s because at head it\u0027s doing include_directories. I changed it to target_include_directories, so that only aom_gtest and targets which transitively link to it will have the gtest headers in their include path. I figure this is cleaner than just willy nilly making the headers available to all targets.",
      "parentUuid": "d38e2f78_50246949",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4628606b_9ecc0a83",
        "filename": "test/test.cmake",
        "patchSetId": 7
      },
      "lineNbr": 431,
      "author": {
        "id": 5215
      },
      "writtenOn": "2022-04-12T17:09:35Z",
      "side": 1,
      "message": "Agreed: the aom CMake build is ancient, and at the time I wrote this stuff I was unaware of target_include_directories(). Using the target_* functions in favor of global state modifying functions like add_definitions() and include_directories() is definitely a better way of doing things.",
      "parentUuid": "365194d5_aaba8198",
      "revId": "68f6d499633a971a2df83b7f3f1264a252f8bc6e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}