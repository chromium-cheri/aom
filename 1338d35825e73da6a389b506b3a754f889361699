{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "127c48a6_0f3cf430",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 22433
      },
      "writtenOn": "2021-10-04T14:31:18Z",
      "side": 1,
      "message": "Hi Wan-Teh, Yunqing,\n\nThe buffer \u0027last_frame_uf\u0027 is used to store the reconstructed non-loop filtered frame. This buffer is useful when search_filter_level() is invoked (i.e., when the loop filter search method lpf_sf.lpf_pick \u003c LPF_PICK_FROM_Q). Hence, the memory allocation for the same is made conditional based on the speed feature ‘lpf_pick’.\n\nThis change is facilitated by moving the memory allocation for \u0027last_frame_uf\u0027 buffer from alloc_altref_frame_buffer() function to av1_pick_filter_level(). An alternate approach would be to make the memory allocation conditional in alloc_util_frame_buffers() itself without moving it. We didn’t pursue this approach as it did not take care of the allocation in case of a dynamic change in cpu-used parameter.\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027, \u0027RT\u0027 and \u0027ALLINTRA\u0027 encoding modes for a few contents with different encoding configurations. It was also verified that the output of AVIF encode is bit-exact w.r.t. parent version for a typical image dataset.\n\nWe validated the heap memory reduction and multi-thread speed-up for speed\u003d9 as well. For AVIF image encode with speed\u003d9 and threads\u003d4,\n\n               HEAP Memory     Encode time \nResolution     reduction(%)    reduction(%)\n360p-720p         3.78            1.51\n\nThe speed-up was measured across cq-levels 17, 29 and 63.\n\nThis patch is applicable for ‘RT’ encoding mode, as the lpf_pick (loop filter search method) is set as ‘ LPF_PICK_FROM_Q’ for cpu-used \u003e\u003d 5. \nFor libaom RT cpu-used \u003d 5,\n\n                    HEAP Memory reduction(%)\n                    Single      Multi\nResolution  Tile    thread      thread\n640x360     2x1      3.47        3.00 (2 threads)\n832x480     2x1      3.28        3.12 (2 threads)\n1280x720    2x2      2.79        2.53 (4 threads)\n1920x1080   4x2      2.92        2.33 (8 threads)\n\nHEAP memory reduction was measured using the command below. \n$valgrind --tool\u003dmassif ./aomenc ...\n\nPlease review the patch.\n\nRegards,\nAniket.\n",
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "224bcb4c_b89859b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:12:42Z",
      "side": 1,
      "message": "Thanks for the CL!",
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cce61f19_4a30fc59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:45:33Z",
      "side": 1,
      "message": "Cheng: Please review. You can probably wait until the next patchset to review.",
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc0ae7a4_3e7055f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T22:03:43Z",
      "side": 1,
      "message": "Hi Aniket,\n\nPlease rebase your source tree before making changes, because I just committed a cleanup CL: https://aomedia-review.googlesource.com/c/aom/+/146922\n\nSorry about the inconvenience.",
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4ce7349_f92d7ba4",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 1
      },
      "lineNbr": 360,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:12:42Z",
      "side": 1,
      "message": "Nit: Replace \"cm-\u003eseq_params\" with \"seq_params\".",
      "range": {
        "startLine": 360,
        "startChar": 30,
        "endLine": 360,
        "endChar": 44
      },
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a53202e5_0ade09ef",
        "filename": "av1/encoder/picklpf.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:12:42Z",
      "side": 1,
      "message": "Nit: For consistency, either declare this variable at the beginning of the function and replace \"cm-\u003eseq_params\" with \"seq_params\" in this function, or just use \"cm-\u003eseq_params\" in the new code below.",
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7809aa2c_5fcc09c0",
        "filename": "av1/encoder/picklpf.c",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:12:42Z",
      "side": 1,
      "message": "Nit: during loop filter search \u003d\u003e in search_filter_level()\n\nThis is more exact.",
      "range": {
        "startLine": 278,
        "startChar": 34,
        "endLine": 278,
        "endChar": 52
      },
      "revId": "1338d35825e73da6a389b506b3a754f889361699",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}