{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f71dbb63_2b5c1e3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-26T20:44:05Z",
      "side": 1,
      "message": "I think x-\u003ee_mbd.tile_ctx is updated at the beginning. Not sure about the situation in this unit test. Is it possible to fix tile_ctx updating instead of passing cm-\u003efc directly here?",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14309464_cfd35d53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-04-27T14:56:47Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nAs per our understanding, \u0027e_mbd.tile_ctx\u0027 is initialized with \u0027cpi-\u003etile_data\u0027 in enc_row_mt_worker_hook() and also the initialization happens when a particular job is valid (initialization does not happen if end_of_frame\u003d1). As the main thread (worker id 0) is the last thread to be launched, there are situations where the main thread is not assigned with any superblock row to process. In such cases, end_of_frame will be 1 and initialization will not happen. The function \u0027av1_fill_lr_rates()\u0027 (which is called inside av1_pick_filter_restoration()) is not under multi-thread scope. Hence the main thread will process the update of loop restoration rates. So, passing cm-\u003efc should tend to resolve the issue.\n\nIn order to update \u0027e_mbd.tile_ctx\u0027 for the situation specified above, the update should be moved before ‘end_of_frame‘ check in enc_row_mt_worker_hook() and also the memcpy to fill the data to \u0027e_mbd.tile_ctx\u0027 should happen unconditionally.  This might add up some overhead in encode time. Hence, we feel passing cm-\u003efc (or cpi-\u003etile_data[0].tctx, which is equal to cm-\u003efc) is better option.\n\nPlease let us know your opinion.\n\nThanks \u0026 Regards,\nVenkata.",
      "parentUuid": "f71dbb63_2b5c1e3e",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8f72172_eed67095",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-04-27T14:56:47Z",
      "side": 1,
      "message": "Please review the patch.",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7810725c_528f063c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-27T16:57:05Z",
      "side": 1,
      "message": "Hi Venkata, I am ok to have this CL since it fixes the issue. Regarding xd-\u003etile_ctx initialization, we probably want to make it work if now it is used beyond the encoding stage. We can discuss it. Thanks.",
      "parentUuid": "14309464_cfd35d53",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e09790f9_84e849b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9611
      },
      "writtenOn": "2021-04-28T14:40:33Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nAs per our understanding, \u0027e_mbd.tile_ctx\u0027 was mostly used in encoding stage except the following 2 places:\n\n1. av1_collect_mv_stats(): In this function, \u0027e_mbd.tile_ctx\u0027 is initialized with cm-\u003efc. Hence this should not result in any MT mismatch.\n2. av1_fill_lr_rates(): For this call, \u0027e_mbd.tile_ctx\u0027 was used. As loop restoration context is not updated during encode stage, passing cm-\u003efc was resulting in bit-exact behavior, at the same time resolving MT crash issue.\n\nPlease let us know your opinion on our understanding.\n\nThanks \u0026 Regards,\nVenkata",
      "parentUuid": "7810725c_528f063c",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe007c91_825b4c48",
        "filename": "av1/encoder/pickrst.c",
        "patchSetId": 2
      },
      "lineNbr": 1711,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-04-26T19:56:45Z",
      "side": 1,
      "message": "This line was added by Muffadal in https://aomedia-review.googlesource.com/c/aom/+/112542.\n\nMuffadal, could you take a look? Thanks",
      "revId": "80b5d6c8e63a10a05aa32f948a24f57c8c6076ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}