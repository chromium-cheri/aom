{
  "comments": [
    {
      "key": {
        "uuid": "9b867b3b_781c401d",
        "filename": "aom/aom_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 863,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-28T23:25:57Z",
      "side": 1,
      "message": "Nit: add \"of the aom_fixed_buf_t\" after \"the \u0027buf\u0027 member\".",
      "range": {
        "startLine": 863,
        "startChar": 57,
        "endLine": 863,
        "endChar": 73
      },
      "revId": "008b6e45b372a2d283112e47314a926e73ec9309",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20bb54b1_122e8666",
        "filename": "aom/aom_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 864,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-28T23:25:57Z",
      "side": 1,
      "message": "Please document the caller should use the free() function to free the memory. It is important for libaom because libaom also has an aom_free() function.\n\nShould we allocate the memory using aom_malloc(), so that the caller can use aom_free() to free the memory?",
      "range": {
        "startLine": 863,
        "startChar": 47,
        "endLine": 864,
        "endChar": 43
      },
      "revId": "008b6e45b372a2d283112e47314a926e73ec9309",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "425932b5_8d78faf7",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 948,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-08-28T23:25:57Z",
      "side": 1,
      "message": "Please document whether free() or aom_free() should be used.",
      "range": {
        "startLine": 948,
        "startChar": 67,
        "endLine": 948,
        "endChar": 72
      },
      "revId": "008b6e45b372a2d283112e47314a926e73ec9309",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}