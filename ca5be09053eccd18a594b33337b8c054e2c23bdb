{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b8b1cb66_56cfdd1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-10-28T19:00:24Z",
      "side": 1,
      "message": "Ran this on the latest code for screen speed 10: there was ~5% average slowdown (encoding_spdup), one clip was over 9%; and generally some overshoot at the low bitrates (400/500k) for most clips. Can you check on the latest code if you get same?",
      "revId": "ca5be09053eccd18a594b33337b8c054e2c23bdb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20173251_2c9631b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-27T16:50:12Z",
      "side": 1,
      "message": "The idea sounds good.",
      "revId": "ca5be09053eccd18a594b33337b8c054e2c23bdb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59c569b3_37acd760",
        "filename": "av1/encoder/aq_cyclicrefresh.c",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-27T16:50:12Z",
      "side": 1,
      "message": "Is frame_since_golden the one needed? Unfortunately, that one isn\u0027t available in av1.",
      "range": {
        "startLine": 412,
        "startChar": 12,
        "endLine": 412,
        "endChar": 28
      },
      "revId": "ca5be09053eccd18a594b33337b8c054e2c23bdb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ebfbe14_fa99a22e",
        "filename": "av1/encoder/aq_cyclicrefresh.c",
        "patchSetId": 1
      },
      "lineNbr": 412,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-10-27T22:12:17Z",
      "side": 1,
      "message": "Can we avoid setting this counter to 0? There is the \"counter_encode_maxq_scene_change\" (counter from the last scene change) that can be used to adjust the refresh after scene_change (similar as is done on key frames with frames_since_key)?\n\nBecause to be consistent we would need to also reset the counter: rc-\u003eframes_to_key. But these will break the usage of periodic key frame request (if the user/application sets periodic key frames then they will not get the key frames where they expect/want them, because of the reset).",
      "parentUuid": "59c569b3_37acd760",
      "range": {
        "startLine": 412,
        "startChar": 12,
        "endLine": 412,
        "endChar": 28
      },
      "revId": "ca5be09053eccd18a594b33337b8c054e2c23bdb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cdad778_139c0adc",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 1
      },
      "lineNbr": 752,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-10-28T19:00:24Z",
      "side": 1,
      "message": "The current approach resets the rate control on scene changes (this is done in the function av1_encodedframe_overshoot_cbr()), before encoding the scene change. The rate_correction factor is also reset there (not to 1, but renormalized). And then we would let the rate_correction factor adjust to the over/undershoot of the encoded scene change.\n\nWondering if we should let the rate_corrrection adjust/react somewhat to the over/undershoot of the encoded scene change, instead of forcing to 1 always?",
      "revId": "ca5be09053eccd18a594b33337b8c054e2c23bdb",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}