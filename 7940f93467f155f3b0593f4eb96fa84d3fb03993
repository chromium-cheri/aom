{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "436658a4_958d1e91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31042
      },
      "writtenOn": "2022-08-31T22:47:56Z",
      "side": 1,
      "message": "This one gets us ~0.8% boost.",
      "revId": "7940f93467f155f3b0593f4eb96fa84d3fb03993",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40f30ffe_5b718fc5",
        "filename": "av1/encoder/arm/neon/wedge_utils_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 8471
      },
      "writtenOn": "2022-09-01T13:13:39Z",
      "side": 1,
      "message": "This and the following can be const.",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "7940f93467f155f3b0593f4eb96fa84d3fb03993",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b7fac70_c3040db1",
        "filename": "av1/encoder/arm/neon/wedge_utils_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 31042
      },
      "writtenOn": "2022-09-01T13:38:50Z",
      "side": 1,
      "message": "For my own understanding - having seen rather a lot of \"const\" around libvpx and libaom and thinking \"why?\" - is this suggestion because we\u0027re loading data that is const (as per the parameter type) or an attempt at something else... e.g. making the compiler\u0027s life easier in some way?",
      "parentUuid": "40f30ffe_5b718fc5",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "7940f93467f155f3b0593f4eb96fa84d3fb03993",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04ce0acd_99720e54",
        "filename": "av1/encoder/arm/neon/wedge_utils_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 8471
      },
      "writtenOn": "2022-09-01T14:40:52Z",
      "side": 1,
      "message": "For me, it is easier to follow the code.",
      "parentUuid": "2b7fac70_c3040db1",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "7940f93467f155f3b0593f4eb96fa84d3fb03993",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d447be9_558fd88b",
        "filename": "av1/encoder/arm/neon/wedge_utils_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-09-01T18:48:42Z",
      "side": 1,
      "message": "\u003e For me, it is easier to follow the code.\n\nMost of it is born out of readability. It doesn\u0027t affect the code, but can better separate what will be changed in larger functions.",
      "parentUuid": "04ce0acd_99720e54",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 18
      },
      "revId": "7940f93467f155f3b0593f4eb96fa84d3fb03993",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}