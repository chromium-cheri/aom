{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f6e6526c_489c053e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-11T22:35:41Z",
      "side": 1,
      "message": "Hi Jayasanker: I am backporting a commit of yours to the applejack branch (used for libaom 2.0.x releases). I\u0027d appreciate it if you could take a look at this CL.\n\nNote that the applejack branch does not have yjshen\u0027s first fix for this bug (commit fbf298a0fd553a9cbb8ffd5790ec4c1c8de1c201). Therefore we just need to modify the assertion.\n\nThank you!",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc090db9_a8716436",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14993
      },
      "writtenOn": "2020-12-12T09:24:28Z",
      "side": 1,
      "message": "Hi Wan-Teh,\n\nThe assertion could be simplified further as you have mentioned in the commit message. But as per the design, the SIMD module expects block_height to be greater than or equal to 4. In case assertion is modified, we feel that the assertion should contain above check for block_height as well.\n\nRegards,\nJayasanker.",
      "parentUuid": "f6e6526c_489c053e",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a33afb0a_b489bbf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-13T01:25:12Z",
      "side": 1,
      "message": "Thank you very much for your reply! I did not check the SIMD module very carefully when I wrote this CL. I have just checked the SIMD module carefully. I concluded that block_height must be \u003e\u003d 3 to avoid memory access errors. However, block_height \u003d\u003d 3 is probably a degenerate case. I guess that\u0027s why you said the SIMD module expects block_height to be \u003e\u003d 4. Please see my annotation of the source code and comment on my analysis.\n\nI will update the commit message base on your comments. Thank you!",
      "parentUuid": "bc090db9_a8716436",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "551e4d2a_57d05232",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14993
      },
      "writtenOn": "2020-12-14T12:10:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a33afb0a_b489bbf0",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34e1c9cb_f798b2d9",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-13T01:25:12Z",
      "side": 1,
      "message": "We load three rows upfront, without checking block_height. Therefore block_height must be \u003e\u003d 3 to avoid memory access errors.",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90ca0518_13dabc51",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 14993
      },
      "writtenOn": "2020-12-14T12:10:26Z",
      "side": 1,
      "message": "From code-review, block_height \u003e\u003d 3 looks sufficient. But we haven\u0027t done any tests to validate these observations.",
      "parentUuid": "34e1c9cb_f798b2d9",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67d27331_4c1f7083",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-17T00:12:34Z",
      "side": 1,
      "message": "Thank you for the confirmation! I have updated the commit message accordingly.",
      "parentUuid": "90ca0518_13dabc51",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5ff15bb_caf8e3ad",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-13T01:25:12Z",
      "side": 1,
      "message": "This check has a bug, right?\n\nOn the master branch, this line reads:\n\n      if (row \u003c\u003d block_height - 4) {",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84241277_1ac3c1d7",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-13T02:09:56Z",
      "side": 1,
      "message": "This bug was fixed on the master branch in this commit:\nhttps://aomedia-review.googlesource.com/c/aom/+/117221",
      "parentUuid": "c5ff15bb_caf8e3ad",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "933e9d94_51f788f0",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 14993
      },
      "writtenOn": "2020-12-14T12:10:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "84241277_1ac3c1d7",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a129c5e5_92bc5f21",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-12-13T01:25:12Z",
      "side": 1,
      "message": "Here we load one row per loop iteration. Since this load is guarded by the check at line 187, this does not increase the minimum block_height that avoids memory access errors.",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16834018_4949bb70",
        "filename": "av1/encoder/x86/temporal_filter_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 14993
      },
      "writtenOn": "2020-12-14T12:10:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a129c5e5_92bc5f21",
      "revId": "e155bd73b4d5cdb1bf3b75fabe46e1d15ace582f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}