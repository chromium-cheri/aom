Name: libyuv
URL: https://chromium.googlesource.com/libyuv/libyuv/
Version: 336e6fd25ba8eab72176925e5b6c71379f920207
License: BSD
License File: LICENSE

Description:
libyuv is an open source project that includes YUV conversion and scaling
functionality.

The optimized scaler in libyuv is used in multiple resolution encoder example,
which down-samples the original input video (f.g. 1280x720) a number of times
in order to encode multiple resolution bit streams.

Local Modifications:

diff --git a/third_party/libyuv/include/libyuv/cpu_id.h b/third_party/libyuv/include/libyuv/cpu_id.h
index 7a21587890..127574c29f 100644
--- a/third_party/libyuv/include/libyuv/cpu_id.h
+++ b/third_party/libyuv/include/libyuv/cpu_id.h
@@ -94,7 +94,7 @@ LIBYUV_API
 int RiscvCpuCaps(const char* cpuinfo_name);

 #ifdef __aarch64__
-#if __linux__
+#ifdef __linux__
 // On Linux, parse AArch64 features from getauxval(AT_HWCAP{,2}).
 LIBYUV_API
 int AArch64CpuCaps(unsigned long hwcap, unsigned long hwcap2);
diff --git a/third_party/libyuv/source/scale_uv.cc b/third_party/libyuv/source/scale_uv.cc
index b9db64eef1..18ad43491a 100644
--- a/third_party/libyuv/source/scale_uv.cc
+++ b/third_party/libyuv/source/scale_uv.cc
@@ -686,6 +686,7 @@ static void ScaleUVLinearUp2(int src_width,
   int dy;

   // This function can only scale up by 2 times horizontally.
+  (void)src_width;
   assert(src_width == ((dst_width + 1) / 2));

 #ifdef HAS_SCALEUVROWUP2_LINEAR_SSSE3
@@ -744,6 +745,7 @@ static void ScaleUVBilinearUp2(int src_width,
   int x;

   // This function can only scale up by 2 times.
+  (void)src_width;
   assert(src_width == ((dst_width + 1) / 2));
   assert(src_height == ((dst_height + 1) / 2));

@@ -805,6 +807,7 @@ static void ScaleUVLinearUp2_16(int src_width,
   int dy;

   // This function can only scale up by 2 times horizontally.
+  (void)src_width;
   assert(src_width == ((dst_width + 1) / 2));

 #ifdef HAS_SCALEUVROWUP2_LINEAR_16_SSE41
@@ -857,6 +860,7 @@ static void ScaleUVBilinearUp2_16(int src_width,
   int x;

   // This function can only scale up by 2 times.
+  (void)src_width;
   assert(src_width == ((dst_width + 1) / 2));
   assert(src_height == ((dst_height + 1) / 2));

diff --git a/third_party/libyuv/source/row_sve.cc b/third_party/libyuv/source/row_sve.cc
index 6ab5e68848..a6da07b983 100644
--- a/third_party/libyuv/source/row_sve.cc
+++ b/third_party/libyuv/source/row_sve.cc
@@ -1052,8 +1052,8 @@ void YUY2ToARGBRow_SVE2(const uint8_t* src_yuy2,
                         uint8_t* dst_argb,
                         const struct YuvConstants* yuvconstants,
                         int width) {
-  uint32_t nv_uv_start = 0x0301'0301U;
-  uint32_t nv_uv_step = 0x0404'0404U;
+  uint32_t nv_uv_start = 0x03010301U;
+  uint32_t nv_uv_step = 0x04040404U;
   uint64_t vl;
   asm("cnth %0" : "=r"(vl));
   int width_last_y = width & (vl - 1);
@@ -1105,8 +1105,8 @@ void UYVYToARGBRow_SVE2(const uint8_t* src_uyvy,
                         uint8_t* dst_argb,
                         const struct YuvConstants* yuvconstants,
                         int width) {
-  uint32_t nv_uv_start = 0x0200'0200U;
-  uint32_t nv_uv_step = 0x0404'0404U;
+  uint32_t nv_uv_start = 0x02000200U;
+  uint32_t nv_uv_step = 0x04040404U;
   uint64_t vl;
   asm("cnth %0" : "=r"(vl));
   int width_last_y = width & (vl - 1);
