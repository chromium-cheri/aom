{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e6e846f_2f7ff58c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "This is a partial review, mostly focusing on the API. I still plan to carefully review the implementation, but wanted to send these comments off right away.",
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd2a33f0_1efa6ce9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T20:15:06Z",
      "side": 1,
      "message": "The implementation looks good, definitely much clearer than the original in pass2_strategy. I\u0027ve just got one suggestion for a small refactor which might make it even easier to read.",
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a571d6_ad591ac8",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "Maybe add a comment that this is used before division to ensure that the divisor isn\u0027t zero or dangerously close to zero.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 47
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755f5cef_9a71e4c8",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "Typo: modify, not moddify.",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 18
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b05d8850_08fdd05d",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "755f5cef_9a71e4c8",
      "range": {
        "startLine": 24,
        "startChar": 17,
        "endLine": 24,
        "endChar": 18
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dadcd588_47b5e60c",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1a571d6_ad591ac8",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 47
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c545253_ff18177e",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T20:15:06Z",
      "side": 1,
      "message": "This is only used in one place, and may as well be moved down to right before it\u0027s used.",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 191,
        "endChar": 50
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7affc4a9_834a548b",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c545253_ff18177e",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 191,
        "endChar": 50
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9642a4f2_f59ada31",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T20:15:06Z",
      "side": 1,
      "message": "Given that you\u0027ve already rearranged this code a lot from the original test_candidate_kf, you could go one step farther and move lines 213-253 into a helper function. The only args it would need are this_stats, last_stats, and next_stats as args (similar to detect_slide_transition).\n\nThen you wouldn\u0027t need test_this_candidate, and could just replace lines 199-257 with:\n  if (this_stats.pcnt_inter \u003c kVeryLowInterThreshold ||\n      detect_slide_transition(this_stats, last_stats, next_stats) ||\n      should_test_candidate(this_stats, last_stats, next_stats)) {",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 253,
        "endChar": 68
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98d3fff9_9608bd9b",
        "filename": "av1/ratectrl_qmode.cc",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9642a4f2_f59ada31",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 253,
        "endChar": 68
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a226853c_31075a68",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "This is a breaking API change which will require a change to third_party/webm_hw_bigwave/software/src/common/encratecontrol_qmode.cc before it can be brought back into google3. This will require:\n- A CL to https://webm.googlesource.com including (a) the change to encratecontrol_qmode and (b) this CL and any of its dependencies, cherry picked from aom, followed by\n- A google3 CL which includes (a) changes from webm and (b) this CL and any of its dependencies, cherry picked from aom\n\nPlease let me know when you\u0027re about to submit this, so that I can do those things ASAP afterward. We should probably also let whoever is on rotation for updating google3 know that they shouldn\u0027t try to do the update in the interval while those changes are pending (I believe it\u0027s currently chengchen@).\n\nIt\u0027s also going to require a change to RateControlQModeTest.TestMock (http://cs/aom/test/ratectrl_qmode_test.cc?l\u003d395), but that\u0027s easier because you can just do it in this CL.\n\nI think a good lesson going forward is that we should prefer structs over typedefs in the API, because it\u0027s easier to make non-breaking changes by adding fields.",
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c8d7fdc_825b2501",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-14T16:52:45Z",
      "side": 1,
      "message": "Actually, here\u0027s a better idea (hat tip to jdorfman@):\nTemporarily add a functions supporting implicit conversion to and from vector, and then the downstream code can work with both versions:\n\n  // TODO(b/221916304): Remove when no longer needed downstream.\n  FirstpassInfo() \u003d default;\n  FirstpassInfo(const std::vector\u003cFIRSTPASS_STATS\u003e stats): stats_list(stats) {}\n  operator std::vector\u003cFIRSTPASS_STATS\u003e() { return stats_list; }",
      "parentUuid": "a226853c_31075a68",
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97eea056_ac8c553b",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Good idea.\nDone!",
      "parentUuid": "8c8d7fdc_825b2501",
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f2f4f71_5f9d3cd6",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "Most of the fields in FIRSTPASS_STATS are already assumed to be normalized to 16x16 MB\u0027s. Rather than allowing this to be variable, perhaps the API should just require  this to be 16? That would reduce the risk of overlooking places where it\u0027s assumed either implicitly or explicitly.",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 21
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62d474b5_4b97bfd4",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "I think there is a high probability that we might use unit block size that is bigger than 16x16. For example, when the video has 4k resolution, it doesn\u0027t make sense to use 16x16 block in my opinion.",
      "parentUuid": "6f2f4f71_5f9d3cd6",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 21
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f0115f3_b1377c0b",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:04:07Z",
      "side": 1,
      "message": "(in the future)",
      "parentUuid": "62d474b5_4b97bfd4",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 21
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06163527_9f9e3000",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-15T18:19:27Z",
      "side": 1,
      "message": "How do you expect this to be used? So far nothing is using it.",
      "parentUuid": "5f0115f3_b1377c0b",
      "range": {
        "startLine": 99,
        "startChar": 6,
        "endLine": 99,
        "endChar": 21
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b273e295_7c4e5274",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "How about calling this num_mbs_16x16, for consistency with normalize_firstpass_stats, and to make it extra clear what it means?",
      "range": {
        "startLine": 102,
        "startChar": 6,
        "endLine": 102,
        "endChar": 22
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e65374b_ce555041",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 102,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "See the comment above.",
      "parentUuid": "b273e295_7c4e5274",
      "range": {
        "startLine": 102,
        "startChar": 6,
        "endLine": 102,
        "endChar": 22
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c17f8e_5dae6b88",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-04-13T13:52:39Z",
      "side": 1,
      "message": "Please also rename the argument in MockRateControlQMode (in test/mock_ratectrl_qmode.h).",
      "range": {
        "startLine": 131,
        "startChar": 27,
        "endLine": 131,
        "endChar": 41
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd37831c_43723947",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 5250
      },
      "writtenOn": "2022-04-15T18:01:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3c17f8e_5dae6b88",
      "range": {
        "startLine": 131,
        "startChar": 27,
        "endLine": 131,
        "endChar": 41
      },
      "revId": "bdbd9fe001e4c16ba5d54f238d92d7e278ccac59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}