{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5fe5d2c9_0bc5c596",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-04-05T16:39:19Z",
      "side": 1,
      "message": "Here are the compiler warning and error messages:\n\n```\naom/aom_dsp/flow_estimation/x86/disflow_sse4.c: In function ‘compute_flow_error’:\naom/aom_dsp/flow_estimation/x86/disflow_sse4.c:230:9: warning: implicit declaration of function ‘_mm_loadu_si64’; did you mean ‘_mm_loadl_epi64’? [-Wimplicit-function-declaration]\n         _mm_loadu_si64((__m128i *)\u0026src[(y + i) * stride + x]);\n         ^~~~~~~~~~~~~~\n         _mm_loadl_epi64\naom/aom_dsp/flow_estimation/x86/disflow_sse4.c:230:9: error: incompatible types when initializing type ‘__m128i’ {aka ‘__vector(2) long long int’} using type ‘int’\n[176/615] Building C ob\n```",
      "revId": "58aa000c18e0702d7ffd46fd5551eb9bc0708766",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f7b9460_4a0f8ab9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 29052
      },
      "writtenOn": "2023-04-05T16:46:12Z",
      "side": 1,
      "message": "Looks good to me - as far as I can tell, these compile to the same instruction, so the generated code should be the same.",
      "revId": "58aa000c18e0702d7ffd46fd5551eb9bc0708766",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c33644c7_e51a3a41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-04-05T16:50:17Z",
      "side": 1,
      "message": "Thank you for checking this. That\u0027s also what I found on the Web. Also, libaom is apparently avoiding _mm_loadu_si64. There are many calls to _mm_loadl_epi64 but this is the only call to _mm_loadu_si64.",
      "parentUuid": "2f7b9460_4a0f8ab9",
      "revId": "58aa000c18e0702d7ffd46fd5551eb9bc0708766",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}