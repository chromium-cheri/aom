{
  "comments": [
    {
      "key": {
        "uuid": "1f49cc01_a1d77843",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-10T19:11:18Z",
      "side": 1,
      "message": "Not sure why this is renamed to adjust (the comment still says it computes the filter threshold).  Now that all it does is do a table look up, it may make more sense to create a #define macro for this (which is essentially what INLINE does).",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_840daa9d",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5045
      },
      "writtenOn": "2016-10-10T21:00:27Z",
      "side": 1,
      "message": "I think inline functions are less error-prone than macros. Unlike Daala, AV1 does allow inline.",
      "parentUuid": "1f49cc01_a1d77843",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_a49466f0",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-11T17:52:15Z",
      "side": 1,
      "message": "Completely agree, INLINE is fine.",
      "parentUuid": "1f49cc01_840daa9d",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_c1dc046a",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-10T19:11:18Z",
      "side": 1,
      "message": "Maybe you should rename this to just thresh[] as there is no longer a second array that captures the skip information.",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_a4f54669",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 5045
      },
      "writtenOn": "2016-10-10T21:00:27Z",
      "side": 1,
      "message": "It\u0027s thresh 2 because it\u0027s only used for the second filter.",
      "parentUuid": "1f49cc01_c1dc046a",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_0453da6a",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-10T21:07:10Z",
      "side": 1,
      "message": "Perhaps then it should be called thresh_orth or something that indicates it is for the second filter.",
      "parentUuid": "1f49cc01_a4f54669",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_e14100f5",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-10T19:11:18Z",
      "side": 1,
      "message": "It is confusing as to why there are two loops here that do nearly the same thing.  After reading this code for a while, I realized it was because subsequent calls to od_dering (for the other color planes (pli !\u003d 0) assume that dir[][] has been computed through a side effect of the first call!\n\nThis has a serious consequence that in the encoder search, looking for the optimal deringing threshold actually calls the directional search, od_dir_find8(), over and over again for each level.\n\nPlease separate these concerns and require that calls to od_dering() have a fully initialized dir[][] array.  It will you to simplify this code, and the encoder search will be much faster.",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_240a9684",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 5045
      },
      "writtenOn": "2016-10-10T21:00:27Z",
      "side": 1,
      "message": "The patch is not a regression with respect to od_dir_find8(), it\u0027s just refactoring the loops. I\u0027m expecting many more changes to make the decoder faster and moving od_dir_find8() out of od_dering() at this point would just make things more complicated.",
      "parentUuid": "1f49cc01_e14100f5",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f49cc01_6442de96",
        "filename": "av1/common/od_dering.c",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 5046
      },
      "writtenOn": "2016-10-10T21:07:10Z",
      "side": 1,
      "message": "See my patch https://aomedia-review.googlesource.com/#/c/4801 which moves the computation of od_dir_find8() out of od_dering().  I would simplify this computation and allow you to only have one place where filter_dering_direction is called.",
      "parentUuid": "1f49cc01_240a9684",
      "revId": "4cfbb3cb5812876bc84f8d061355a745fe7a186d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}