{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb428490_550a1dd8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-14T17:32:26Z",
      "side": 1,
      "message": "Hi Yunqing,\nWe have identified few variables in pack bitstream functions which can potentially create race condition in multithreading. Hence, in this CL we have moved such variables to a thread specific memory. Please check the details below,\n* In order to make the computations of interp_filter_selected, max_mv_magnitude and coefficient_size variables thread safe, the variables are accessed from ThreadData instead of AV1_COMP. After bitstream preparation the variables are collated to AV1_COMP structure.\n* In order to make cm-\u003eerror structure thread safe, the structure is modified to access from MACROBLOCK.\nThis patch is tested locally for bit match. Please review.\nThank you.\n",
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "017c88f0_9219b4b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "Are we writing each tile\u0027s bitstream into a temp buffer first, and then copy them to right place in bitstream?",
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b1f4556_5d1c55ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "Hi Yunqing,\nThank you for the review.\nPlease check our comments.",
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "900024cd_8d6c6017",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "No, We did not introduce a temporary buffer to store bitstream.\nInstead we divided the bitstream buffer based on the area of the tile. After bitstream preparation, all the buffers are collated using memmove. \nWe felt that size of the bitstream buffer is sufficient for this design. Also, the buffer changes are applicable only for the multithread design.",
      "parentUuid": "017c88f0_9219b4b7",
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e236e6c0_a4b3f3ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-15T18:53:55Z",
      "side": 1,
      "message": "Thanks for the reply.",
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24071643_871e15ed",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 2917,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "Looks like we have xd-\u003eerror_info which is used in decoder. Could that be used here or use x-\u003eerror_info?",
      "range": {
        "startLine": 2917,
        "startChar": 25,
        "endLine": 2917,
        "endChar": 26
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e26cc930_7336530e",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 2917,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "As per our understanding xd structure is specific to decoder. So we have introduced ‘error_info’ in an encoder specific structure (MACROBLOCK).",
      "parentUuid": "24071643_871e15ed",
      "range": {
        "startLine": 2917,
        "startChar": 25,
        "endLine": 2917,
        "endChar": 26
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deedf337_76fdbe5c",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 2917,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-15T18:53:55Z",
      "side": 1,
      "message": "ok. If you prefer to add it in macroblock, like we discussed, could you move x-\u003eerror_info initialization to the beginning of encoder, so it will work if others use it later. This can be done in another CL.",
      "parentUuid": "e26cc930_7336530e",
      "range": {
        "startLine": 2917,
        "startChar": 25,
        "endLine": 2917,
        "endChar": 26
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8a79aa1_df258b69",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 2917,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-16T16:32:59Z",
      "side": 1,
      "message": "We will submit a CL to move x-\u003eerror_info initialization to the beginning of encoder.\nThank you.",
      "parentUuid": "deedf337_76fdbe5c",
      "range": {
        "startLine": 2917,
        "startChar": 25,
        "endLine": 2917,
        "endChar": 26
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3f6784_192cb6ef",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3559,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "In-paralleling bitstream packing also supports large scale tile case?",
      "range": {
        "startLine": 3559,
        "startChar": 2,
        "endLine": 3559,
        "endChar": 27
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e5d4f83_ac810181",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3559,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "No, multithread support is not planned for large scale tile.",
      "parentUuid": "fd3f6784_192cb6ef",
      "range": {
        "startLine": 3559,
        "startChar": 2,
        "endLine": 3559,
        "endChar": 27
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d0dff8f_942c0b81",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3559,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-15T18:53:55Z",
      "side": 1,
      "message": "That is fine.",
      "parentUuid": "9e5d4f83_ac810181",
      "range": {
        "startLine": 3559,
        "startChar": 2,
        "endLine": 3559,
        "endChar": 27
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c8d8e4b_b274bb4f",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3584,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "Is this needed in other part of the encoder? If true, should it be assigned during encoder initialization?",
      "range": {
        "startLine": 3584,
        "startChar": 6,
        "endLine": 3584,
        "endChar": 41
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f551317c_8d64e386",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3584,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "This change may not be needed in other part of the encoder as ‘error_info’ is not used within the scope of multithreading except pack bitstream.",
      "parentUuid": "9c8d8e4b_b274bb4f",
      "range": {
        "startLine": 3584,
        "startChar": 6,
        "endLine": 3584,
        "endChar": 41
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15fd3a03_f74a7f3e",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3584,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-15T18:53:55Z",
      "side": 1,
      "message": "see above comment",
      "parentUuid": "f551317c_8d64e386",
      "range": {
        "startLine": 3584,
        "startChar": 6,
        "endLine": 3584,
        "endChar": 41
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41026f10_cf75c0ce",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3799,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "Should these be moved to ethread.c or these are different from other thread related functions?",
      "range": {
        "startLine": 3781,
        "startChar": 0,
        "endLine": 3799,
        "endChar": 0
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "106c6c8d_0cabdf96",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3799,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "We are not planning to move these functions to ethread.c as it will be used by functions of both single thread and multithread implementations.",
      "parentUuid": "41026f10_cf75c0ce",
      "range": {
        "startLine": 3781,
        "startChar": 0,
        "endLine": 3799,
        "endChar": 0
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bb69033_2aa46b90",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3799,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-15T18:53:55Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "106c6c8d_0cabdf96",
      "range": {
        "startLine": 3781,
        "startChar": 0,
        "endLine": 3799,
        "endChar": 0
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d696df0_c8908d5f",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3820,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-14T23:06:55Z",
      "side": 1,
      "message": "This function calling is also needed for single thread case, right? Same for accumulate_pack_bs_thread_data()?",
      "range": {
        "startLine": 3820,
        "startChar": 2,
        "endLine": 3820,
        "endChar": 38
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f04e4f90_85a3d7dc",
        "filename": "av1/encoder/bitstream.c",
        "patchSetId": 7
      },
      "lineNbr": 3820,
      "author": {
        "id": 9101
      },
      "writtenOn": "2021-04-15T04:24:16Z",
      "side": 1,
      "message": "Yeah, these functions are used in following scenarios,\n* Pack bitstream of default tile (Single thread)\n* Pack bitstream of default tile (Multi-thread)\n* Pack bitstream of large scale tile (Single thread)",
      "parentUuid": "0d696df0_c8908d5f",
      "range": {
        "startLine": 3820,
        "startChar": 2,
        "endLine": 3820,
        "endChar": 38
      },
      "revId": "523cdb53f2209a112b2c4bf8ba3a0ba72cf2acc8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}