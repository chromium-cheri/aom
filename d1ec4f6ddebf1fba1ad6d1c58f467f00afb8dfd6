{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f56303d6_8da9e669",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-04-03T22:10:46Z",
      "side": 1,
      "message": "as discussed offline, this can overflow too as we\u0027re not currently restricting the range of `d_w` or `d_h` which are `unsigned int`.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d6c688d_dd250b0a",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "The type of `s` changed from `unsigned int` to `uint16_t` to avoid the unsigned integer overflows.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6580e78c_2b6cd9a4",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:35:49Z",
      "side": 1,
      "message": "There is a typo in my comment. It should read:\n\nThe type of s changed from `unsigned int` to `uint64_t` to avoid the unsigned integer overflows.",
      "parentUuid": "0d6c688d_dd250b0a",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f83271f0_8c34191b",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "The type of `stride_in_bytes` changed from `unsigned int` to `int`. See my comment at line 161.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60a64c16_a053687a",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 133,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "Before we allocate `img-\u003eimg_data`, we ensure `alloc_size` can be expressed in `size_t`. This property is used by the changes in `aom_img_set_rect()` below.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "514263ed_a6a42852",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "Note that `stride_in_bytes` is assigned to `img-\u003estride[AOM_PLANE_Y]`, which is an `int`. So `stride_in_bytes` canot be greater than `INT_MAX`.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5516daa_5441d872",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 3
      },
      "lineNbr": 235,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "If we arrive in this function (`aom_img_set_rect`), we have allocated `img-\u003eimg_data` successfully. So we know `size_t` is large enough for the expressions below. Therefore it suffices to cast to `size_t`. No need to cast to `uint64_t`.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e63efb40_a414962b",
        "filename": "test/aom_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-04-03T22:10:46Z",
      "side": 1,
      "message": "NV12 would be good to add for completeness",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc5208da_a37dc354",
        "filename": "test/aom_image_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-04-03T21:30:46Z",
      "side": 1,
      "message": "This is the test case given in b/332382766. I added the other test cases above to trigger more unsigned integer overflows.",
      "revId": "d1ec4f6ddebf1fba1ad6d1c58f467f00afb8dfd6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}