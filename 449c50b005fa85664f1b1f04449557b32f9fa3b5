{
  "comments": [
    {
      "key": {
        "uuid": "06b823a3_d4220e28",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-20T17:24:09Z",
      "side": 1,
      "message": "Without this, I get a compiler warning:\n\n/usr/local/google/home/wtc/tmp/oss-fuzz-10555/aom/aom_util/aom_thread.c:48:15: warning: \n      implicit declaration of function \u0027pthread_setname_np\u0027 is invalid in C99\n      [-Wimplicit-function-declaration]\n    int res \u003d pthread_setname_np(pthread_self(), thread_name);\n              ^\n\nThis is because pthread_name_np() is declared as follows in the pthread.h header in glibc:\n\n#ifdef __USE_GNU\n/* Get thread name visible in the kernel and its interfaces.  */\nextern int pthread_getname_np (pthread_t __target_thread, char *__buf,\n                               size_t __buflen)\n     __THROW __nonnull ((2));\n\n/* Set thread name visible in the kernel and its interfaces.  */\nextern int pthread_setname_np (pthread_t __target_thread, const char *__name)\n     __THROW __nonnull ((2));\n#endif\n\nI found the solution in a StackOverflow article:\n\nhttps://stackoverflow.com/questions/22014397/c-implicit-declaration-of-the-function-pthread-timedjoin-np",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "710969b1_f1b3b286",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-20T17:31:06Z",
      "side": 1,
      "message": "The example from the pthread_setname_np() man page agrees with the fix:\n\nhttp://man7.org/linux/man-pages/man3/pthread_setname_np.3.html#EXAMPLE",
      "parentUuid": "06b823a3_d4220e28",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93fcff93_4d0e871f",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-20T17:51:33Z",
      "side": 1,
      "message": "\u003e The example from the pthread_setname_np() man page agrees with the fix:\n\u003e \n\u003e http://man7.org/linux/man-pages/man3/pthread_setname_np.3.html#EXAMPLE\n\nThanks! I switched to the exact form of #define in the man page.",
      "parentUuid": "710969b1_f1b3b286",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eeb2dd0f_fe7ab425",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 5435
      },
      "writtenOn": "2018-09-20T17:54:59Z",
      "side": 1,
      "message": "Should it be guarded with an if linux/android condition? What happens on win/mac builds?",
      "parentUuid": "710969b1_f1b3b286",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e090407b_b069c960",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-20T18:00:52Z",
      "side": 1,
      "message": "Defining _GNU_SOURCE should be harmless on other platforms.\n\nPlease let me know if you want me to add #ifdef __linux__.\n\nNote: Originally I had #ifdef __GLIBC__, but that didn\u0027t work because __GLIBC__ is defined by the act of including a glibc header.",
      "parentUuid": "eeb2dd0f_fe7ab425",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 21
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdcaf5e7_490aab54",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-20T17:31:06Z",
      "side": 1,
      "message": "you\u0027ll need to do something more than assert on res (because NDEBUG).",
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19a371dd_b5753615",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-20T17:51:33Z",
      "side": 1,
      "message": "Done. Thank you! I decided to just ignore the return value of pthread_setname_np().\n\nI verified that if I declare thread_name as 17 bytes, then pthread_setname_np() returns 34 (ERANGE) when I try to set the name to \"aom frame worker\".\n\nOr do you think I should do the following?\n\n    assert(res \u003d\u003d 0);\n    (void)res;",
      "parentUuid": "bdcaf5e7_490aab54",
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "148e045b_ae7f7be4",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-09-20T18:10:32Z",
      "side": 1,
      "message": "Probably better to void it explicitly. I\u0027m finding conflicting information about whether or not -Wunused-result is turned on by default. I think the default state of the flag may vary by gcc/clang version and platform (host and target).",
      "parentUuid": "19a371dd_b5753615",
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0ad5085_c92d7f2a",
        "filename": "aom_util/aom_thread.c",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-09-20T18:23:38Z",
      "side": 1,
      "message": "Tom: I didn\u0027t add a (void) cast to the pthread_setname_np() call because none of the\npthread_xxx calls here have a (void) cast.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 66,
        "endChar": 49
      },
      "revId": "449c50b005fa85664f1b1f04449557b32f9fa3b5",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}