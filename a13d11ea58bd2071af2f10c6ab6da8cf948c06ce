{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0477cd43_1970b2f6",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-08-22T18:55:00Z",
      "side": 1,
      "message": "Is this a TODO?",
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af85be27_f7d1d805",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-08-23T11:41:54Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0477cd43_1970b2f6",
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcb09637_6bdf7a5b",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 314,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-08-22T18:55:00Z",
      "side": 1,
      "message": "this can just be merged to line 311, the local variable isn\u0027t necessary given the scope.",
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8aaa3cd0_90174abe",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 314,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-08-22T18:56:10Z",
      "side": 1,
      "message": "\u003e this can just be merged to line 311, the local variable isn\u0027t necessary given the scope.\n\nActually given the need to unlock the mutex this might be better. I was thinking of a scoped lock.",
      "parentUuid": "fcb09637_6bdf7a5b",
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "879ca128_ff8996b4",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 352,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-22T23:23:56Z",
      "side": 1,
      "message": "Ok to hard code 3 here?",
      "range": {
        "startLine": 352,
        "startChar": 28,
        "endLine": 352,
        "endChar": 29
      },
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e9b398f_17143071",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 352,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-08-23T11:41:54Z",
      "side": 1,
      "message": "Replaced 3 with `MAX_MB_PLANE` here and at other applicable instances.",
      "parentUuid": "879ca128_ff8996b4",
      "range": {
        "startLine": 352,
        "startChar": 28,
        "endLine": 352,
        "endChar": 29
      },
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "672da133_801f25a2",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-22T23:23:56Z",
      "side": 1,
      "message": "If main thread has error, could it return here directly?",
      "range": {
        "startLine": 365,
        "startChar": 4,
        "endLine": 365,
        "endChar": 14
      },
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87790ca4_956bb181",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 365,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-08-23T11:41:54Z",
      "side": 1,
      "message": "We would still need to invoke `winterface-\u003esync()` on other worker threads which would be in WORK state before exiting. Hence `aom_internal_error()` is invoked towards the end of the function.",
      "parentUuid": "672da133_801f25a2",
      "range": {
        "startLine": 365,
        "startChar": 4,
        "endLine": 365,
        "endChar": 14
      },
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "409090e2_e085f411",
        "filename": "av1/common/thread_common.c",
        "patchSetId": 6
      },
      "lineNbr": 471,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-22T23:23:56Z",
      "side": 1,
      "message": "So xd-\u003eerror_info is used in ST case, which is different from MT case.",
      "range": {
        "startLine": 471,
        "startChar": 36,
        "endLine": 471,
        "endChar": 50
      },
      "revId": "a13d11ea58bd2071af2f10c6ab6da8cf948c06ce",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}