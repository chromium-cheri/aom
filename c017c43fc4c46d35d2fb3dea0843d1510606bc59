{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0651a445_41a53e7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Thanks for the change, Lin! I left some comments. One thing that is important is that it feels like many allocations in the code can be avoided / reduced. So please check my comments and see if it is feasible to do that.",
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90aa2115_b7e5d550",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 31132
      },
      "writtenOn": "2023-02-08T23:07:00Z",
      "side": 1,
      "message": "Hi Bohan, thanks for the suggestions on memory allocations. I was planning to make a new CL to address it as you mentioned in my previous CL. Yes, some of them can be avoided or taken out of the function. I\u0027ll see if the changes could fit in this CL, or open a new one.",
      "parentUuid": "0651a445_41a53e7c",
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e806b2_a6ae9afe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-21T22:59:56Z",
      "side": 1,
      "message": "Is this CL still valid, or obsolete?",
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ba35638_10be49c7",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 6
      },
      "lineNbr": 1393,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "*cpi-\u003esaliency_map",
      "range": {
        "startLine": 1393,
        "startChar": 61,
        "endLine": 1393,
        "endChar": 68
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e8ca99_cfa91827",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 181,
      "author": {
        "id": 5022
      },
      "writtenOn": "2023-02-11T00:52:14Z",
      "side": 1,
      "message": "downsampled map?",
      "range": {
        "startLine": 181,
        "startChar": 14,
        "endLine": 181,
        "endChar": 21
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e929b21e_781aea33",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 332,
      "author": {
        "id": 5022
      },
      "writtenOn": "2023-02-11T00:52:14Z",
      "side": 1,
      "message": "coding style convention usually uses ++k",
      "range": {
        "startLine": 332,
        "startChar": 25,
        "endLine": 332,
        "endChar": 28
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb316233_35407d7c",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 350,
      "author": {
        "id": 5022
      },
      "writtenOn": "2023-02-11T00:52:14Z",
      "side": 1,
      "message": "replace fprintf with\n\n      aom_internal_error(cm-\u003eerror, AOM_CODEC_MEM_ERROR,\n                         \"Failed to allocate memory for output buffer\");",
      "range": {
        "startLine": 350,
        "startChar": 6,
        "endLine": 350,
        "endChar": 13
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2da58c6_1790f1be",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 789,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Do you think we can redesign this function (and funtions calling this) to just chang input in place?",
      "range": {
        "startLine": 787,
        "startChar": 8,
        "endLine": 789,
        "endChar": 32
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "996a2eaf_fdf143d6",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 789,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:56:14Z",
      "side": 1,
      "message": "*change the input in place",
      "parentUuid": "d2da58c6_1790f1be",
      "range": {
        "startLine": 787,
        "startChar": 8,
        "endLine": 789,
        "endChar": 32
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0cb169c_9e8fb8b3",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 993,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "Also consider turning into an array to be precise",
      "range": {
        "startLine": 990,
        "startChar": 24,
        "endLine": 993,
        "endChar": 34
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "172df38d_a177cb54",
        "filename": "av1/encoder/saliency_map.c",
        "patchSetId": 6
      },
      "lineNbr": 1003,
      "author": {
        "id": 7525
      },
      "writtenOn": "2023-02-08T21:43:05Z",
      "side": 1,
      "message": "In general it\u0027s better to avoid allocating in a function, when you can do that outside of it and just pass in the pointer",
      "range": {
        "startLine": 1003,
        "startChar": 2,
        "endLine": 1003,
        "endChar": 32
      },
      "revId": "c017c43fc4c46d35d2fb3dea0843d1510606bc59",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}