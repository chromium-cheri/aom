{
  "comments": [
    {
      "key": {
        "uuid": "580386c1_a30852f0",
        "filename": "av1/common/reconinter.c",
        "patchSetId": 2
      },
      "lineNbr": 1009,
      "author": {
        "id": 5035
      },
      "writtenOn": "2017-09-13T23:56:06Z",
      "side": 1,
      "message": "this uninitialized array is used as operand in other function, build_compound_seg_mask_d32(), and I was not sure the author really meant with zero valued mask there.",
      "range": {
        "startLine": 1009,
        "startChar": 59,
        "endLine": 1009,
        "endChar": 67
      },
      "revId": "67c04d42eea9b6e5f9b92c1b59cb266d64d295f3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21d8df61_33f652d2",
        "filename": "av1/common/reconinter.c",
        "patchSetId": 2
      },
      "lineNbr": 1009,
      "author": {
        "id": 7560
      },
      "writtenOn": "2017-09-14T09:07:37Z",
      "side": 1,
      "message": "You\u0027re right that this is wrong (and it\u0027s my fault!).\n\nI don\u0027t know whether it\u0027s better to just add the memset back in or whether we should check for the do_average flag in diffwtd_mask_d32: after all, we actually know that we\u0027re comparing src0 with all zeros, so maybe it\u0027s a bit silly to set an array of zeros, load its values up and subtract them from something else...",
      "parentUuid": "580386c1_a30852f0",
      "range": {
        "startLine": 1009,
        "startChar": 59,
        "endLine": 1009,
        "endChar": 67
      },
      "revId": "67c04d42eea9b6e5f9b92c1b59cb266d64d295f3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23987b6d_d1d72017",
        "filename": "av1/common/reconinter.c",
        "patchSetId": 2
      },
      "lineNbr": 1009,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-14T13:18:37Z",
      "side": 1,
      "message": "This is a complicated code base and as such, I don\u0027t think that anyone is clearly at fault here.\n\nMy local testing showed that the values got assigned in av1_convolve_2d_facade() which is called in av1_make_inter_predictor (at line 995) so build_compound_seg_mask_d32 did not actually read uninitialized data. The static analysis got confused because the condition was not constant. conv_params is passed in a lot and the rounding could be changed (which I assume cannot be the case).\n\nI recommend we keep the fix (using a const condition) as-is for now and that Rupert make another patch with a clean fix that will include high and low bit depth. How does that sound?",
      "parentUuid": "21d8df61_33f652d2",
      "range": {
        "startLine": 1009,
        "startChar": 59,
        "endLine": 1009,
        "endChar": 67
      },
      "revId": "67c04d42eea9b6e5f9b92c1b59cb266d64d295f3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}