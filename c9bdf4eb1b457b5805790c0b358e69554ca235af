{
  "comments": [
    {
      "key": {
        "uuid": "cd2f3751_d93e360c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5610
      },
      "writtenOn": "2020-10-01T16:55:12Z",
      "side": 1,
      "message": "I think the principal of this seems like it might be a good ide so that we can work with the encode either the denoised or raw frame. Whether it is a good idea to encode from the noisy source but still apply the noise synthesis at the decoder remains to be seen and may be very content and Q dependent.",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28acbbeb_15a7f79f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5610
      },
      "writtenOn": "2020-10-01T16:56:40Z",
      "side": 1,
      "message": "Do you have any evidence of cases where this is beneficial?",
      "parentUuid": "cd2f3751_d93e360c",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a43a6308_6f911fe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 17992
      },
      "writtenOn": "2020-10-05T03:08:53Z",
      "side": 1,
      "message": "It seems to help in some cases. One is shown here (cq\u003d25, dnl\u003d30) https://slow.pics/c/pm3051Qc. It also helps mitigate https://bugs.chromium.org/p/aomedia/issues/detail?id\u003d2816 since the noise is synthesised over frames with it possibly removed. \n\nI\u0027ll work on getting some more examples and trying to determine a q threshold for at least a source.",
      "parentUuid": "28acbbeb_15a7f79f",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}