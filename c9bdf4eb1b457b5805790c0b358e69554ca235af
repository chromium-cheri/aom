{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd2f3751_d93e360c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5610
      },
      "writtenOn": "2020-10-01T16:55:12Z",
      "side": 1,
      "message": "I think the principal of this seems like it might be a good ide so that we can work with the encode either the denoised or raw frame. Whether it is a good idea to encode from the noisy source but still apply the noise synthesis at the decoder remains to be seen and may be very content and Q dependent.",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28acbbeb_15a7f79f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5610
      },
      "writtenOn": "2020-10-01T16:56:40Z",
      "side": 1,
      "message": "Do you have any evidence of cases where this is beneficial?",
      "parentUuid": "cd2f3751_d93e360c",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a43a6308_6f911fe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 17992
      },
      "writtenOn": "2020-10-05T03:08:53Z",
      "side": 1,
      "message": "It seems to help in some cases. One is shown here (cq\u003d25, dnl\u003d30) https://slow.pics/c/pm3051Qc. It also helps mitigate https://bugs.chromium.org/p/aomedia/issues/detail?id\u003d2816 since the noise is synthesised over frames with it possibly removed. \n\nI\u0027ll work on getting some more examples and trying to determine a q threshold for at least a source.",
      "parentUuid": "28acbbeb_15a7f79f",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1071d5a4_0da7127c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 21182
      },
      "writtenOn": "2020-10-13T18:28:08Z",
      "side": 1,
      "message": "It\u0027s quite beneficial in many ways.\n\nAs my colleague has stated and shown, it offers better detail retention overall.\n\nIt also has other upsides from my testing material: first-pass is significantly faster with enable-dnl-denoising\u003d0, and the rate control doesn\u0027t change as much with that method in place, compared to the normal grain synthesis method.\n\nOf course, normal grain synthesis behavior is better at very low/low bitrates, so keeping it default is a good idea.\n\nI am currently making more testing encodes before giving concrete results, but the preliminary results seem very promising still.",
      "parentUuid": "a43a6308_6f911fe7",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5e2ace4_d9d86276",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-10-14T15:29:34Z",
      "side": 1,
      "message": "Is there any reason to not have the additional option? ",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ed59bbf_360a3a06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8612
      },
      "writtenOn": "2020-10-14T23:32:14Z",
      "side": 1,
      "message": "No objection to adding another flag (I\u0027ll leave it to the owners to decide). \n\nHowever, it feels a little odd to be adding back noise that was modeled between original and denoised, back to the original (to potentially fix an issue caused by over-denoising in coding of frames, or to fix an issue with under-estimation of the noise strength in the grain synthesis). E.g., we can end up with a higher displayed frame noise level (which I guess is up to the user). It would be more consistent if the noise was modeled between the original and reconstructed coded frame--not sure how feasible that is.\n\nAnother way to accomplish similar behavior as the flag (e.g., to avoid denoising every pass, and add back whatever noise you want, to any input) is to denoise outside of aom and use examples/noise_model.c to generate the noise parameters and pass those into second pass.",
      "parentUuid": "1071d5a4_0da7127c",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb819b48_4e60f22a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 21182
      },
      "writtenOn": "2020-11-25T22:17:56Z",
      "side": 1,
      "message": "The biggest upside to this method(other than massive first pass speedup since the external denoiser doesn\u0027t give the encoder the denoised image to work with) is that the rate control isn\u0027t changed with this different way of doing grain synthesis.\nThat does mean it is a bit less efficient, but it also means when the grain is removed by the encoder anyway(via the compression process) it can potentially work better than the default method. It also has the advantage of not having to have to generate the noise parameters separately.\n\nThat\u0027s my 2 cents anyway. I\u0027ve been using the new option a lot by patching it separately, and it works quite well overall. If it was possible to therefore integrated natively, it would be great.",
      "parentUuid": "4ed59bbf_360a3a06",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33397bd8_90fd80dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 23197
      },
      "writtenOn": "2020-12-02T18:25:45Z",
      "side": 1,
      "message": "I think this option has some merit. If the user wants to retain the same amount of grain/dithering in their video while using a very high q value. This is currently impossible in aomenc as at high q values grain is often discarded (for good reason). That said I see part of the intent of DNL as reducing the size of the video without hurting the quality and for that purpose I don\u0027t think this option is useful.\n\n...Unless you are using a third party tool like av1an or qencoder to do something like target vmaf. I haven\u0027t tested it extensively but I could see some benefit to this patch for tools like that since it would better preserve the original video, the difference between the source and encoded video (with grain synthesis during decoding disabled, eg via dav1d with dav1d --filmgrain 0) would be much smaller resulting in higher vmaf/psnr/ssim/etc. While still giving you the benefits of grain synthesis which do not show up on any of these comparative metrics.",
      "revId": "c9bdf4eb1b457b5805790c0b358e69554ca235af",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}