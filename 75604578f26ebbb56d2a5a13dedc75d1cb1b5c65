{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1cf0a760_1b1b7015",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2022-10-12T17:15:09Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nIn this patch, in the multi-threaded encoding scenario with row-mt\u003d1, loop-filter stage is pipelined along with encoding stage, i.e., when no encode job is available for a thread, loop filtering job is picked. This optimization is added as a speed feature \u0027pipeline_lpf_mt_with_enc\u0027 and enabled for rt speed \u003e\u003d7.\n\nIn this patch, when the speed feature \u0027pipeline_lpf_mt_with_enc\u0027 is enabled, the row height each thread processes in the loop-filter stage is changed from 128 pixels to superblock height in pixels. (Therefore, \u0027mib_size_log2\u0027 is added as a parameter to the function av1_thread_loop_filter_rows()). The reasoning for this change is as follows:\n\nLoop filtering of the ith superblock row requires encoding of the ith and (i+1)th superblock row to be complete (as (i+1)th superblock row requires the non-filtered reconstructed pixels of the ith superblock row for intra prediction). Consider a 320x180 resolution clip which has only 3 superblock rows. If a thread processes a row of height 128 pixels, filtering the 0th superblock row requires encoding of 0th, 1st and 2nd superblock rows to be complete. However, if loop filtering row height is changed to superblock row height, i.e., 64 pixels, filtering the 0th superblock row requires encoding of only 0th and 1st superblock rows to be complete. This reduces the idle time of threads thereby improving the multi-threading efficiency.\n\nThe multi-thread encode time reduction for rt with row-mt\u003d1 is as follows:\n```\ncpu  Resolution   Tiles  Threads Encode time reduction (%)\n 7    180p          2x1     2        2.0\n 8    180p          2x1     2        1.0\n 9    360p          4x1     4        3.0\n 10   720p          4x1     4        3.0\n 10   1080p screen  4x1     4        3.0\n```\nWe have verified the patch to be bit-exact in good preset with no change in encode time.\n\nPlease note that this patch is submitted as a dependent patch of\nhttps://aomedia-review.googlesource.com/c/aom/+/163261.\n\nPlease review.\n\nThanks",
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67bd29d_3f10235e",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 6
      },
      "lineNbr": 1765,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-12T22:10:29Z",
      "side": 1,
      "message": "Can \"speed \u003e\u003d 7\" be removed, so pipeline_lpf_mt_with_enc can be used for speed 5 \u0026 6 as well?",
      "range": {
        "startLine": 1765,
        "startChar": 64,
        "endLine": 1765,
        "endChar": 77
      },
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62403de6_ad5292d2",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 6
      },
      "lineNbr": 1765,
      "author": {
        "id": 8893
      },
      "writtenOn": "2022-10-13T15:51:57Z",
      "side": 1,
      "message": "We shall plan to test for rt speed 5 and 6 and enable the feature in a separate CL.",
      "parentUuid": "d67bd29d_3f10235e",
      "range": {
        "startLine": 1765,
        "startChar": 64,
        "endLine": 1765,
        "endChar": 77
      },
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d75475e1_76b6bc0c",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 6
      },
      "lineNbr": 1765,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-13T19:44:12Z",
      "side": 1,
      "message": "Sounds good. Thanks.",
      "parentUuid": "62403de6_ad5292d2",
      "range": {
        "startLine": 1765,
        "startChar": 64,
        "endLine": 1765,
        "endChar": 77
      },
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce68e71e_2d0a0b7e",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 6
      },
      "lineNbr": 1770,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-12T22:10:29Z",
      "side": 1,
      "message": "Can this feature be removed? It isn\u0027t an independent speed feature. If needed, maybe add it to a MT related struct in cpi?",
      "range": {
        "startLine": 1770,
        "startChar": 14,
        "endLine": 1770,
        "endChar": 38
      },
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72455a12_b9a99f11",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 6
      },
      "lineNbr": 1770,
      "author": {
        "id": 8893
      },
      "writtenOn": "2022-10-13T15:51:57Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "ce68e71e_2d0a0b7e",
      "range": {
        "startLine": 1770,
        "startChar": 14,
        "endLine": 1770,
        "endChar": 38
      },
      "revId": "75604578f26ebbb56d2a5a13dedc75d1cb1b5c65",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}