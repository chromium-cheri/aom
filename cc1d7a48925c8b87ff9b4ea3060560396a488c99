{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28eba9c0_bc053718",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2023-11-08T17:03:56Z",
      "side": 1,
      "message": "In this CL, a `longjmp` target has been introduced in `cal_mb_wiener_var_hook()` to facilitate the error propagation in case of row multithreading of wiener variance. A flag `mb_wiener_mt_exit ` is introduced in the structure `AV1EncRowMultiThreadInfo` which will be set to true in case a thread encounters an error. The other threads will terminate their jobs by checking the status of this flag.\n\nIn case of wiener variance multithreading, every worker in a row waits for the completion of top-right blocks (BLOCK_64X64). If one of the threads encounters an error, `set_mb_wiener_var_calc_done()` is invoked before returning from the hook function to avoid dependent workers from waiting indefinitely in `av1_calc_mb_wiener_var_row()`. \n\nThe `intra_sync_write_ptr()` call in `av1_calc_mb_wiener_var_row()` is also done conditionally based on `mb_wiener_mt_exit` flag to avoid overwriting the update done by `set_mb_wiener_var_calc_done()`. This conditional call of `sync_write()` would be required for other MT modules as well. We shall study and submit a separate CL addressing the same.\n\nThis CL has been validated on all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "cc1d7a48925c8b87ff9b4ea3060560396a488c99",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}