{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "615f8962_d0af1dd8",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-06-29T16:54:40Z",
      "side": 0,
      "message": "The original logic looks natural to me: a forward key frame uses frames before it for filtering.\n\nAfter this change, does the forward key frame use frames before it or after it for filtering?",
      "range": {
        "startLine": 1034,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 18
      },
      "revId": "c60ebb514b3965d1b4de2d35aab1a92dfb807d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a885c04a_0735dad2",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-06-29T17:17:12Z",
      "side": 0,
      "message": "Both, as a forward key frame will serve as reference frame for both sides.\n\nThat\u0027s where we expect the coding gains I guess.",
      "parentUuid": "615f8962_d0af1dd8",
      "range": {
        "startLine": 1034,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 18
      },
      "revId": "c60ebb514b3965d1b4de2d35aab1a92dfb807d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611db3ee_0841ed2c",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-06-30T05:13:29Z",
      "side": 0,
      "message": "I found is_forward_keyframe is:\n\"if (gf_group-\u003eframe_type[cpi-\u003egf_frame_index] \u003d\u003d KEY_FRAME \u0026\u0026\n     gf_group-\u003erefbuf_state[cpi-\u003egf_frame_index] \u003d\u003d REFBUF_UPDATE)\"\n        \nHere, if it is a forward key frame, the check\n\"if (frame_type \u003d\u003d KEY_FRAME)\" should be true.\nWhich means, num_before \u003d 0.\n\nAM I right?",
      "parentUuid": "a885c04a_0735dad2",
      "range": {
        "startLine": 1034,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 18
      },
      "revId": "c60ebb514b3965d1b4de2d35aab1a92dfb807d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55d2e7cb_7f988917",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-06-30T06:42:42Z",
      "side": 0,
      "message": "Good point. I was thinking of using both sides\u0027 frames for reference. But the current implementation only used next GOP\u0027s frames.\n\nThis is fixed in\nhttps://aomedia-review.googlesource.com/c/aom/+/141161\n\nUsing two sides reference further improves the coding performance by 1% in avg / overall PSNR BD rate.",
      "parentUuid": "611db3ee_0841ed2c",
      "range": {
        "startLine": 1034,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 18
      },
      "revId": "c60ebb514b3965d1b4de2d35aab1a92dfb807d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd780a14_a56f4270",
        "filename": "av1/encoder/temporal_filter.c",
        "patchSetId": 2
      },
      "lineNbr": 1035,
      "author": {
        "id": 6585
      },
      "writtenOn": "2021-06-30T14:51:48Z",
      "side": 0,
      "message": "Cool.",
      "parentUuid": "55d2e7cb_7f988917",
      "range": {
        "startLine": 1034,
        "startChar": 4,
        "endLine": 1035,
        "endChar": 18
      },
      "revId": "c60ebb514b3965d1b4de2d35aab1a92dfb807d41",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}