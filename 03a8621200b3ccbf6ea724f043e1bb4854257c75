{
  "comments": [
    {
      "key": {
        "uuid": "9669a8cb_00eb30b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-24T13:33:35Z",
      "side": 1,
      "message": "Does this change the bitstream or the encoder output?",
      "revId": "03a8621200b3ccbf6ea724f043e1bb4854257c75",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "523084ee_62e0d950",
        "filename": "av1/common/cfl.c",
        "patchSetId": 12
      },
      "lineNbr": 41,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-24T13:33:35Z",
      "side": 1,
      "message": "Should this rather loop until MIN(height, height - diff_height)? Otherwise you\u0027re just doing useless extra copies.",
      "revId": "03a8621200b3ccbf6ea724f043e1bb4854257c75",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1b342f4_2940ff7e",
        "filename": "av1/common/cfl.c",
        "patchSetId": 12
      },
      "lineNbr": 396,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-24T13:33:35Z",
      "side": 1,
      "message": "Why is it okay for cfl-\u003ebuf_width/cfl-\u003ebuf_height to be larger than cfl-\u003euv_width/cfl-\u003euv_height for sub-8x8 blocks? Does this also apply for 4x16 or 16x4 blocks? How does that even happen?\n\nI\u0027m having a hard time understanding what these asserts are testing for, because they\u0027re not right next to code that clearly depends on them, and there\u0027s no comment to tell me what goes (or has gone) wrong if they\u0027re violated.\n\nIt would be helpful to know that cfl-\u003ebuf_height \u003c\u003d cfl-\u003euv_height for the loop bounds change I suggested above (it would let you get rid of the MIN), but not if it can be violated for sub-8x8.",
      "revId": "03a8621200b3ccbf6ea724f043e1bb4854257c75",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}