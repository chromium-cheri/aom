{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b30b1702_be713f95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-06-14T20:01:03Z",
      "side": 1,
      "message": "In 92b5cd32ac I see local variables of size 48 KB (\u003d 3 * 128 * 128). Google\u0027s ideal goal for thread stack size is only 64 KB. Even if we only aim for a relaxed goal of 256 KB, this is a significant portion of that. We should look into allocating those buffers from the heap.",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e47b0642_4b915836",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-06-15T01:44:48Z",
      "side": 1,
      "message": "\u003e In 92b5cd32ac I see local variables of size 48 KB (\u003d 3 * 128 * 128). Google\u0027s ideal goal for thread stack size is only 64 KB. Even if we only aim for a relaxed goal of 256 KB, this is a significant portion of that. We should look into allocating those buffers from the heap.\n\nYes, they are quite large and there are other instances like this elsewhere. I\u0027d like it if we had some shared scratch space that could be passed down rather than doing an alloc/free in every call.",
      "parentUuid": "b30b1702_be713f95",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "440a1a78_738866ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-06-14T20:01:03Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "571f2f1f_a68aadf8",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-06-14T19:33:22Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s much value for these in the non-default configurations. What do you think about removing them?",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7aa3bb30_ef159098",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-06-14T20:01:03Z",
      "side": 1,
      "message": "You mean removing these in the sanitizer and CONFIG_RD_DEBUG configurations? We can do that.",
      "parentUuid": "571f2f1f_a68aadf8",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37eddd39_b25d2ae8",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 364,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-06-15T01:44:48Z",
      "side": 1,
      "message": "\u003e You mean removing these in the sanitizer and CONFIG_RD_DEBUG configurations? We can do that.\n\nYes that\u0027s what I was suggesting. I\u0027ll clear the warning first and then follow up with something.",
      "parentUuid": "7aa3bb30_ef159098",
      "revId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "e84c7c35cedbb2fe0848f3f9f988930dc8501bd4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}