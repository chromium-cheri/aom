{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e1d35d33_26e687ba",
        "filename": "apps/aomenc.c",
        "patchSetId": 3
      },
      "lineNbr": 412,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-10T20:05:28Z",
      "side": 0,
      "message": "save_as_annexb refers to the Annex B in the AV1 spec, so it is an AV1-specific option and should stay in the av1_args[] array.",
      "revId": "b2d82581086077468ccb33491dac1ddeea386436",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd56c255_a7799bbd",
        "filename": "apps/aomenc.c",
        "patchSetId": 3
      },
      "lineNbr": 412,
      "author": {
        "id": 7525
      },
      "writtenOn": "2021-02-10T23:03:57Z",
      "side": 0,
      "message": "Doesn\u0027t HEVC/AVC etc. also support Annex-B format? That was why I moved it to this group where it also contains similar things like YUV format, bitdepth, etc. \n\nAs a side note, this is one example of the parameters that I think can be controlled by the current key \u0026 value API, even if it is in aom_codec_enc_cfg, since it is only used after the encoding starts.",
      "parentUuid": "e1d35d33_26e687ba",
      "revId": "b2d82581086077468ccb33491dac1ddeea386436",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3503d00b_83b907a0",
        "filename": "apps/aomenc.c",
        "patchSetId": 3
      },
      "lineNbr": 412,
      "author": {
        "id": 7525
      },
      "writtenOn": "2021-02-10T23:13:20Z",
      "side": 0,
      "message": "\u003e Doesn\u0027t HEVC/AVC etc. also support Annex-B format? That was why I moved it to this group where it also contains similar things like YUV format, bitdepth, etc. \n\u003e \n\u003e As a side note, this is one example of the parameters that I think can be controlled by the current key \u0026 value API, even if it is in aom_codec_enc_cfg, since it is only used after the encoding starts.\n\nTo clarify, I meant that they all have quite similar bit-stream formats (that are also in annex B, curiously), so it feels this is not an av1 specific option. I understand that this annex-B is for av1 only, but still, it looks to me that it belongs better to this group. \n\nPlease let me know what you think on this.",
      "parentUuid": "fd56c255_a7799bbd",
      "revId": "b2d82581086077468ccb33491dac1ddeea386436",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "578d59ef_5fd7f0e3",
        "filename": "apps/aomenc.c",
        "patchSetId": 3
      },
      "lineNbr": 412,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-11T00:48:58Z",
      "side": 0,
      "message": "I am not familiar with the bitstream formats of HEVC and AVC. I took a quick look at the Annex B in H.265. It seems different from the Annex B in the AV1 spec. For example, the Annex B in H.265 uses a start code prefix, whereas the Annex B in the AV1 spec uses extra length fields. The common property is that they both specify an alternative bitstream format (one of the two bitstream formats in each standard) and this alternative bitstream format makes it easy to find the beginning of the next \"unit\" (using different techniques).\n\nI would leave this option in the \"AV1 Specific Options\" section in the help message. To address the issue of having no matching entry in av1_arg_ctrl_map[], we can add a comment similar to the comment I added to libvpx:\n\nhttps://chromium-review.googlesource.com/c/webm/libvpx/+/2420734\n\nAlternatively, we can add a new array for AV1 args that are not set using the aom_codec_control() function, and add a new call here:\n\n #if CONFIG_AV1_ENCODER\n   fprintf(fout, \"\\nAV1 Specific Options:\\n\");\n   arg_show_usage(fout, av1_args);\n+  arg_show_usage(fout, av1_args_2);  // Choose a better name.\n #endif",
      "parentUuid": "3503d00b_83b907a0",
      "revId": "b2d82581086077468ccb33491dac1ddeea386436",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}