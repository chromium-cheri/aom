{
  "comments": [
    {
      "key": {
        "uuid": "01e198b0_6c2c1b98",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1264,
      "author": {
        "id": 5250
      },
      "writtenOn": "2020-10-05T18:00:11Z",
      "side": 1,
      "message": "[Optional], you could consider write a convolve-like function and apply it to filt_intra_err and filt_coded_err.",
      "range": {
        "startLine": 1248,
        "startChar": 0,
        "endLine": 1264,
        "endChar": 3
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18fcd0be_0790ddf3",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1264,
      "author": {
        "id": 7525
      },
      "writtenOn": "2020-10-05T21:48:51Z",
      "side": 1,
      "message": "That makes sense. Just that in this case filt_intra_err and filt_coded_err have different conditions for \"ignore\", it is in my opinion a bit complicated to get a separate function to support this and used only for this scenario. I\u0027m leaving this as is for now. Please let me know if you think it is better to change it.",
      "parentUuid": "01e198b0_6c2c1b98",
      "range": {
        "startLine": 1248,
        "startChar": 0,
        "endLine": 1264,
        "endChar": 3
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6602972c_7ce85718",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1264,
      "author": {
        "id": 5250
      },
      "writtenOn": "2020-10-06T16:41:17Z",
      "side": 1,
      "message": "Makes sense.",
      "parentUuid": "18fcd0be_0790ddf3",
      "range": {
        "startLine": 1248,
        "startChar": 0,
        "endLine": 1264,
        "endChar": 3
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c9efcc1_44efb6e1",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1273,
      "author": {
        "id": 5250
      },
      "writtenOn": "2020-10-05T18:00:11Z",
      "side": 1,
      "message": "Shouldn\u0027t this be next - prev?",
      "range": {
        "startLine": 1273,
        "startChar": 46,
        "endLine": 1273,
        "endChar": 49
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e69dfc22_9194d498",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 1
      },
      "lineNbr": 1273,
      "author": {
        "id": 7525
      },
      "writtenOn": "2020-10-05T21:48:51Z",
      "side": 1,
      "message": "You are right, thanks! Changed the denominator to (next-prev).",
      "parentUuid": "9c9efcc1_44efb6e1",
      "range": {
        "startLine": 1273,
        "startChar": 46,
        "endLine": 1273,
        "endChar": 49
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9bf832c_fccbc442",
        "filename": "av1/encoder/pass2_strategy.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-09-29T19:27:12Z",
      "side": 1,
      "message": "is this needed here? should it be included in .c file instead?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b638e8_d1d263e8",
        "filename": "av1/encoder/pass2_strategy.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 7525
      },
      "writtenOn": "2020-09-30T00:59:16Z",
      "side": 1,
      "message": "It is not really needed for compiling the current codebase. However for the sake of this header file, it does use some definitions that are not declared (e.g. EncodeFrameInput in line 96). \n\nIf we do not include encode.h in this header file, we are relying on the condition that pass2_strategy.h is always included after encoder.h is included (which is true in our current codebase). \n\nI just thought it wouldn\u0027t hurt to include it here, but you are right it is not required. Please let me know your thoughts on this and I\u0027ll remove this line if it is unnecessary.",
      "parentUuid": "d9bf832c_fccbc442",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f07bae32_8f1d3b0f",
        "filename": "av1/encoder/pass2_strategy.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5005
      },
      "writtenOn": "2020-09-30T04:33:57Z",
      "side": 1,
      "message": "From what you described, the header file should be included here. Thanks for discovering the issue and putting in the fix.",
      "parentUuid": "73b638e8_d1d263e8",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 32
      },
      "revId": "0f3532d40ef82ae630578b9d249c2cd6299df4d6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}