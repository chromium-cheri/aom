{
  "comments": [
    {
      "key": {
        "uuid": "75cb402c_0367dfe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-09-25T23:20:22Z",
      "side": 1,
      "message": "PTAL. I am not confident about this CL. I annotated the code to explain what causes the crash and my proposed solution. Thanks!",
      "revId": "d0bc12e6d717cdda02433f048791afd1e0450c0e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb55ab8d_fac9ead1",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 1145,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-09-25T23:20:22Z",
      "side": 1,
      "message": "The function that creates intrabc_hash_info-\u003eintrabc_hash_table is encode_frame_internal().",
      "revId": "d0bc12e6d717cdda02433f048791afd1e0450c0e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab7dd879_5677d7a1",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 1193,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-09-25T23:20:22Z",
      "side": 1,
      "message": "The \u0026\u0026 !cpi-\u003esf.rt_sf.use_nonrd_pick_mode part of this test was added in https://aomedia-review.googlesource.com/c/aom/+/84281",
      "revId": "d0bc12e6d717cdda02433f048791afd1e0450c0e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de93859c_748382fa",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 1216,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-09-25T23:20:22Z",
      "side": 1,
      "message": "Note that intrabc_hash_info-\u003eintrabc_hash_table is created here. The condition under which we create the hash table is lines 1192-1193 above.",
      "revId": "d0bc12e6d717cdda02433f048791afd1e0450c0e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0fe0893_d7d3c120",
        "filename": "av1/encoder/mcomp.c",
        "patchSetId": 2
      },
      "lineNbr": 1806,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-09-25T23:20:22Z",
      "side": 1,
      "message": "Note that intrabc_hash_info-\u003eintrabc_hash_table is used here. The condition under which we use the hash table is the negation of the condition at lines 1175-1176 above.\n\nIt seems that this condition should match the condition under which encode_frame_internal() creates the hash table. But I am not sure if it is necessary to make these two conditions match. Also, I am wondering if we can simply test whether intrabc_hash_info-\u003eintrabc_hash_table has been created at line 1775, instead of the current conditional expression.",
      "revId": "d0bc12e6d717cdda02433f048791afd1e0450c0e",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}