{
  "comments": [
    {
      "key": {
        "uuid": "5951f4f7_afb94ab0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-03T20:52:34Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nI have added the rest of the functions for SadSkip. The last few patches are for explicit initializations and including string.h for memcpy function.\n\nPlease review and submit.\n\nThanks,\nKrishna",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77cdebfe_c1413479",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-03T23:53:19Z",
      "side": 1,
      "message": "Thanks for adding SIMD for all block sizes.",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e75184c3_863757f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-03T23:56:41Z",
      "side": 1,
      "message": "Also, did you have the arm build with c code only? You can use that to check the bit exactness of your CL. Please update the result here.",
      "parentUuid": "77cdebfe_c1413479",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b460da8e_4eb7fd66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:03:18Z",
      "side": 1,
      "message": "I tried to build with arm and also -DENABLE_NEON\u003d0. It is reporting errors for all functions of NEON.",
      "parentUuid": "e75184c3_863757f4",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4a6cbcb_268bc25c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-04T00:23:52Z",
      "side": 1,
      "message": "Need to figure out how to build a c-only arm lib(ask people who are familiar with arm build). For this CL, you can checkout the parent CL(without your change), and use it as the reference for bit stream matching test.",
      "parentUuid": "b460da8e_4eb7fd66",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb3be2a4_32ba1d0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:28:00Z",
      "side": 1,
      "message": "I could build now and testing it.",
      "parentUuid": "a4a6cbcb_268bc25c",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78f08707_27572864",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:47:07Z",
      "side": 1,
      "message": "Even with NEON disabled in the ARM build (-DENABLE_NEON\u003d0 in the build option which makes #define HAVE_NEON 0 in config/aom_config.h), the bit stream remains same.",
      "parentUuid": "eb3be2a4_32ba1d0e",
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce9282b4_d2d14d70",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-03T23:53:19Z",
      "side": 1,
      "message": "Does it work without this line? I saw other neon code using memcpy without including string.h. Search \"memcpy\" to find those files to follow what is done there.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7ba07fa_4286c2c3",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:03:18Z",
      "side": 1,
      "message": "Can also be done with config/aom_dsp_rtcd.h, which I used for memcpy in sad4d_neon.c. It is clashing with definitions of some functions developed earlier here for sad. So I am using string.h instead.",
      "parentUuid": "ce9282b4_d2d14d70",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78091209_b2a081c4",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-04T00:23:52Z",
      "side": 1,
      "message": "Why? Clashing happens with your local build or Jenkins. For local build, did you clean up the old build and run cmake again?",
      "parentUuid": "e7ba07fa_4286c2c3",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8edae08a_cb98ca22",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 12,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:28:00Z",
      "side": 1,
      "message": "with local build. I cleaned up the old build and did cmake.Pre-existing functions are reporting redifinition.",
      "parentUuid": "78091209_b2a081c4",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 19
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d87c0bcb_3970f146",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 300,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-09-03T23:53:19Z",
      "side": 1,
      "message": "Remove this if it is not needed?",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 300,
        "endChar": 0
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "388681f9_33c30a1e",
        "filename": "aom_dsp/arm/sad_neon.c",
        "patchSetId": 11
      },
      "lineNbr": 300,
      "author": {
        "id": 16147
      },
      "writtenOn": "2020-09-04T00:03:18Z",
      "side": 1,
      "message": "Sure. Will remove it.",
      "parentUuid": "d87c0bcb_3970f146",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 300,
        "endChar": 0
      },
      "revId": "4728444cc9848957b85649a0a7f715438af2da40",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}