{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bd9d5b79_1c03515d",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-22T15:31:16Z",
      "side": 1,
      "message": "Optional: It is fine to not reset `pbi-\u003etile_data` and `pbi-\u003eallocated_tiles` here because we will free the entire `pbi` struct at line 233. I guess this is why nonoe of the `aom_free()` calls is followed by setting the pointer to null in this function.",
      "revId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3bbbec_90128246",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-22T15:45:06Z",
      "side": 1,
      "message": "My preference is to maintain consistency. Let\u0027s remove these two lines from this CL.\n\nIf we want to avoid dangling pointers (and stale buffer sizes) in this function, it\u0027d be better to change the whole function consistently.",
      "parentUuid": "bd9d5b79_1c03515d",
      "revId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05025271_b2700f8f",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-22T15:31:16Z",
      "side": 1,
      "message": "Note that the entire `pbi` struct is freed at the end of the function.",
      "revId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3f1c0248511a1ae8c0ae78eb38a5c79bab085c3f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}