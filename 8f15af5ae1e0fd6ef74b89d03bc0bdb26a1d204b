{
  "comments": [
    {
      "key": {
        "uuid": "90fa4cbe_0987e6d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14062
      },
      "writtenOn": "2020-08-19T18:22:52Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nThis CL extends the use of av1_ml_predict_breakout() to terminate partition search based \non partition NONE results for high bit-depth encoding. \n\nIn order to enable the use of existing low bit-depth model for hbd encoding, the features\nused for the model are adjusted for high bit-depth encoding. Specifically, the feature \ndc_q is rounded off to 8-bit equivalent. The other features remain the same since the\nlibaom hbd encoding already uses lbd equivalents of rdmult (feature rate_f), distortion \n(feature dist_f) and source variance (feature pb_source_variance). The thresholds used for\nbreakout are increased slightly for speed 1, 2 and 3 so that the desired trade-off is met.\n\nWe have computed the speed-quality trade-off of the existing av1_ml_predict_breakout() for\nboth 8-bit and 10-bit encoding and the results are as follows:\n\n        | ---------------- 8-bit encode ------------- |\n| Speed | % Instruction Count | % BD rate | Trade-off |\n\t       reduction          loss \t\t\t\t \n   0\t\t-4.7941         -0.0743\t     0.01549   \n   1            -3.8428\t        -0.0774\t     0.02014   \n   2            -2.7433\t        -0.0656\t     0.02391   \n\n        | ----------------------------------- 10-bit -------------------------------------- |\n| Speed | % Instruction count | % BD rate loss | % BD rate loss |  Trade-off  |  Trade-off  |\n\t\treduction\t   8-bit PSNR      10-bit PSNR\t   8-bit PSNR   10-bit PSNR\t\n   0\t       -2.7896\t            -0.0438\t     -0.0421\t    0.01570\t   0.01509\n   1           -2.9335\t            -0.0312\t     -0.0296\t    0.01064\t   0.01009\n   2           -2.2306\t            -0.0218\t     -0.0213\t    0.00977\t   0.00955\n\n\nAs can be seen from the above table, the existing ML classifier is slightly beyond the\ndesired trade-off for speed 0 for 8-bit encoding. Similar trade-off is seen when the model is\nenabled for speed 0 10-bit encoding. Due to this, we have currently enabled the model for\n10-bit encoding in speed 1 to 6 only. We can choose to enable the existing model for speed 0\n10-bit if the trade-off of 0.015% is fine. Else, we will plan to re-train the model for speed 0\nso that the desired trade-off of 0.01% is met. Please let us know your opinion.\n\nThe overall speed and BD rate numbers for each preset (given below) are computed over the entire \ntest suite including HD res – since the sf is disabled for HD res, the numbers for those clips\nare considered to be 0 while obtaining the “Average” numbers.\n\n                      Instruction Count        BD-Rate Loss(%)\ncpu-used  Resolution    Reduction(%)   avg.psnr  avg.psnr  ovr.psnr   ssim\n\t\t\t\t\t8-bit\t  10-bit\n   1       LOW RES        4.240         0.0342    0.0295    0.0323    0.0356\n   1       MID RES        3.300         0.0596    0.0606    0.0625   -0.0280\n   1       Average        2.934         0.0312    0.0296    0.0313    0.0061\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n   2       LOW RES        3.262         0.0286    0.0312    0.0221   -0.0008\n   2       MID RES        2.430         0.0352    0.0300    0.0456    0.0278\n   2       Average        2.231         0.0218    0.0213    0.0222    0.0078\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n   3       LOW RES        0.725         0.0070    0.0121    0.0063    0.0289\n   3       MID RES        0.795         0.0590    0.0588    0.0678    0.1004\n   3       Average        0.558         0.0201    0.0221    0.0223    0.0410 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n   4       LOW RES        0.853         0.0122    0.0263    0.0235   -0.0005\n   4       MID RES        0.980         0.0043    0.0005    0.0105    0.0211\n   4       Average        0.667         0.0002    0.0107    0.0125    0.0059\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n   5       LOW RES        0.230         0.0106    0.0082    0.0162    0.0556\n   5       MID RES        0.697         0.0333    0.0341    0.0522    0.0573\n   5       Average        0.285         0.0140    0.0133    0.0218    0.0391\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t    \n   6       LOW RES        0.110         0.0319    0.0294    0.0337    0.0266\n   6       MID RES        0.296         0.0062    0.0058    0.0044   -0.0008\n   6       Average        0.127         0.0147    0.0135    0.0149    0.0105 \n\nIn the commit message, Quality Loss column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc …\n\nBitmatch for the low-bd path, and for preset 0 of the high-bd path, have been verified locally.\n\nPlease review the patch.\nThank you.\n\n",
      "revId": "8f15af5ae1e0fd6ef74b89d03bc0bdb26a1d204b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "899f047e_3aa4123e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-08-19T19:24:43Z",
      "side": 1,
      "message": "Thanks for tuning/enabling this feature for hbd. The results are good. Regarding speed 0, the 10-bit encoding speed/quality tradeoff is quite similar to original lbd tradeoff. I think we can enable it for speed 0. Also, should run some verification tests for 12-bit case(maybe only 1 resolution test set) to make sure nothing is wrong.",
      "parentUuid": "90fa4cbe_0987e6d7",
      "revId": "8f15af5ae1e0fd6ef74b89d03bc0bdb26a1d204b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5935be8d_c8d3a1ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14062
      },
      "writtenOn": "2020-08-20T15:07:16Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nRegarding the performance on 12-bit encode, we had run lowres speed 2, which showed 3.2792% instruction count reduction for 0.0694% BD rate loss (avg psnr), corresponding to trade-off of 0.021%. Please let us know if this is fine.\n\nRegards,\nVishesh",
      "parentUuid": "899f047e_3aa4123e",
      "revId": "8f15af5ae1e0fd6ef74b89d03bc0bdb26a1d204b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}