{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d0e7f6d_ead552ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-11-03T17:41:16Z",
      "side": 1,
      "message": "In the parent version, the following happen unnecessarily even when speed feature `gm_search_type` is set to `GM_DISABLE_SEARCH` or `num_ref_frames[]` is zero:\ni) Invoking `setup_global_motion_info_params()` \nii) Allocation of buffers in `gm_data`\niii) Invoking of ‘prepare’, ‘launch’ and ‘sync’ functions in case of multithreading.\nThis CL adds early termination checks in `av1_compute_global_motion_facade()` to avoid these unnecessary calls.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "ea594332abcdb7ced8a18fb0a6164fa7681e73b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15582c31_13b93010",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 29052
      },
      "writtenOn": "2023-11-07T20:57:29Z",
      "side": 1,
      "message": "LGTM. I have confirmed that this logic is safe - when we start encoding a frame, we call set_size_independent_vars() which sets all global motion models to the identity model. Therefore we can safely skip the main global motion search logic, and everything will still be set up correctly.",
      "revId": "ea594332abcdb7ced8a18fb0a6164fa7681e73b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}