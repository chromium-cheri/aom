{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5566f845_bb419d86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-10T16:42:41Z",
      "side": 1,
      "message": "There were already some instances of `_mm_set1_epi64x` being used directly without reported issue.",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72f74a48_29b6bfee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-10T20:05:46Z",
      "side": 1,
      "message": "LGTM. I checked the changes carefully.",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22339279_9680986e",
        "filename": "aom_dsp/x86/highbd_sad_avx2.c",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-10T16:42:41Z",
      "side": 1,
      "message": "It\u0027s important to note that the wrapper functions were all doing zero (not sign) extension.",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e760e997_54bba4a5",
        "filename": "av1/common/x86/reconinter_avx2.c",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-10T20:05:46Z",
      "side": 1,
      "message": "Should we add a `(uint32_t)` cast to the input argument to `_mm_set1_epi64x()`?\n\nI guess we don\u0027t need to because `bd - 8 + DIFF_FACTOR_LOG2` is positive, so the automatic conversion to `long long` is fine.",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f96819f5_c72eedd5",
        "filename": "av1/common/x86/reconinter_avx2.c",
        "patchSetId": 2
      },
      "lineNbr": 579,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-10T20:53:28Z",
      "side": 1,
      "message": "\u003e Should we add a `(uint32_t)` cast to the input argument to `_mm_set1_epi64x()`?\n\u003e \n\u003e I guess we don\u0027t need to because `bd - 8 + DIFF_FACTOR_LOG2` is positive, so the automatic conversion to `long long` is fine.\n\nThat\u0027s right. I thought including it here would be a little confusing.",
      "parentUuid": "e760e997_54bba4a5",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61cf9664_ef812216",
        "filename": "av1/common/x86/reconinter_ssse3.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-05-10T20:05:46Z",
      "side": 1,
      "message": "Should we add a `(uint32_t)` cast to the input argument to `_mm_set1_epi64x()`?\n\nI guess we don\u0027t need to because bd - 8 + DIFF_FACTOR_LOG2 is positive, so the automatic conversion to long long is fine.",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b036be8f_e3d061d0",
        "filename": "av1/common/x86/reconinter_ssse3.c",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-10T20:53:28Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "61cf9664_ef812216",
      "revId": "db83662bfc9a97d9df805cae69c480536c827336",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "db83662bfc9a97d9df805cae69c480536c827336",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "db83662bfc9a97d9df805cae69c480536c827336",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "db83662bfc9a97d9df805cae69c480536c827336",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}