{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5cf8ac28_c0f14164",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-14T15:26:47Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank, \n\nIn this CL, we have introduced a speed feature enable_intra_mode_pruning_using_nb_info to prune specific nonrd intra modes based on source variance and best mode so far. V_PRED and H_PRED modes are pruned if source variance of the prediction block is less than or equal to 50 (empirically derived) and SMOOTH_PRED mode is pruned if the best mode so far is DC_PRED (probability of SMOOTH_PRED being the winner is less when best mode so far is DC_PRED as per the stats). This pruning logic is enabled only if current mode is not the winner mode of both the neighboring blocks (left/top). This speed feature is enabled for allintra, speed 9.\n\nFor AVIF still-image encode with tune\u003dssim,\n```\n                Encode Time      BD-Rate Loss(%)\n    cpu-used     Reduction(%)    psnr      ssim   \n       9           3.462        -0.0577   -0.2393\n```\n\nFollowing are the instruction count reduction results when libaom allintra frame encoding (50 frames) was tested for a borg setup. \n```\n               Instruction Count    BD-Rate Loss(%)      \n    cpu-used      Reduction(%)    avg.psnr  ovr.psnr  ssim\n       9            3.957         0.3829    0.3837    0.2422\n```\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027 and \u0027RT\u0027 encoding modes for a few contents with different encoding configurations. It is verified that the CL is bit-exact for allintra encode, speed \u003c 9 with no speed impact.\n\nIn the commit message, BD rate impact column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using the command:\n$ perf stat -e instructions:u ./aomenc â€¦\n\nPlease review.\n\nRegards,\nMudassir.",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68506b1e_08016248",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "I have some questions and suggested changes. Overall this looks good.",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e43521_cb6ec184",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2423,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "Why should `DC_PRED` not be pruned?\n\nYou don\u0027t need to add a comment if the reason is obvious to people familiar with this code.",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3be572d_ec3ff835",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2423,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-15T14:18:22Z",
      "side": 1,
      "message": "Since DC_PRED is the first mode to be evaluated, pruning it based on previous mode information is not possible. Also in the current CL we have pruned  V_PRED and H_PRED modes for blocks with lower source variance as chances of DC_PRED being the winner is more in such cases. We shall plan to explore the possibility of pruning  DC_PRED for blocks with higher source variance in future.",
      "parentUuid": "d8e43521_cb6ec184",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a6fd506_6749495e",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2426,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "So the rationale is that the winner mode of both the neighboring blocks is very likely to be the winner mode of the current block, so it should not be pruned?",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35016b01_cfbc0db4",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2426,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-15T14:18:22Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "0a6fd506_6749495e",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddd20b0e_0542c1fa",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2432,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "We can just return the conditional expression:\n\n```\n  return xd-\u003eup_available \u0026\u0026 this_mode !\u003d above_mode \u0026\u0026 xd-\u003eleft_available \u0026\u0026\n         this_mode !\u003d left_mode;\n```",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "437fa59f_ec31e60c",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 3
      },
      "lineNbr": 2432,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-15T14:18:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddd20b0e_0542c1fa",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4ac579a_04a2aefb",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 3
      },
      "lineNbr": 1640,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "Why is the coding performance change positive in line 1637 but negative here?",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59ed99a5_0aaaf521",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 3
      },
      "lineNbr": 1640,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-15T14:18:22Z",
      "side": 1,
      "message": "When tested across suites, we observed that this CL yields relatively higher bd-rate loss (yet within allowed trade-off) for lower resolutions. As allintra video encode test suite constitute lower resolution contents as compared to the avif still-image test suite, the average bd-rate drop seen in the first case is higher. But we still went ahead with this optimization as the results were well within the speed quality trade-off.",
      "parentUuid": "a4ac579a_04a2aefb",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "306120e8_b96608df",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 3
      },
      "lineNbr": 1641,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-12-15T00:46:43Z",
      "side": 1,
      "message": "Nit: I suggest changing \"nb_info\" to \"neighboring_blocks\" or \"neighbors\", unless \"nb\" is a commonly-used abbreviation in libaom.",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0776b17_bb998f34",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 3
      },
      "lineNbr": 1641,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-12-15T14:18:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "306120e8_b96608df",
      "revId": "03f4826320985e18183a88d9022d37be731ca53a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}