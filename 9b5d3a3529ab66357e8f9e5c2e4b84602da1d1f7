{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c2ad572_e7833721",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-08-18T17:52:20Z",
      "side": 1,
      "message": "I realized using references instead of pointers was a big mistake (because that makes the struct non-copyable). Also renamed GopInfo to GopStructAndTplStats, since the former was a bit too vague.\n\nPTAL.",
      "revId": "9b5d3a3529ab66357e8f9e5c2e4b84602da1d1f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68f8b37a_965e13d3",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 5022
      },
      "writtenOn": "2022-08-18T18:04:58Z",
      "side": 1,
      "message": "If we are reaching the last sub-gop, its next sub-gop info will be null. Hence these two can be nullptr in this case?",
      "range": {
        "startLine": 253,
        "startChar": 51,
        "endLine": 253,
        "endChar": 70
      },
      "revId": "9b5d3a3529ab66357e8f9e5c2e4b84602da1d1f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "001e2ca7_afca74b2",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-08-18T18:11:55Z",
      "side": 1,
      "message": "No, GetGopEncodeInfoWithLookahead takes a vector of these, which can have one or more elements. The first one is the GOP for which results are wanted, and any additional ones are just for lookahead. So one the last GOP, there would only be one.\n\nDo you think it would be clearer for the info for the first GOP to be separate from the vector of lookahead, like this?\n    virtual StatusOr\u003cGopEncodeInfo\u003e GetGopEncodeInfoWithLookahead(\n        // The GOP for which q index should be computed.\n        const GopStructAndTplStats\u0026 gop_info,\n        // Zero or more following GOPs for lookahead.\n        const std::vector\u003cGopStructAndTplStats\u003e\u0026 lookahead_info,\n        const RefFrameTable \u0026ref_frame_table_snapshot_init);",
      "parentUuid": "68f8b37a_965e13d3",
      "range": {
        "startLine": 253,
        "startChar": 51,
        "endLine": 253,
        "endChar": 70
      },
      "revId": "9b5d3a3529ab66357e8f9e5c2e4b84602da1d1f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54abf678_4539bc94",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 5022
      },
      "writtenOn": "2022-08-18T18:21:00Z",
      "side": 1,
      "message": "Yes, this version looks great imo, as it looks cleaner (clearly separate what we think shall definitely be there, and what is optional) and less error-prone when calling.",
      "parentUuid": "001e2ca7_afca74b2",
      "range": {
        "startLine": 253,
        "startChar": 51,
        "endLine": 253,
        "endChar": 70
      },
      "revId": "9b5d3a3529ab66357e8f9e5c2e4b84602da1d1f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25d916c9_d0a3018b",
        "filename": "av1/ratectrl_qmode_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 10298
      },
      "writtenOn": "2022-08-18T18:43:10Z",
      "side": 1,
      "message": "Okay, hopefully this is clearer. The info for the first GOP is now passed the same way as it was before, and lookahead is a clearly separate argument.",
      "parentUuid": "54abf678_4539bc94",
      "range": {
        "startLine": 253,
        "startChar": 51,
        "endLine": 253,
        "endChar": 70
      },
      "revId": "9b5d3a3529ab66357e8f9e5c2e4b84602da1d1f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}