{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d02e93da_f8bf0f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 24958
      },
      "writtenOn": "2021-04-28T18:53:42Z",
      "side": 1,
      "message": "Hi Yunqing,\nThis patch moves error from AV1_COMP to AV1_PRIMARY and AV1Decoder. This adds error handling in av1_create_primary_compressor. This change also facilitates future CLs where initialization of seq_params is split from frame level initializations.\n\nCurrently, cpi and cpi_lap had their separate error because of the structural design. So, error.setjmp needed to be set and reset for them separately in encoder_encode. With this patch, since error is moved to primary context, all the cpi\u0027s can refer to the same error variable and only 1 error.setjmp needs to be set/reset.\n\nThis change is bit-exact and has been locally verified with bitstream match tests over a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage,  --row-mt, etc. Decoder conformance is verified using --test-decode\u003dfatal and sanitizer tests.\n\nPlease review.",
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "696d8487_adbff712",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-28T20:07:38Z",
      "side": 1,
      "message": "Hi Nithya and Ranjit, the error handling part is tricky. Could you take a close look at this CL and provide your opinion?",
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0bd60c_25526735",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-28T20:07:38Z",
      "side": 1,
      "message": "When pbi is available, should we use it directly? Namely, pbi-\u003eerror.jmp? Same for other places in this file and other decoder files. May also apply to encoder files. What do you think?",
      "range": {
        "startLine": 106,
        "startChar": 13,
        "endLine": 106,
        "endChar": 22
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0a91ea5_dc9ca61c",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 24958
      },
      "writtenOn": "2021-04-30T17:49:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa0bd60c_25526735",
      "range": {
        "startLine": 106,
        "startChar": 13,
        "endLine": 106,
        "endChar": 22
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e342e8e8_81db2903",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-30T20:42:54Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "f0a91ea5_dc9ca61c",
      "range": {
        "startLine": 106,
        "startChar": 13,
        "endLine": 106,
        "endChar": 22
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f31af15_cb01c941",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 921,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-28T20:07:38Z",
      "side": 1,
      "message": "This is moved to av1_create_primary_compressor(). av1_remove_primary_compressor(ppi) should also include av1_remove_compressor(cpi), right? Should this part be removed? We can discuss it.",
      "range": {
        "startLine": 917,
        "startChar": 2,
        "endLine": 921,
        "endChar": 3
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06119661_d4576df5",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 921,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-30T07:00:24Z",
      "side": 1,
      "message": "Thought about this again. In current implementation, if something fails during creating the cpi, then setjmp(cm-\u003eerror-\u003ejmp) is true, and it calls\n av1_remove_compressor(cpi);\n return 0;\nSo, encoder initialization fails. Couldn\u0027t see how ppi created before this cpi is destroyed, right?",
      "parentUuid": "2f31af15_cb01c941",
      "range": {
        "startLine": 917,
        "startChar": 2,
        "endLine": 921,
        "endChar": 3
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26a5447a_2d3c350d",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 921,
      "author": {
        "id": 24958
      },
      "writtenOn": "2021-04-30T17:49:40Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nPlease find our understanding of the existing logic (before the introduction of ppi) below.\n1. When an error occurs during creation of cpi, av1_remove_compressor() is called to free cpi, and returns with 0. The caller (create_context_and_bufferpool()) returns with AOM_CODEC_MEM_ERROR to encoder_init(), which in turn returns to aom_codec_enc_init_ver() with AOM_CODEC_MEM_ERROR.\n2. aom_codec_enc_init_ver(), on seeing AOM_CODEC_MEM_ERROR, calls encoder_destroy() to delete the instance.\n3. During 1, only cpi is freed, whereas the buffer pools, frame stats buffer and prior cpi (in case step 1 is caused by cpi_lap) are still alive. These get freed during encoder_destroy() of 2.\n\nThe current CL uses similar logic as detailed below.\n1. When an error occurs during the creation of any of the cpis, only that cpi is freed through av1_remove_compressor(), and encoder_init() returns with AOM_CODEC_MEM_ERROR.\n2. aom_codec_enc_init_ver() calls encoder_destroy(), which frees the buffer pools, frame stats buffer, prior cpis and ppi.\n\nWhen an error occurs during the creation of ppi, av1_remove_primary_compressor() is called, which frees ppi. Encoder_init returns with AOM_CODEC_MEM_ERROR, causing aom_codec_enc_init_ver() to call encoder_destroy().\n\nThus the error handling logic of the current CL during av1_create_compressor() is similar to that in the existing implementation. Please let us know your thoughts.",
      "parentUuid": "06119661_d4576df5",
      "range": {
        "startLine": 917,
        "startChar": 2,
        "endLine": 921,
        "endChar": 3
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91c79761_4e4eb0bc",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 1
      },
      "lineNbr": 921,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-04-30T20:42:54Z",
      "side": 1,
      "message": "Thanks for double checking the logic and providing the details. Yes, now I see encoder_destroy is called after initialization fails. What you have done sounds right.",
      "parentUuid": "26a5447a_2d3c350d",
      "range": {
        "startLine": 917,
        "startChar": 2,
        "endLine": 921,
        "endChar": 3
      },
      "revId": "fd888f96559a8da9b526a7aff8c345a50588d604",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}