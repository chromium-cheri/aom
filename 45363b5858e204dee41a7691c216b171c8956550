{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4daf0091_47b3a832",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-11T17:10:19Z",
      "side": 1,
      "message": "In this patch,  we have added a speed feature to prune reference frames for single prediction modes. Specifically,  those reference frames which are not the closest to the current frame and with  pred_mv_sad \u003e thresh  * best_pred_mv_sad are  pruned. The results are as follows::\n```\n                 Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim   \n 5       LOWRES2      1.089         0.0017    -0.0076   -0.0639 \n 5       MIDRES2      1.041         0.0113     0.0125    0.0058 \n 5        HDRES2      1.015        -0.0487    -0.0498   -0.1081 \n 5       Average      1.049        -0.0119    -0.0150   -0.0554 \n\n 6       LOWRES2      0.897         0.0330     0.0453    0.0539\n 6       MIDRES2      2.169         0.0030     0.0008   -0.0030\n 6        HDRES2      2.122         0.0009     0.0064    0.0069\n 6       Average      1.729         0.0123     0.0175    0.0193\n```\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc",
      "revId": "45363b5858e204dee41a7691c216b171c8956550",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c179d52_4ebbc99a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-11T21:17:01Z",
      "side": 1,
      "message": "Nice speedup and tradeoff! Good to know that this strategy works well. As we always asked, is it possible to move this to lower speeds? Thanks.",
      "parentUuid": "4daf0091_47b3a832",
      "revId": "45363b5858e204dee41a7691c216b171c8956550",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b60264ba_46bbd055",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2023-08-14T12:56:12Z",
      "side": 1,
      "message": "Thanks. We tested this logic for speed 4. The results are as follows:\n```\n                 Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim  \n 4       LOWRES2      0.424         0.0901     0.0921    0.1120 \n 4       MIDRES2      0.870         0.0406     0.0298    0.0152 \n 4        HDRES2      0.763        -0.0173     0.0007    0.0765 \n 4       Average      0.686         0.0378     0.0408    0.0679 \n```\nIt seems the trade-off is not good. Thus, the sf is not extended to speed 4.",
      "parentUuid": "9c179d52_4ebbc99a",
      "revId": "45363b5858e204dee41a7691c216b171c8956550",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76269f32_072f534c",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 3
      },
      "lineNbr": 3927,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-08-11T21:17:01Z",
      "side": 1,
      "message": "Looks good that only non-closest refs are pruned.",
      "range": {
        "startLine": 3927,
        "startChar": 10,
        "endLine": 3927,
        "endChar": 25
      },
      "revId": "45363b5858e204dee41a7691c216b171c8956550",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "45363b5858e204dee41a7691c216b171c8956550",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "45363b5858e204dee41a7691c216b171c8956550",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "45363b5858e204dee41a7691c216b171c8956550",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}