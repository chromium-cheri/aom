{
  "comments": [
    {
      "key": {
        "uuid": "4041c83f_1856d415",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-08T05:30:19Z",
      "side": 1,
      "message": "The only issue I see here is that on the checking of \"cx_data_sz \u003e\u003d ctx-\u003ecx_data_sz / 2\", cx_data_size does not consider the potential non-zero superframe index size. But since cx_data_sz has been initialized as a big number and this checking is pretty loose, it should not cause any problem, even though it may be fully safe to have the following checking:\n\ncx_data_sz - 256 \u003e\u003d ctx-\u003ecx_data_sz / 2",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7846d293_24f0348b",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-08T14:48:52Z",
      "side": 1,
      "message": "Thanks Zoe, that\u0027s some good insight.\n\nWhat does 256 represent?\n\nWhen I print out the index_size returned by write_superframe_index I only get 6.",
      "parentUuid": "4041c83f_1856d415",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7560b34_6ed567cc",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-08T16:50:21Z",
      "side": 1,
      "message": "You are right that the index_size is most likely a very small number. But theoretically as the syntax allows an arbitrary number of no-show frames, index_size could be much larger. I simply grabbed the maximum buffer size (which is 256) for the marker, i.e. the superframe index designed inside write_superframe_index().",
      "parentUuid": "7846d293_24f0348b",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8923d5ef_71f0c5eb",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-09T02:39:42Z",
      "side": 1,
      "message": "Thanks for explaining 256,\n\nLooking at the code in write_superframe_index(), we could determine an upper limit on the index_size by using 4 * (ctx-\u003epending_frame_count -1) + 2 this would be more precise than 256. What do you think?",
      "parentUuid": "b7560b34_6ed567cc",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a14ca7b_348bdc19",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-15T02:45:05Z",
      "side": 1,
      "message": "This is surely better!\n\nSorry for the delay - have been on vacation and will be back to work tomorrow (08/15)",
      "parentUuid": "8923d5ef_71f0c5eb",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb58cb97_29e5fac6",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1262,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-07T22:12:01Z",
      "side": 1,
      "message": "We need the index_size and update the cx_data pointer accordingly:\nunsigned char *cx_data \u003d ctx-\u003ecx_data\n\nDue to the above, if no index_size is obtained, then there will be no index written to a superframe, which is against the design of the essence of a superframe.",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df11f2b5_a33a6965",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1262,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-08T05:15:57Z",
      "side": 1,
      "message": "Please ignore this comment as I did not realize the checking of \u0027!is_frame_invisible\u0027 in the above while loop.",
      "parentUuid": "fb58cb97_29e5fac6",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bdfb4fd_27c76ade",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1262,
      "author": {
        "id": 5200
      },
      "writtenOn": "2017-08-08T05:28:33Z",
      "side": 1,
      "message": "The return value of write_superframe_index() is indeed no use at all, as both ctx-\u003epending_cx_data and ctx-\u003epending_cx_data_sz have been taken care of inside the function, and we do not need to update any other variables including cx_data.",
      "parentUuid": "df11f2b5_a33a6965",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c0079c1_a4b2a890",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 5
      },
      "lineNbr": 1262,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-08-08T14:48:52Z",
      "side": 1,
      "message": "Great! Thanks for looking into this",
      "parentUuid": "5bdfb4fd_27c76ade",
      "revId": "345dcfb6f6b169d400de1daece93cf8cd2c6cabc",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}