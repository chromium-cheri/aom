{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "34672f86_4d08c13b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-17T18:35:01Z",
      "side": 1,
      "message": "Please see my comment in aom/aomcx.h on the pros and cons of the current approach and an alternative.",
      "revId": "278c5845670a89dfb29a38a3cd962f56a5f495b2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3377278b_7f7c134f",
        "filename": "aom/aomcx.h",
        "patchSetId": 1
      },
      "lineNbr": 1520,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-17T18:35:01Z",
      "side": 1,
      "message": "In the current approach, the version of the `aom_svc_params_t` struct is encoded in the codec control id. If we rarely extend the `aom_svc_params_t` struct, this is simpler, because the `AOM_CTRL_AV1E_SET_SVC_PARAMS_V*` macro also indicates which new fields are present in `aom_svc_params_t`.\n\nOn the other hand, if we expect to add new fields to `aom_svc_params_t` frequently, then this approach will end up with many codec control ids such as `AV1E_SET_SVC_PARAMS_V2`, `AV1E_SET_SVC_PARAMS_V3`, and `AV1E_SET_SVC_PARAMS_V4`. In that case, a better alternative is to just add a `AV1E_SET_SVC_PARAMS_VERSIONED` codec control id and pass the version number to it. In this alternative approach, we will need a new macro (the current version of `aom_svc_params_t`) to indicate which new fields are present in `aom_svc_params_t`.",
      "revId": "278c5845670a89dfb29a38a3cd962f56a5f495b2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}