{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a3fff7d4_9a396315",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-01T17:16:40Z",
      "side": 1,
      "message": "Typo: The original code to the left of the arrow should read `(ASSERT|EXPECT)_TRUE(ptr !\u003d NULL)`.",
      "revId": "ff1bca4e23e18e06036c6e2696dbda53ed2266f2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "153ac035_d7c34eff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-04-29T19:22:31Z",
      "side": 1,
      "message": "\u003e Patch Set 2: Verified-1 -Code-Review\n\u003e \n\u003e Build Failed \n\u003e \n\u003e https://build.aomedia.org/jenkins/job/libaom__commit_trigger/67574/ : FAILURE\n\u003e \n\u003e In the list of tests click on the number next to the failed (red) test.\n\u003e If the test has multiple configurations, click on one of the failed (red)\n\u003e configurations. Look at the console log to see the relevant commands (like\n\u003e cmake, test_libaom etc) and the failure.\n\u003e Note: for some static analysis / sanitizer warnings, Jenkins parses the warning\n\u003e from the console log and directly provides a link like \"one new warning\".\n\nI committed patchset 2 too soon and then got distracted.",
      "revId": "ff1bca4e23e18e06036c6e2696dbda53ed2266f2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8a70d2f_7915c648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-01T17:16:40Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "ff1bca4e23e18e06036c6e2696dbda53ed2266f2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bbfb687_46e44656",
        "filename": "test/tpl_model_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-05-01T17:16:40Z",
      "side": 1,
      "message": "Nit: I suggest two changes to this comment.\n\n1. [This is a pre-existing issue.] Change\n```\n  use \"new\"\n```\nto\n```\n  use heap allocation instead of stack allocation\n```\nor\n```\n  allocate TplParams from the heap rather than on the stack\n```\n\nThe current wording is ambiguous because we could interpret it as \u0027We use \"new\" instead of aom_malloc\u0027. It turns out it means \"We use \"new\" instead of allocating TplParams on the stack\". See\nhttps://aomedia-review.googlesource.com/c/aom/+/151241/1..5\n\n2. It would be good to explain why we need to use the non-throwing new here.",
      "revId": "ff1bca4e23e18e06036c6e2696dbda53ed2266f2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac00edfc_dfdd9cc5",
        "filename": "test/tpl_model_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-04-29T21:53:53Z",
      "side": 1,
      "message": "This needed more work due to a (false) static analysis failure for leaked memory on the next line in patchset 1.",
      "revId": "ff1bca4e23e18e06036c6e2696dbda53ed2266f2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}