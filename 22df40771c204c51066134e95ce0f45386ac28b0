{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e587648c_ed01ce92",
        "filename": "aom_dsp/quantize.c",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-12-10T17:19:58Z",
      "side": 1,
      "message": "Debargha, this is the place I have question about. the original AV1 inverse quantization just right shift the value of (tmp32 * dequant), but the updated code uses rounding shift. we need to decide which one to use.",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "22df40771c204c51066134e95ce0f45386ac28b0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfa02064_dad39322",
        "filename": "aom_dsp/quantize.c",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 5189
      },
      "writtenOn": "2020-12-11T03:58:47Z",
      "side": 1,
      "message": "Hi Ryan, this is the b quantizer that is triggered only when trellis quant is turned off. I believe therefore this is not used in cpu-used\u003d0 that I tested. When I did this part I felt the new code in EXT_QUANT is better than the old code, but did not change the old code since I did not want to touch the corresponding SIMD code that needs to be compatible to make sure the tests pass. However we can try the old way, i.e. just shift and then test which one is better when trellis is off.",
      "parentUuid": "e587648c_ed01ce92",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 7
      },
      "revId": "22df40771c204c51066134e95ce0f45386ac28b0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec14274b_b269bc61",
        "filename": "av1/decoder/decodetxb.c",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-12-10T17:19:58Z",
      "side": 1,
      "message": "here is how inverse quantization is done in decoder.",
      "range": {
        "startLine": 329,
        "startChar": 6,
        "endLine": 329,
        "endChar": 7
      },
      "revId": "22df40771c204c51066134e95ce0f45386ac28b0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e47ed530_f0cdd24a",
        "filename": "av1/encoder/av1_quantize.c",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 11876
      },
      "writtenOn": "2020-12-10T17:19:58Z",
      "side": 1,
      "message": "here how inverse quantization is implemented for quantize_fp function. you can see it uses rounding right shift.",
      "range": {
        "startLine": 82,
        "startChar": 10,
        "endLine": 82,
        "endChar": 11
      },
      "revId": "22df40771c204c51066134e95ce0f45386ac28b0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}