{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "04bb6f8e_1269b923",
        "filename": "aom_dsp/x86/highbd_intrapred_sse2.c",
        "patchSetId": 4
      },
      "lineNbr": 824,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-07-29T22:10:35Z",
      "side": 1,
      "message": "It is this change and the change in line 845 that introduced the oss-fuzz bugs. I think the right shift in the next line and in line 846 requires a logical shift.\n\nNote that division in lines 827, 848, 872, 899, etc. also behaves differently if sum32 is negative.",
      "revId": "cbbc5cc3ab19003937bd97ebcea811961eb42736",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "245e8cf8_76d7119b",
        "filename": "aom_dsp/x86/highbd_intrapred_sse2.c",
        "patchSetId": 4
      },
      "lineNbr": 824,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-08-03T20:54:17Z",
      "side": 1,
      "message": "\u003e It is this change and the change in line 845 that introduced the oss-fuzz bugs. I think the right shift in the next line and in line 846 requires a logical shift.\n\u003e \n\u003e Note that division in lines 827, 848, 872, 899, etc. also behaves differently if sum32 is negative.\n\nRight, I mentioned that in the revert change too. The fix is here:\nhttps://aomedia-review.googlesource.com/c/aom/+/160722/1..3/aom_dsp/x86/highbd_intrapred_sse2.c\nhttps://aomedia-review.googlesource.com/c/aom/+/160722/1..3",
      "parentUuid": "04bb6f8e_1269b923",
      "revId": "cbbc5cc3ab19003937bd97ebcea811961eb42736",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}