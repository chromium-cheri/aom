{
  "comments": [
    {
      "key": {
        "uuid": "81f7283b_c6d94b6e",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-13T20:21:34Z",
      "side": 1,
      "message": "Zhijie, Elliott: The new code seems equivalent to the old code. Could you explain under what conditions the new code behaves differently? Thanks.",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd14a138_3dd824f7",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 5305
      },
      "writtenOn": "2018-11-13T21:16:52Z",
      "side": 1,
      "message": "For example, if a bitstream has two sequences, the first sequence is 10-bit and second one is 8-bit, the old code always outputs 10-bit result while the new code outputs 10-bit result for the 1st sequence and 8-bit result for the 2nd.",
      "parentUuid": "81f7283b_c6d94b6e",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50ac6cb6_ecadb4a9",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 10034
      },
      "writtenOn": "2018-11-13T21:16:56Z",
      "side": 1,
      "message": "Wan-Teh, thank you for the careful review. I took a look through again and I mis-read it the first time. I thought this was adding a new flag but it is re-using the old flag name.\n\nI will wait for Zhijie to comment.",
      "parentUuid": "81f7283b_c6d94b6e",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6488da2d_88b7f1ea",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 10034
      },
      "writtenOn": "2018-11-13T21:49:06Z",
      "side": 1,
      "message": "Can you elaborate on how that would work? The way I see it, before the change:\n\n* output_bit_depth gets the value from the flag --output-bit-depth\n* if it is not set, then it gets it from the codec bit depth\n\n\nAfter the change:\n* output_bit_depth does not get the value from the flag; instead fixed_output_bit_depth does\n* Same checks as before, but with fixed_output_bit_depth instead\n\nI don\u0027t see the difference in behavior. If you could provide clarification, it would be appreciation.",
      "parentUuid": "50ac6cb6_ecadb4a9",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "220d6db4_ffe52c6a",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-13T22:19:05Z",
      "side": 1,
      "message": "Zhejie: I can prove that after this if statement is executed, output_bit_depth has the same value in the original code and in the new code. Please check my proof. Is there a logical flaw in the proof?\n\nProof:\n\nRight before we execute the if statement at line 883, fixed_output_bit_depth in the new code has the same value as output_bit_depth in the original code.\n\nThe if statement in the original code is:\n\n        if (!output_bit_depth \u0026\u0026 single_file \u0026\u0026 !do_md5) {\n          output_bit_depth \u003d img-\u003ebit_depth;\n        }\n\nIt is equivalent to the following if statement, which a dummy else branch added:\n\n        if (!output_bit_depth \u0026\u0026 single_file \u0026\u0026 !do_md5) {\n          output_bit_depth \u003d img-\u003ebit_depth;\n        } else {\n          output_bit_depth \u003d output_bit_depth;\n        }\n\nNow, if we replace output_bit_depth with fixed_output_bit_depth in the conditional expression and on the right hand side of the second assignment, we end up with the if statement in the new code:\n\n        if (!fixed_output_bit_depth \u0026\u0026 single_file \u0026\u0026 !do_md5) {\n          output_bit_depth \u003d img-\u003ebit_depth;\n        } else {\n          output_bit_depth \u003d fixed_output_bit_depth;\n        }\n\nTherefore, the original code and the new code set output_bit_depth to the same value after the their respective if statement is executed.",
      "parentUuid": "6488da2d_88b7f1ea",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aad8166a_8f0743d9",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 5305
      },
      "writtenOn": "2018-11-13T22:31:46Z",
      "side": 1,
      "message": "Wan-Teh, Elliott: the difference is that when the bit depth changes within a bitstream, in the old code the output_bit_depth will not change accordingly since it has already been assigned to the bit depth of the previous sequence. In the new code, as long as the output bit depth is not specified in the command line, fixed_output_bit_depth stays 0 and the output_bit_depth will always be updated according to the bitstream value.",
      "parentUuid": "220d6db4_ffe52c6a",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f037e12_5a0caa4d",
        "filename": "apps/aomdec.c",
        "patchSetId": 2
      },
      "lineNbr": 888,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-13T22:40:16Z",
      "side": 1,
      "message": "Zhejie: I see that now. This if statement is inside a loop, so it is executed multiple times. I missed that in my proof. Thanks!\n\nGiven this, I think it is clearer to take advantage of C99\u0027s ability to declare variables in the middle of a block and declare output_bit_depth right before this if statement. Specifically, delete line 471, and add the following before line 884:\n\n        // Default to codec bit depth if output bit depth not set\n+       unsigned int output_bit_depth;\n        if (!fixed_output_bit_depth \u0026\u0026 single_file \u0026\u0026 !do_md5) {",
      "parentUuid": "aad8166a_8f0743d9",
      "revId": "2b848e99d16c62da9c8b9dd9cd8d24933ec5f288",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}