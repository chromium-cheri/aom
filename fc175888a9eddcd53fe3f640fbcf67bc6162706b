{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "89e3517c_49aa1683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8893
      },
      "writtenOn": "2021-03-11T15:55:16Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nIn the current codebase, tpl model was used to decide if a shorter gf interval is better. In this patch, we have considered using GF boost and an approximate tpl model to shorten the gop length, i.e., GF interval is shortened when both the conditions listed below are satisfied. \n\n1. GF boost is low : Smaller boost indicates lesser predictability of other frames from the base layer ARF.\n2. The dependency factor of base layer ARF by only the next layer ARF is low : TPL stats calculation is done only for base layer and the next layer ARF. The dependency factor of base layer ARF by the next layer ARF is calculated and compared against a threshold. \n\nThe above conditions are generally true for temporally complex contents and in such cases it is preferred to have a shorter gf interval. \n\nWe have renamed the already existing speed feature \u0027disable_gop_length_decision\u0027 to \u0027gop_length_decision_method\u0027 which takes a value of 0, 1, 2.  When gop_length_decision_method \u003d 2, gop length decision is disabled. When set to 0, the original tpl model decides the gop length. When set to 1, the approximate gop length decision as in this patch is enabled. Currently, this feature is enabled for speed 5. \n\nAlso, some refactoring changes are done in the function av1_calc_arf_boost(). Previously, the number of frames over which boost is calculated, i.e., \u0027num_fpstats_used\u0027 was populated only in case of single pass encoding with lap enabled. As, \u0027num_fpstats_used\u0027 is required for approximate gop length decision in two pass case, we are populating the variable \u0027num_fpstats_used\u0027 always. \n\n                      Instruction Count     BD-Rate Loss(%)\ncpu-used  Resolution    Reduction(%)    avg.psnr  ovr.psnr   ssim \n    5        LOWRES        8.608        0.3984     0.3431   0.2461 \n    5        MIDRES        8.931        0.0179    -0.0542  -0.4531 \n    5        HDRES         7.812       -0.2034    -0.1683  -0.1581 \n    5        Average       8.485        0.1036     0.0709  -0.0818 \n\t\nIn the commit message, BD-Rate Loss column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using command:\n$ perf stat -e instructions:u ./aomenc â€¦\n\nWe tried extending this sf to speed 4. The results are as follows: \n\n                      Instruction Count     BD-Rate Loss(%)\ncpu-used  Resolution    Reduction(%)    avg.psnr  ovr.psnr   ssim \n    4      LOWRES           5.911        0.3155    0.2743   0.1329\n    4      MIDRES           6.284        0.1436    0.0990  -0.2690 \n    4      HDRES            5.214       -0.1607   -0.1097  -0.2006\n    4      Average          5.825        0.1200    0.1059  -0.0864\n        \n\nFrom the data above we see that lowres is not as per trade-off for avg.psnr, i.e., the BD-Rate to instruction count reduction ratio is 1 / 18.73 (expected ratio is 1 / 20). However, on an average (lowres, midres and hdres) the BD-Rate to instruction count reduction ratio is 1 / 48.54. Please let us know if we should extend this sf to speed 4 as well.\n\nPlease review this patch. \n\nThanks           ",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "496fe154_3588f4ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-12T00:46:43Z",
      "side": 1,
      "message": "Really good speedup! The tradeoff for speed 4 looks fine. Lowres tradeoff is close enough. Also, for speed 4, we probably focus more on higher res.",
      "parentUuid": "89e3517c_49aa1683",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4a1165f_4a1d3aca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-03-12T09:09:15Z",
      "side": 1,
      "message": "FYI, ugc set performance loss \u003e 0.5%",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b51cd0b7_b9d24c85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-15T22:17:56Z",
      "side": 1,
      "message": "I am running tests, and will update.",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47bd98a9_2989e0ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-16T17:52:12Z",
      "side": 1,
      "message": "Here are my borg results:\nspeed 5/patchset 4 borg test results:\n         avg_psnr:  ovr_psnr:  ssim:  speedup:\nmidres2:  0.145     -0.035    -0.204   9.3\nugc360p:  0.734      0.512     0.257  10.8\n\nIt seems the criteria in this CL was tuned well for regular clips (e.g. midres2 set), but didn\u0027t work well for ugc clips.",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84bb18d0_c77fdf0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5022
      },
      "writtenOn": "2021-03-17T14:48:24Z",
      "side": 1,
      "message": "please update the actual loss in UGC context. thanks",
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e28252ff_ae9b4326",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 3665,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-17T04:47:14Z",
      "side": 1,
      "message": "What is the result without this condition?",
      "range": {
        "startLine": 3664,
        "startChar": 14,
        "endLine": 3665,
        "endChar": 69
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb1699e8_b346d65c",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 3665,
      "author": {
        "id": 8893
      },
      "writtenOn": "2021-03-17T14:49:42Z",
      "side": 1,
      "message": "Please find the results below (without the gfu boost condition)\n\n                      Instruction Count     BD-Rate Loss(%)\ncpu-used  Resolution    Reduction(%)    avg.psnr  ovr.psnr   ssim \n    5       LOWRES\t    7.317\t 0.2464\t   0.2791    0.1491\t\n    5       MIDRES\t    7.969\t 0.1941\t   0.1274    0.1699\t\n    5       HDRES\t    7.242       -0.0936\t  -0.0722   -0.1105\t\n    5       Average\t    7.457\t 0.1274\t   0.1276    0.0760",
      "parentUuid": "e28252ff_ae9b4326",
      "range": {
        "startLine": 3664,
        "startChar": 14,
        "endLine": 3665,
        "endChar": 69
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "007a0683_618ff8f5",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 3666,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-12T00:46:43Z",
      "side": 1,
      "message": "The tpl stats from this approximate tpl model will be actually used later for gop_length\u003d32, right? If true, no valid stats is available for frames beyond base+1 layer? Is this intended or am I missing anything?",
      "range": {
        "startLine": 3666,
        "startChar": 15,
        "endLine": 3666,
        "endChar": 34
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cf68459_56405460",
        "filename": "av1/encoder/pass2_strategy.c",
        "patchSetId": 4
      },
      "lineNbr": 3666,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-16T17:52:12Z",
      "side": 1,
      "message": "Looked it again. Second tpl stats call always happens since is_temporal_filter_enabled \u003d 0.",
      "parentUuid": "007a0683_618ff8f5",
      "range": {
        "startLine": 3666,
        "startChar": 15,
        "endLine": 3666,
        "endChar": 34
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0ecda25_b097ee7e",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 4
      },
      "lineNbr": 1596,
      "author": {
        "id": 5185
      },
      "writtenOn": "2021-03-17T04:47:14Z",
      "side": 1,
      "message": "Originally, use\n(beta[0] \u003e\u003d beta[1] + 0.7) \u0026\u0026 beta[0] \u003e 8.0;\nWhy is this changed? What is the difference?",
      "range": {
        "startLine": 1596,
        "startChar": 2,
        "endLine": 1596,
        "endChar": 44
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39cb4787_c0d3c7ca",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 4
      },
      "lineNbr": 1596,
      "author": {
        "id": 8893
      },
      "writtenOn": "2021-03-17T14:49:42Z",
      "side": 1,
      "message": "In the original version\n1. beta[0] \u003e 8.0 corresponds to base layer ARF having a higher dependency factor\n2. beta[0] \u003e\u003d beta[1] + 0.7 corresponds to the base layer ARF having a higher dependency factor than the (base + 1) layer ARF\nWhen both the above conditions are satisfied gop_length is chosen as 32.\n\nIn our patch\n1. beta[0] \u003e 1.1 : beta[0] corresponds to the dependency factor of base layer ARF by only the (base + 1) layer ARF being high (TPL stats calculation is done only for base layer and the (base + 1) layer ARF).\n2. \"rc-\u003egfu_boost \u003e\u003d rc-\u003enum_stats_used_for_gfu_boost * GF_MIN_BOOST * 1.4\" : Larger boost indicates good predictability of other frames from the base layer ARF.\nWhen either of the above conditions are satisfied gop_length is chosen as 32.",
      "parentUuid": "a0ecda25_b097ee7e",
      "range": {
        "startLine": 1596,
        "startChar": 2,
        "endLine": 1596,
        "endChar": 44
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f35e197_4b05d803",
        "filename": "av1/encoder/tpl_model.c",
        "patchSetId": 4
      },
      "lineNbr": 1596,
      "author": {
        "id": 8893
      },
      "writtenOn": "2021-04-01T14:24:12Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nWhen we rebased this patch to commit ab20d3702a3cbd0511ed52c4dc0cc69927d9e4e3 internally, following are the results:\n\nExperiment 1:\n\n cpu-used Resolution Instruction Count \t       BD-Rate Loss (%)\n\t\t\tReduction (%)     avg.psnr   ovr.psnr   ssim\n  4\t   LOWRES\t   6.27\t          0.2969     0.2958\t0.0903\n  4\t   MIDRES\t   6.045\t  0.0280     0.0408    -0.3534\n  4\t   HDRES\t   5.262\t -0.1083    -0.0231    -0.0218\n  4\t   Average\t   5.959\t  0.0947     0.1239    -0.0737\n  4\t   ugc360p\t   7.621\t  0.4824     0.2218\t0.2127\n\t\t\t\t\t\n  5\t   LOWRES\t   8.803\t  0.356\t     0.3347\t0.2350\n  5\t   MIDRES\t   8.304\t  0.0555     0.0144    -0.1967\n  5\t   HDRES\t   7.779\t -0.0474    -0.0293\t0.1579\n  5\t   Average\t   8.421\t  0.1450     0.1300\t0.0851\n  5\t   ugc360p\t   9.082\t  0.4555     0.2140\t0.0238\n\nWe see that the BD-Rate drop of ugc360p at speed\u003d5 has reduced to 0.45% (on the earlier version it was 0.73%). This is because of the commit 930da799c90933d22459869147799d3b470c2b59 which improves the GF length calculation. \n\nThe BD-Rate to instruction count reduction ratio (trade-off ratio) for ugc360p at speed\u003d5 is 1/19.9 (well within the expected ratio of 1/10). \nHowever, the same is not true at speed\u003d4 for ugc360p where the trade-off ratio  is 1/15.8 (not within the expected ratio of 1/20).\n\nWe analysed some of the contents in the UGC test set with higher BD-Rate loss. Following are the reasons for the BD-Rate loss.\n- If \u0027gfu_boost\u0027 is larger â€˜max_gop_lengthâ€™ of 32 is chosen. \u0027gfu_boost\u0027 captures the temporal complexity of frames 0-32. However, it does not compare the temporal complexity of the frames 0-16 and 16-32 to decide the â€˜max_gop_lengthâ€™.\n- As tpl calculation is done for base layer and (base + 1) layer ARF only, \u0027beta[0]â€™ captures the dependency of (base+1) layer ARF on base layer ARF. If â€˜beta[0]â€™ is higher,  â€˜max_gop_lengthâ€™ of 32 is chosen. However, the dependency of other frames on (base + 1) layer ARF (beta[1]) is not considered. Specifically, the check if the base layer ARF has higher dependency factor than the (base + 1) layer ARF is missing.\n- The base layer ARF is not temporally filtered before tpl stats calculation. Noise/artifacts present in UGC contents seem to require the base layer ARF to be temporally filtered to get a reliable estimate of beta[0] and beta[1]. \n\nWe conducted the following experiments to mitigate the above issues:\n\nExperiment 2 : \nDo tpl stats calculation for base layer ARF, (base+1) layer ARF and (base+2) layer ARF and thereby calculate beta[0], beta[1]. Temporally filter the base layer ARF before tpl calculation. The gf length decision criteria is as follows (â€˜gfu_boostâ€™ is not considered):\n\n if (beta[0] \u003e\u003d beta[1] + 0.1) \u0026\u0026 beta[0] \u003e 1.4\n   max_gop_length \u003d 32\n else \n   max_gop_length \u003d 16\n\nFollowing are our observations based on the results below:\n- BD-Rate drop of ugc360p at speed\u003d5 has reduced to 0.26%.  \n- The BD-Rate to instruction count reduction ratio (trade-off ratio) for ugc360p at speed\u003d5 is 1/17. \n- At speed\u003d4 for ugc360p the trade-off ratio  is 1/14.9 (not within the expected ratio of 1/20).\n- The speed-up is reduced by ~4% as compared to â€˜Experiment 1â€™ due to the temporal filtering of base layer ARF and tpl stats calculation of (base+2) layer ARFs.\n\n\n cpu-used  Resolution  Instruction Count \tBD-Rate Loss (%)\n\t\t\t Reduction (%)   avg.psnr  ovr.psnr   ssim\n  4\t   LOWRES\t   3.861\t 0.0742\t    0.0748   -0.1282\n  4\t   MIDRES          3.154\t-0.2431\t   -0.2036   -0.4949\n  4\t   HDRES\t   3.434\t-0.3893\t   -0.3763   -0.5831\n  4\t   Average         3.58\t        -0.1600\t   -0.1442   -0.3742\n  4 \t   ugc360p         3.567\t 0.2386\t    0.2139    0.1105\n\t\t\t\t\t\n  5\t   LOWRES\t   5.324\t 0.0691\t    0.0321   -0.0846\n  5\t   MIDRES\t   4.388\t-0.0505\t   -0.0610   -0.2412  \n  5\t   HDRES\t   4.345\t-0.1199\t   -0.1476   -0.2210\n  5\t   Average\t   4.847\t-0.0235\t   -0.0499   -0.1720\n  5\t   ugc360p\t   4.373\t 0.2570\t    0.2659    0.1274\n\n\nExperiment 3 :\nIn order to further reduce the BD-Rate loss, we considered doing GF length decision based on complete tpl stats for a range of beta[0], beta[1] values, i.e., GF length decision criteria is as follows:\n\n if (beta[0] \u003e 1.6 \u0026\u0026 beta[0] \u003e\u003d beta[1] + 0.4)\n  max_gop_length \u003d 32;\n else if (beta[0] \u003c\u003d 1.4 || beta[0] \u003c beta[1] + 0.1)\n   max_gop_length \u003d 16;\n else\n  Revert to complete tpl to decide the gop length \n\nFollowing are our observations based on the results below:\n- BD-Rate drop of ugc360p at speed\u003d5 has further reduced to 0.12%.  \n- The BD-Rate to instruction count reduction ratio (trade-off ratio) for ugc360p at speed\u003d5 is 1/20.7. \n- At speed\u003d4 for ugc360p the trade-off ratio  is 1/20.4 \n\n cpu-used  Resolution  Instruction Count \tBD-Rate Loss (%)\n\t\t\t Reduction (%)   avg.psnr  ovr.psnr   ssim\n   4\t    LOWRES\t   2.118\t 0.0507\t    0.0467    0.0096\n   4\t    MIDRES\t   1.557\t-0.0582\t   -0.0326   -0.1047\n   4\t    HDRES\t   1.631\t-0.0869\t   -0.1042   -0.0626   \n   4\t    Average\t   1.857\t-0.0231\t   -0.0225   -0.0459\n   4\t    ugc360p\t   1.793\t 0.0877\t    0.0089    0.0479\n\t\t\t\t\t\n   5\t    LOWRES\t   3.186\t-0.0163\t   -0.0158   -0.0181\n   5\t    MIDRES\t   2.552\t 0.0155\t   -0.0096   -0.0197\n   5\t    HDRES\t   2.894\t-0.0703\t   -0.1075   -0.0739\n   5\t    Average\t   2.957\t-0.0235\t   -0.0419   -0.0356\n   5\t    ugc360p\t   2.497\t 0.1205\t    0.0491    0.1536\n\n\nBased on the above results, for ugc360p at speed 5 â€˜Experiment 1â€™ and â€˜Experiment 3â€™ seem to give a trade-off ratio of 1/19.9 and 1/20.7 respectively. As â€˜Experiment 1â€™ gives considerable speed-up as compared to â€˜Experiment 3â€™ with similar trade-off ratios â€˜Experiment 1â€™ should be considered for speed\u003d5 preset.\n\nAs â€˜Experiment 3â€™ achieves the required trade-off ratio of 1/20 for speed\u003d4 the same can be considered. However, none of the above experiments meet the required trade-off ratio for speed\u003d3 for ugc360p.\n\nPlease let us know your opinion. \n\nThank you",
      "parentUuid": "39cb4787_c0d3c7ca",
      "range": {
        "startLine": 1596,
        "startChar": 2,
        "endLine": 1596,
        "endChar": 44
      },
      "revId": "fc175888a9eddcd53fe3f640fbcf67bc6162706b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}