{
  "comments": [
    {
      "key": {
        "uuid": "f8e08055_210a19a7",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 8
      },
      "lineNbr": 207,
      "author": {
        "id": 5260
      },
      "writtenOn": "2018-03-21T20:03:35Z",
      "side": 1,
      "message": "Is it possible to have a decoder option to allow the operating point to be selected?\n\nThis could be useful for conformance testing as the normative output of the decoder depends on which operating point is selected.",
      "revId": "7e0f98ff6e6f860cc3377ed23ee3418e55444bc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2028493e_171396f0",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 8
      },
      "lineNbr": 207,
      "author": {
        "id": 7963
      },
      "writtenOn": "2018-03-21T20:34:56Z",
      "side": 1,
      "message": "I\u0027m not sure I understand exactly what you are saying here.  I don\u0027t think it is a \"decoder option\" to choose which operating mode is decoded.  The operating mode is NOT chosen.  It is determined normatively by two things:  what\u0027s in the bitstream, plus \"what kind of decoder you are\" (in the sense what profile/level does your decoder support)  What COULD be put in as an option is to decide what level your decoder supports.  Since libaom is THE reference decoder, I am assuming it is a decoder that handle ALL levels.  I guess we could put in an option to say \"support only up to level xx\". I think that would be nice-to-have, but perhaps beyond the scope of this patch? Please correct me if my understanding is wrong (it could very well be)",
      "parentUuid": "f8e08055_210a19a7",
      "revId": "7e0f98ff6e6f860cc3377ed23ee3418e55444bc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4150fe6_80c6dd08",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 8
      },
      "lineNbr": 533,
      "author": {
        "id": 5260
      },
      "writtenOn": "2018-03-21T20:03:35Z",
      "side": 1,
      "message": "Don\u0027t we need to use this check for other OBUs as well?\n\nAt the moment I think show_existing_frame will be triggered for enhancement layers outside the current operating point.",
      "revId": "7e0f98ff6e6f860cc3377ed23ee3418e55444bc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02e97494_ee521394",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 8
      },
      "lineNbr": 533,
      "author": {
        "id": 7963
      },
      "writtenOn": "2018-03-21T20:34:56Z",
      "side": 1,
      "message": "I think we need this for frame_header obus.  We can\u0027t do it for sequence_header_obu\u0027s because that\u0027s where the operating_mode info is located.  I guess we should do it for metadata obus as well.  I will fix",
      "parentUuid": "b4150fe6_80c6dd08",
      "revId": "7e0f98ff6e6f860cc3377ed23ee3418e55444bc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}