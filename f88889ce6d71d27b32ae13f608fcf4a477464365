{
  "comments": [
    {
      "key": {
        "uuid": "a70872d6_e918f60d",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 3276,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-03-23T07:24:20Z",
      "side": 1,
      "message": "the return is unused/checked that will cause a warning in some configurations.",
      "revId": "f88889ce6d71d27b32ae13f608fcf4a477464365",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ff6febc_787a1326",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 3276,
      "author": {
        "id": 5975
      },
      "writtenOn": "2018-03-23T14:47:42Z",
      "side": 1,
      "message": "How should this interact with OBU_FRAME?\n\nIt looks like the code, as written, will include a \u00271\u0027 bit + byte alignment in the middle of the OBU, between the frame header and first tile group. Is this intended? (it may very well make sense - this would simplify the process of splitting/merging an OBU_FRAME to/from OBU_FRAME_HEADER+OBU_TILE_GROUP)",
      "range": {
        "startLine": 3276,
        "startChar": 2,
        "endLine": 3276,
        "endChar": 51
      },
      "revId": "f88889ce6d71d27b32ae13f608fcf4a477464365",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "103469b3_49b8c063",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 3276,
      "author": {
        "id": 5022
      },
      "writtenOn": "2018-03-23T15:05:14Z",
      "side": 1,
      "message": "Done\n\nhttps://aomedia-review.googlesource.com/c/aom/+/52781\n\nSorry I missed the comments before submitting.",
      "parentUuid": "a70872d6_e918f60d",
      "revId": "f88889ce6d71d27b32ae13f608fcf4a477464365",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "191a3bc7_2c146083",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 3276,
      "author": {
        "id": 5022
      },
      "writtenOn": "2018-03-23T15:31:05Z",
      "side": 1,
      "message": "That\u0027s my take from reading the encoder operation. Probably a lot simpler to universally  integrate with obu_frame / obu_frame_header by padding the tail byte to each header type package (?)",
      "parentUuid": "3ff6febc_787a1326",
      "range": {
        "startLine": 3276,
        "startChar": 2,
        "endLine": 3276,
        "endChar": 51
      },
      "revId": "f88889ce6d71d27b32ae13f608fcf4a477464365",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccd7fa4c_4a6cdced",
        "filename": "av1/decoder/obu.c",
        "patchSetId": 2
      },
      "lineNbr": 204,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-03-23T07:24:20Z",
      "side": 1,
      "message": "this is unused",
      "revId": "f88889ce6d71d27b32ae13f608fcf4a477464365",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}