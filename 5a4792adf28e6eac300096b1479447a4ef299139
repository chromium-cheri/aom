{
  "comments": [
    {
      "key": {
        "uuid": "a22b2c65_0cad5a0f",
        "filename": "av1/common/arm/cfl_neon.c",
        "patchSetId": 7
      },
      "lineNbr": 205,
      "author": {
        "id": 5075
      },
      "writtenOn": "2018-04-25T01:48:48Z",
      "side": 1,
      "message": "Aren\u0027t multiplies still very high-latency in NEON?\n\nI think you want something like this:\nint16_x4_t sign \u003d vreinterpret_s16_u16(vcltz_s16(b));\nreturn veor_s16(vadd_s16(a, sign), sign);\n\nThat is, if you really want this to do what the comment says, and don\u0027t care about the behavior when b \u003d\u003d 0 (which does not match what the comment says). I think looking at the usage below that this is true.\n\nMight also be a good idea to document the behavior for lanes of a containing -32768 (in both implementations it leaves the value unchanged even when the corresponding lane of b is negative).",
      "revId": "5a4792adf28e6eac300096b1479447a4ef299139",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fcadc3e_1d02e986",
        "filename": "av1/common/arm/cfl_neon.c",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 5075
      },
      "writtenOn": "2018-04-25T01:48:48Z",
      "side": 1,
      "message": "See above.",
      "revId": "5a4792adf28e6eac300096b1479447a4ef299139",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b65eb001_229a61b1",
        "filename": "av1/common/arm/cfl_neon.c",
        "patchSetId": 7
      },
      "lineNbr": 228,
      "author": {
        "id": 5075
      },
      "writtenOn": "2018-04-25T01:48:48Z",
      "side": 1,
      "message": "This all seems a little convoluted.\n\nIn order to use vqrdmulh_n_s16(), the compiler has to put abs_alpha_q12 into a vector anyway (because the actual instruction does not use an ARM register, it uses a single lane of a vector register for the second operand).\n\nIf you\u0027re going to do that, why not just VDUP the value into all of the lanes and give it the right sign to start with? Then you only need one vsign_s16 invocation.",
      "revId": "5a4792adf28e6eac300096b1479447a4ef299139",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}