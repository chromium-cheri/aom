{
  "comments": [
    {
      "key": {
        "uuid": "834011d5_7ffb4f51",
        "filename": "av1/common/common_data.h",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 5187
      },
      "writtenOn": "2017-01-17T20:50:25Z",
      "side": 1,
      "message": "Alignment.",
      "range": {
        "startLine": 502,
        "startChar": 42,
        "endLine": 502,
        "endChar": 43
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43aa999c_e636d422",
        "filename": "av1/common/common_data.h",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-01-18T01:15:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "834011d5_7ffb4f51",
      "range": {
        "startLine": 502,
        "startChar": 42,
        "endLine": 502,
        "endChar": 43
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834011d5_bf8a376f",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 7
      },
      "lineNbr": 1373,
      "author": {
        "id": 5187
      },
      "writtenOn": "2017-01-17T20:50:25Z",
      "side": 1,
      "message": "It seems when we get here, tx_width is always equal to tx_height, no? If so, there\u0027s no need for these changes considering rectangular prediction block sizes so far. We can of course try rectangular prediction blocks in the future.",
      "range": {
        "startLine": 1372,
        "startChar": 2,
        "endLine": 1373,
        "endChar": 46
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43753906_9fcf6b37",
        "filename": "av1/common/reconintra.c",
        "patchSetId": 7
      },
      "lineNbr": 1373,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-01-18T01:15:25Z",
      "side": 1,
      "message": "Indeed, done.\nAlso, added an assert for sanity check.",
      "parentUuid": "834011d5_bf8a376f",
      "range": {
        "startLine": 1372,
        "startChar": 2,
        "endLine": 1373,
        "endChar": 46
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834011d5_1f400363",
        "filename": "av1/decoder/decodemv.c",
        "patchSetId": 7
      },
      "lineNbr": 392,
      "author": {
        "id": 5187
      },
      "writtenOn": "2017-01-17T20:50:25Z",
      "side": 1,
      "message": "Did you mean is_rect_tx(tx_size)?",
      "range": {
        "startLine": 392,
        "startChar": 2,
        "endLine": 392,
        "endChar": 29
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43753906_6e9923bd",
        "filename": "av1/decoder/decodemv.c",
        "patchSetId": 7
      },
      "lineNbr": 392,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-01-18T01:15:25Z",
      "side": 1,
      "message": "Right now, both are equivalent, looks like.\nBut technically you are right. Corrected.",
      "parentUuid": "834011d5_1f400363",
      "range": {
        "startLine": 392,
        "startChar": 2,
        "endLine": 392,
        "endChar": 29
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834011d5_7f282fa2",
        "filename": "av1/encoder/encodemb.c",
        "patchSetId": 7
      },
      "lineNbr": 490,
      "author": {
        "id": 5187
      },
      "writtenOn": "2017-01-17T20:50:25Z",
      "side": 1,
      "message": "May consider writing an inline function to do this, and add some comments about why we need this conversion of block index. Also, do we need #if CONFIG_RECT_TX here?",
      "range": {
        "startLine": 490,
        "startChar": 2,
        "endLine": 490,
        "endChar": 70
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a39fd578_95d04ed9",
        "filename": "av1/encoder/encodemb.c",
        "patchSetId": 7
      },
      "lineNbr": 490,
      "author": {
        "id": 5290
      },
      "writtenOn": "2017-01-18T01:15:25Z",
      "side": 1,
      "message": "Indeed, added an inline function for this with comments, and also the added a function for the inverse mapping.\nPlus, renamed variable to \u0027block_raster_idx\u0027, as that makes more sense.\nNote that we don\u0027t need an #if CONFIG_RECT_TX here, as TX_4X8 etc are always defined.",
      "parentUuid": "834011d5_7f282fa2",
      "range": {
        "startLine": 490,
        "startChar": 2,
        "endLine": 490,
        "endChar": 70
      },
      "revId": "0510f0f07470b32d06310f00ccc5b5a86c775c94",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}