{
  "comments": [
    {
      "key": {
        "uuid": "acfe0a49_15357f30",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5119,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-08-28T05:41:22Z",
      "side": 1,
      "message": "At the beginning, should this_rd be 0?",
      "range": {
        "startLine": 5119,
        "startChar": 3,
        "endLine": 5119,
        "endChar": 39
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79394e19_cd6b983a",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5119,
      "author": {
        "id": 6245
      },
      "writtenOn": "2018-08-28T06:26:33Z",
      "side": 1,
      "message": "s0 corresponds to bits required to code the prediction block as non-skip. Hence it is required.",
      "parentUuid": "acfe0a49_15357f30",
      "range": {
        "startLine": 5119,
        "startChar": 3,
        "endLine": 5119,
        "endChar": 39
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a44550e_4247c542",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5134,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-08-28T05:41:22Z",
      "side": 1,
      "message": "Though the result is good, I am not very convinced. s0 and s1 are skip_cost which means the skipping of the whole prediction block. pn_rd_stats.zero_rate should be for 1 tx block and should be used here, right?",
      "range": {
        "startLine": 5132,
        "startChar": 8,
        "endLine": 5134,
        "endChar": 0
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b58da432_ae3cd4bc",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5134,
      "author": {
        "id": 6245
      },
      "writtenOn": "2018-08-28T06:26:33Z",
      "side": 1,
      "message": "zero_rate is bits required to signal a transform block as zero block. In case of skip, zero_rate is not required as s1 is already considered at prediction block level. This code change is in align with the final decision as in \u0027code snippet A\u0027 highlighted below (which is present in reference code).",
      "parentUuid": "4a44550e_4247c542",
      "range": {
        "startLine": 5132,
        "startChar": 8,
        "endLine": 5134,
        "endChar": 0
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af7c5cc1_8baed4fb",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5134,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-08-28T17:36:43Z",
      "side": 1,
      "message": "There are several things to think of here. Please let me know if I didn\u0027t understand correctly.\n1. It seems we need to compare 3 RDs here: 1.) Skipping whole prediction block(s1); 2.) Non-skipping prediction block(s0) with non-skipping tx block; 3.) Non-skipping prediction block(s0) with skipping tx block;\nIn this patch, 3) is missing, right?\n2. I think it is easier to evaluate s1 after every tx block is done(as handled in original code). In your patch, if you pick s1 for first tx block, that means all following tx blocks have to be skipping blocks. Using AOMMIN(skip_rd, this_rd) doesn\u0027t make sense to me.\n3. ref_best_rd can be traced back to handle_inter_mode(), and it includes the cost of mv, ref frame,single/comp mode,... I don\u0027t see those costs are deducted along the way, so ref_best_rd should be too large. Calculating an accurate ref_best_rd should be done.\n4. I think the speedup is achieved because best_rd_sofar is smaller than that in original code. Right? I think making ref_best_rd more accurate is the right thing to do, which shouldn\u0027t cause quality loss.",
      "parentUuid": "b58da432_ae3cd4bc",
      "range": {
        "startLine": 5132,
        "startChar": 8,
        "endLine": 5134,
        "endChar": 0
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c193591_d15ad78d",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5134,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-08-28T17:40:56Z",
      "side": 1,
      "message": "fix the above 2nd point: Using AOMMIN(skip_rd, this_rd) is fine since rd_stats-\u003esse is used.",
      "parentUuid": "af7c5cc1_8baed4fb",
      "range": {
        "startLine": 5132,
        "startChar": 8,
        "endLine": 5134,
        "endChar": 0
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acddb46a_8353117f",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 2
      },
      "lineNbr": 5134,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-08-28T22:50:03Z",
      "side": 1,
      "message": "Discussion with Ranjit resolved the first point above. Select_tx_block function returns best of 2 and 3 at TX block level. Hence this_rd corresponds best of 2 and 3 at pred block level.\nThe work will continue regarding point 3.",
      "parentUuid": "1c193591_d15ad78d",
      "range": {
        "startLine": 5132,
        "startChar": 8,
        "endLine": 5134,
        "endChar": 0
      },
      "revId": "dbbe94f773826032bd468b4d2dee27f8bde5554d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}