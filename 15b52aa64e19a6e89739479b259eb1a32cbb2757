{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78799cb3_92a1e1d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "1. Update the following comment in av1/encoder/speed_features.h:\n\n```\n  // Early DC only txfm block prediction\n  // 0: speed feature OFF\n  // 1 / 2 : Use the configured level for different modes\n  int dc_blk_pred_level;\n```\n\nNote that this comment does not mention transform skip. Should it?\n\n2. We also need to talk about existing level 2. So the last sentence should read something like \"The existing speed feature levels 1 and 2 are made as levels 2 and 3, respectively.\"\n\nAlso, \"made as\" sounds a little strange here. Maybe \"become\"?\n\n  The existing speed feature levels 1 and 2 become levels 2 and 3, respectively.\n  \nUPDATE: I am wondering if this sentence is not talking about the speed feature dc_blk_pred_level (which has values 0..3) but rather about x-\u003etxfm_search_params.predict_dc_level (which has values 0..2).",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9488f5c_f3aa9d46",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "\u003e Note that this comment does not mention transform skip. Should it?\nYes. We have modified the comment accordingly.\n\u003e 2. We also need to talk about existing level 2. So the last sentence should read something like \"The existing speed feature levels 1 and 2 are made as levels 2 and 3, respectively.\"\n\u003e Also, \"made as\" sounds a little strange here. Maybe \"become\"?\n\u003e The existing speed feature levels 1 and 2 become levels 2 and 3, respectively.\n\u003e UPDATE: I am wondering if this sentence is not talking about the speed feature dc_blk_pred_level (which has values 0..3) but rather about x-\u003etxfm_search_params.predict_dc_level (which has values 0..2).\nWe have corrected the commit message to distinguish the changes done to the existing levels of speed feature and ‘predict_dc_levels’.",
      "parentUuid": "78799cb3_92a1e1d6",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7e65dc_48f57fd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-01T14:07:46Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nThe speed feature dc_blk_pred_level determines if a block should be coded as transform skip or dc only block based on residual statistics. This CL extends this speed feature to allintra speed\u003e\u003d6 by introducing a new intermediate level 1 which only determines if the block should be coded as transform skip. The existing speed feature level 1 is made as level 2. When we tried including ‘dc only block’ related checks, the results were not in tradeoff for allintra encoding. Hence, we introduced a new intermediate level 1 handling transform skip.\n\nWhen the speed feature dc_blk_pred_level is set to 1, ‘best_rd_stats-\u003eskip_txfm’ flag is set based on residual mean and variance which is used only to skip the transform type search during mode evaluation stage. During the final encode, transform and quantization take place and skip is not forced.\n\nFor AVIF still-image encode with tune\u003dpsnr,\n                 Encode Time      BD-Rate Loss(%)\n    cpu-used     Reduction(%)    psnr      ssim   \n       6           1.012         0.0827    0.0936\n       7           1.416         0.1188    0.1666\n       8           0.428         0.0181    0.0223     \n\nFor AVIF still image encode with tune\u003dssim,\n                 Encode Time      BD-Rate Loss(%)\n    cpu-used     Reduction(%)    psnr      ssim   \n       6           1.285         0.0706    0.1106 \n       7           1.304         0.0870    0.1554\t\n       8           0.753         0.0048    0.0032  \n\n\nFollowing are the instruction count reduction results when libaom allintra frame encoding (50 frames) was tested for a borg setup. \n               Instruction Count        BD-Rate Loss(%)      \n     cpu-used    Reduction(%)    avg.psnr  ovr.psnr  ssim\n        6          1.469         0.0561    0.0527    0.0808\n        7          1.576         0.0866    0.0838    0.1316\n        8\t   1.358         0.0282    0.0276    0.0405  \n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027 and \u0027RT\u0027 encoding modes for a few contents with different encoding configurations. It is verified that the CL is bit-exact for allintra encode, speed\u003d5,9 with no speed impact.\n\nIn the commit message, BD rate impact column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using the command:\n$ perf stat -e instructions:u ./aomenc …\n\nPlease review.\n\nRegards,\nMudassir.\n",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa42fa4_a370c975",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-03T15:24:27Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nPlease review this patch.\n\nRegards,\nMudassir",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d1dbbc6_8cf866d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "\u003e ..., we introduced a new intermediate level 1 handling transform skip.\n\u003e \n\u003e When the speed feature dc_blk_pred_level is set to 1, ‘best_rd_stats-\u003eskip_txfm’ flag is set based on residual mean and variance which is used only to skip the transform type search during mode evaluation stage.\n\nI believe you are referring to the following code in `predict_dc_only_block()`:\n\n```\n  // Early prediction of skip block if residual mean and variance are less\n  // than qstep based threshold\n  if (((llabs(*per_px_mean) * dc_coeff_scale[tx_size]) \u003c (dc_qstep \u003c\u003c 12)) \u0026\u0026\n      (block_var \u003c var_threshold)) {\n    // If the normalized mean of residual block is less than the dc qstep and\n    // the  normalized block variance is less than ac qstep, then the block is\n    // assumed to be a skip block and its rdcost is updated accordingly.\n    best_rd_stats-\u003eskip_txfm \u003d 1;\n```\n\nBut note that the above code does not check x-\u003etxfm_search_params.predict_dc_level. Therefore, I don\u0027t understand how the speed feature dc_blk_pred_level can possibly affect the above code. Could you clarify this?",
      "parentUuid": "4c7e65dc_48f57fd6",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96dcdd19_771c4ade",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Mudassir: I suggest some changes. I detected potential confusion between dc_blk_pred_level (0..3) and predict_dc_level (0..2). Would be good to make these two things more clearly different, but I don\u0027t have good suggestions other than adding comments.\n\nChi Yo: You can wait until Muddasir has addressed this round of review comments to review this CL.",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70231fdf_c152985a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "The function predict_dc_only_block() is invoked only when txfm_params-\u003epredict_dc_level\u003e\u003d1.",
      "parentUuid": "6d1dbbc6_8cf866d4",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67f0855d_5fe4c699",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-05T20:46:50Z",
      "side": 1,
      "message": "But the code I quoted above may be executed when the speed feature dc_blk_pred_level is set to 1, 2, or 3. Your message says:\n\n\u003e When the speed feature dc_blk_pred_level is set to 1, ‘best_rd_stats-\u003eskip_txfm’ \u003e flag is set based on residual mean and variance which is used only to skip the\n\u003e transform type search during mode evaluation stage.\n\nwhich implies that this is not true when the speed feature dc_blk_pred_level is set to 2 or 3.\n\nIt seems that whether the speed feature dc_blk_pred_level is set to 1 (vs. 2 or 2) only affects the following code:\n\n```\n  } else if (predict_dc_level \u003e 1) {\n    // Predict DC only blocks based on residual variance.\n    // For chroma plane, this early prediction is disabled for intra blocks.\n    if ((plane \u003d\u003d 0) || (plane \u003e 0 \u0026\u0026 is_inter_block(mbmi))) *dc_only_blk \u003d 1;\n  }\n```",
      "parentUuid": "70231fdf_c152985a",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb3bfc5_136a8946",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "1. It is not clear what \"Index 0\", \"Index 1\", and \"Index 2\" are referring to. I believe they are referring to the possible values of second index. If so, it would be clearer to change \"Index 0\" to something like \"Second index \u003d 0 (DEFAULT_EVAL)\". If that is too long, change it to \"Second index \u003d 0\".\n\n2. The first index (0..3) is not documented. (It is the value of the dc_blk_pred_level speed feature.)",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5278cea2_29c7e032",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "We have modified the documentation to make it clear that first and second indices are correspond to speed feature and mode evaluation types respectively.",
      "parentUuid": "ffb3bfc5_136a8946",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86bcbacd_f1499694",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Nit: Should this say \"no early skip block or DC only block prediction\"?",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e17ddb66_428a3318",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86bcbacd_f1499694",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29752850_2008691e",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Nit: capitalize \"DC\".",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f33d75c_46697ab2",
        "filename": "av1/encoder/speed_features.c",
        "patchSetId": 3
      },
      "lineNbr": 128,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29752850_2008691e",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b751b99_b7fc22ae",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 1965,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "1. Name this variable `predict_dc_level`. The reason is that the speed feature `dc_blk_pred_level` has a different set of values (0..3 instead of 0..2).\n\n2. Nit: use the `unsigned int` type?\n\nx-\u003etxfm_search_params.predict_dc_level is an `unsigned int`:\n\n```\n  /*!\n   * Flag to enable/disable DC block prediction.\n   */\n  unsigned int predict_dc_level;\n```\n\nWe should update this comment, because \"Flag\" implies this field is a boolean flag, but now this field has three possible values (0, 1, 2).\n\n3. Add an assertion:\n```\n  assert(predict_dc_level \u003e\u003d 1);\n```\nor\n```\n  assert(predict_dc_level !\u003d 0);\n```\n\nThis is guaranteed by the caller of this function.",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed085e46_45e0d573",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 1965,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b751b99_b7fc22ae",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2968639_8889f861",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 1972,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Nit/optional: The conditions for the `if` and `else if` below have a common expression `(block_var \u003c var_threshold)`. So we can have an early return and remove that common expression from the `if` and `else if`:\n\n```\n  if (block_var \u003e\u003d var_threshold)\n    return;\n\n  // Early prediction of skip block if residual mean and variance are less\n  // than qstep based threshold\n  if ((llabs(*per_px_mean) * dc_coeff_scale[tx_size]) \u003c (dc_qstep \u003c\u003c 12)) {\n    ...\n  } else if (dc_blk_pred_level \u003e 1) {\n    ...\n  }\n```",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c562b25f_71dc1a3f",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 1972,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2968639_8889f861",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a52f5c2f_c83869b4",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 2007,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Nit: also parenthesize `dc_blk_pred_level \u003e 1` for consistency:\n\n```\n  } else if ((block_var \u003c var_threshold) \u0026\u0026 (dc_blk_pred_level \u003e 1)) {\n```",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80256bab_9ef8d2d2",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 2007,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a52f5c2f_c83869b4",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6125d3b2_0aea29dd",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 2059,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-08-04T22:03:12Z",
      "side": 1,
      "message": "Nit/optional: It should be good to change `txfm_params-\u003epredict_dc_level` to `txfm_params-\u003epredict_dc_level \u003e\u003d 1`, because it is no longer a boolean flag.",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca5dd268_22332895",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 3
      },
      "lineNbr": 2059,
      "author": {
        "id": 25857
      },
      "writtenOn": "2022-08-05T17:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6125d3b2_0aea29dd",
      "revId": "15b52aa64e19a6e89739479b259eb1a32cbb2757",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}