{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bacd52df_6dfe96b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25819
      },
      "writtenOn": "2021-03-22T12:52:19Z",
      "side": 1,
      "message": "Hi Wan-Teh,\n\nIn this patch, we introduced a speed feature \u0027prune_filter_intra_level\u0027 to prune filter intra modes in intra frames based on intra mode winner so far.  As per the analysis, it is sufficient to evaluate either of the following modes for ~80% of the time.\n\n1. FILTER_DC_PRED,\n2. the mode that corresponds to winner mode so far of DC_PRED, V_PRED, H_PRED, D157_PRED, and PAETH_PRED.\n\nThe possibility of remaining filter intra modes winning seemed to be less. Hence, we implemented a logic to prune filter intra modes based on the above observations. The sf \u0027prune_filter_intra_level\u0027, can take following values.\n-\u003e 0 : No pruning\n-\u003e 1 : Evaluate applicable filter intra modes based on best intra mode so far\n-\u003e 2 : Do not evaluate filter intra modes\n\nTo improve the trade-off, considered SMOOTH_PRED mode evaluation when the pruning logic for filter intra modes is present. Refactored the code such that the functionality of sf \u0027disable_filter_intra\u0027 is bit matches with introduced the sf \u0027prune_filter_intra_level\u0027 with value 2 and removed the existing sf \u0027disable_filter_intra\u0027.\n\nWe validated the current patch for allintra video and still-image encode. Following are encode time reduction results when AVIF encode was tested for a typical image dataset. Bit match is verified for presets 0, 1, and 6.\n\n                Instruction Count  BD-Rate Loss(%)      \n      cpu-used    Reduction(%)     psnr     ssim    \n         2          3.494         -0.3771  -0.2950  \n         3          4.095         -0.3720  -0.2924  \n         4          0.000         -0.4138  -0.2966  \n         5          0.000         -0.4435  -0.3025  \n\nFollowing are encode time reduction results when tested libaom with all intra frame encoding for a borg setup. Bit match is verified for presets 0, 1, and 6.\n\n               Instruction Count       BD-Rate Loss(%)      \n     cpu-used    Reduction(%)     avg.psnr  ovr.psnr   ssim    \n         2          5.079        -0.1388   -0.1381    -0.1067  \n         3          6.258        -0.1219   -0.1223    -0.0903  \n         4          1.951        -0.2030   -0.2045    -0.1531  \n         5          1.785        -0.2400   -0.2408    -0.1690\n\nFor libaom AV1 video encode, bit match is verified (w.r.t parent commit) for encoding modes \u0027GOOD\u0027 and \u0027RT\u0027 for few videos with different video encoding configurations.\n\nThe following are few more observations during our work on pruning filter intra modes. When tried to extend the sf \u0027disable_filter_intra\u0027 for speed \u003e\u003d 2, the following results were seen.\n\nFor AVIF still image encode,\n              Instruction Count  BD-Rate Loss(%)      \n      cpu-used    Reduction(%)     psnr     ssim    \n         2         6.103           0.0269   0.0766  \n         3         8.058           0.0957   0.1648  \n         4         4.196           0.0110   0.1167  \n         5         2.748          -0.0478   0.0818\n\nFor video allintra encode,\n               Instruction Count       BD-Rate Loss(%)      \n     cpu-used    Reduction(%)     avg.psnr  ovr.psnr   ssim    \n         2          8.631         0.3304    0.3303     0.3237  \n         3         11.295         0.4171    0.4162     0.4092  \n         4          7.113         0.2613    0.2576     0.2805  \n         5          5.163         0.1836    0.1826     0.2264\n\nEven though, disabling all filter intra modes is within the trade-off for speed presets 4 and 5, evaluating the most probable filter intra modes along with SMOOTH_PRED modes shows a better trade-off. Hence, chosen the approach of the submitted patch instead of disabling filter intra modes completely.\n\nAlso, when tried to enable sf \u0027prune_filter_intra_level\u0027 for \u0027good\u0027 and \u0027rt\u0027 encoding modes, did not observe any significant speed gains. Hence, limited the sf \u0027prune_filter_intra_level\u0027 to allintra encode.\n\nIn the commit message, BD rate impact column:\n[+] sign is for BD-Rate drop\n[-] sign is for BD-Rate improvement\nThe instruction count reduction specified has been measured using the command:\n$ perf stat -e instructions:u ./avifenc â€¦\n\nPlease review the patch.\n\nThanks,\nJayashri.",
      "revId": "e579a238d7fddc41d972d45b5da0f357346afed3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}