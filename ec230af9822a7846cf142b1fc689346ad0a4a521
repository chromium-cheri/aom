{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1414558d_3d068d09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-03-28T21:20:44Z",
      "side": 1,
      "message": "Hi Marco, could you please review this CL?",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d4af15a_a7bda8b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-29T00:39:34Z",
      "side": 1,
      "message": "the worst case results in your last email were ",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e78f268_baa66498",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-29T00:41:04Z",
      "side": 1,
      "message": "~1.5/1.7%? Can you add the worst case bdrate directly in the CL, for latest version on master?",
      "parentUuid": "6d4af15a_a7bda8b2",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b228c6d_8c1e83ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-03-31T12:44:23Z",
      "side": 1,
      "message": "Hi Marco, \nPlease review the updated patch. \nNeeraj",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb970004_a264ab56",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 6
      },
      "lineNbr": 2423,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-29T00:39:34Z",
      "side": 1,
      "message": "for 32x32 blocks: the sad for the whole 64x64 block is used for the decision?\n\nmaybe better to enter decision only for bsize \u003e\u003d BLOCK_64X64",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "504a0f81_e57fb1c9",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 6
      },
      "lineNbr": 2423,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-03-31T12:44:23Z",
      "side": 1,
      "message": "Yes. Changed accordingly.",
      "parentUuid": "bb970004_a264ab56",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e46866d_afb65d56",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 6
      },
      "lineNbr": 2635,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-29T00:39:34Z",
      "side": 1,
      "message": "why frames_since_key \u003e 6?",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa47cb93_d99df552",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 6
      },
      "lineNbr": 2635,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-03-31T12:44:23Z",
      "side": 1,
      "message": "Earlier this pruning for n \u003c6, n \u003d frames_since_key was disabled mainly to allow forming better prediction signal for initial frames. \n\nHowever, on the latest commit, experiments without this condition does not have any bad impact on the worst case drop or overall quality loss. So this condition is removed in the updated patch.",
      "parentUuid": "1e46866d_afb65d56",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bec94bbc_7260b87c",
        "filename": "av1/encoder/nonrd_pickmode.c",
        "patchSetId": 6
      },
      "lineNbr": 2635,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-04-01T06:35:01Z",
      "side": 1,
      "message": "OK, seem reasonable to have some n \u003e 0 for some initial frames after key, so I\u0027m fine with keeping that condition in.",
      "parentUuid": "aa47cb93_d99df552",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54678112_3f80905d",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 6
      },
      "lineNbr": 2689,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-03-29T00:39:34Z",
      "side": 1,
      "message": "Instead of allocating array for blk_64x64 blocks in frame-level scene detection and passing to the pickmode, can we use the source_sad metrics computed directly per superblock in av1_source_content_sb(). Those metrics are sse instead of sad, so you would have to adjust thresholds. For 128x128 sb (720p) we can compute the metrics for 4 subblocks there.",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f295f311_446e29b1",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 6
      },
      "lineNbr": 2689,
      "author": {
        "id": 29295
      },
      "writtenOn": "2022-03-31T12:44:23Z",
      "side": 1,
      "message": "Thanks for this suggestion. We worked on this in the following directions: \n\n1. Adding 4 blocks of 64x64 to make 128x128 works out fine for SSE, but not for variance. To get this right, we changed the intrinsics by returning \"sum\" for each block. With this change, sse \u0026 variance are bit-exact.\n \n2. However, tuning SSE-based thresholds did not produce good trade-offs. We are consistently seeing worst case drops \u003e 2% for same speed-up levels. For example,\ncpu   Res    Speed-up (%)  BD Rate Loss (%)  Worst-case (%)     Clip\n9    HDRES       1.845         0.9461            2.392        testnoise720p\n10   HDRES      1.359         1.0737            2.400\t      mj1vc720p   \nWe observe that SAD is a better error indicator in this case, where error numbers are very small e.g. \u003c 1 per-pixel. \n\n3. We ran memory-test to check the memory impact due to this patch is negligible (~ 0.001% on avg) for both speed 9 and 10.\n\n4. We were able to tune thresholds based on QP to further reduce (i) avg BD Rate Loss (e.g. for speed 10, from 0.6 to 0.3) and (ii) worst-case drops, without much speed-up impact. This means for lower QP, compound mode pruning is done more conservatively.",
      "parentUuid": "54678112_3f80905d",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d43ff1a8_70ea7d4b",
        "filename": "av1/encoder/ratectrl.c",
        "patchSetId": 6
      },
      "lineNbr": 2689,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-04-01T06:35:01Z",
      "side": 1,
      "message": "Ok, ACK.",
      "parentUuid": "f295f311_446e29b1",
      "revId": "ec230af9822a7846cf142b1fc689346ad0a4a521",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}