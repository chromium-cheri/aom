{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d649ed7b_8a1c5ab4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-23T15:27:26Z",
      "side": 1,
      "message": "Alex: I set the author of this CL to you because you wrote the original libgav1 code. I hope you don\u0027t mind. An alternative is to acknowledge you as the original author (at line 19).",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eeeb8d41_3e1131ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-23T16:16:21Z",
      "side": 1,
      "message": "If I run\n\n./test_libaom --gtest_filter\u003dSSE4_1/AV1FilterIntraPredTest.DISABLED_Speed/* --gtest_also_run_disabled_tests\n\nthe elapsed time reported by gtest changes from:\n\n[----------] 70 tests from SSE4_1/AV1FilterIntraPredTest (371 ms total)\n\nto:\n\n[----------] 70 tests from SSE4_1/AV1FilterIntraPredTest (300 ms total)",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7728c4cb_9bdccf99",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-23T15:21:36Z",
      "side": 1,
      "message": "I created an auxiliary CL to help with the code review:\nhttps://aomedia-review.googlesource.com/c/aom/+/124361/1..2\n\nPatch set 1 of that CL is the original libgav1 code. So the diffs against patch set 1 show the changes I made.",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b2eef85_521c79aa",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 5020
      },
      "writtenOn": "2020-11-24T03:44:11Z",
      "side": 1,
      "message": "as a diff to libgav1 this is fine, but note most if not all of these are available as xx_* variants:\nhttps://aomedia.googlesource.com/aom/+/refs/heads/master/aom_dsp/x86/synonyms.h#29",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbffc0fa_c177d4a1",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-24T15:53:05Z",
      "side": 1,
      "message": "Done. Thanks a lot!",
      "parentUuid": "5b2eef85_521c79aa",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96953689_06d1114e",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-24T15:53:05Z",
      "side": 1,
      "message": "I did not find an equivalent of RightShiftWithRounding_S16() in aom_dsp/x86/synonyms.h. The closest match is these two functions:\n\n  // This is equivalent to ROUND_POWER_OF_TWO(v_val_d, bits)\n  static INLINE __m128i xx_roundn_epi32_unsigned(__m128i v_val_d, int bits) {\n    const __m128i v_bias_d \u003d _mm_set1_epi32((1 \u003c\u003c bits) \u003e\u003e 1);\n    const __m128i v_tmp_d \u003d _mm_add_epi32(v_val_d, v_bias_d);\n    return _mm_srai_epi32(v_tmp_d, bits);\n  }\n\n  static INLINE __m128i xx_roundn_epi16(__m128i v_val_d, int bits) {\n    const __m128i v_bias_d \u003d _mm_set1_epi16((1 \u003c\u003c bits) \u003e\u003e 1);\n    const __m128i v_sign_d \u003d _mm_srai_epi16(v_val_d, 15);\n    const __m128i v_tmp_d \u003d\n        _mm_add_epi16(_mm_add_epi16(v_val_d, v_bias_d), v_sign_d);\n    return _mm_srai_epi16(v_tmp_d, bits);\n  }\n\nIt seems that RightShiftWithRounding_S16() would be equivalent to xx_roundn_epi16_unsigned().",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb50556a_a60dd8d0",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 9545
      },
      "writtenOn": "2020-11-24T17:53:52Z",
      "side": 1,
      "message": "After comparing libgav1/src/dsp/x86/common_sse4.h with aom/aom_dsp/x86/synonyms.h, I verified that RightShiftWithRounding_S32() is equivalent to xx_roundn_epi32_unsigned(), so I added a new xx_roundn_epi16_unsigned() function  and replaced RightShiftWithRounding_S16() with it.",
      "parentUuid": "96953689_06d1114e",
      "revId": "e2809a66dc27117ff442855f72a6ee0dc97e2da7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}