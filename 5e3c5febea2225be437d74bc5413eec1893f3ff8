{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "36e9d154_713757b4",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-10T22:34:01Z",
      "side": 1,
      "message": "I didn\u0027t change the return value here. `aom_get_num_layers_from_operating_point_idc()` can only fail if either of the output parameter is a null pointer. So if it fails, it is a codec error (i.e., a programming bug), so returning `AOM_CODEC_ERROR` here seems appropriate.\n\nDo think think we should still propagate the error here?",
      "revId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27a735ca_f5bb0509",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-06-10T22:58:39Z",
      "side": 1,
      "message": "\u003e I didn\u0027t change the return value here. `aom_get_num_layers_from_operating_point_idc()` can only fail if either of the output parameter is a null pointer. So if it fails, it is a codec error (i.e., a programming bug), so returning `AOM_CODEC_ERROR` here seems appropriate.\n\u003e \n\u003e Do think think we should still propagate the error here?\n\nIt sounds like it\u0027s fine as it is.",
      "parentUuid": "36e9d154_713757b4",
      "revId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c778d80_80dea1b3",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-06-10T22:58:39Z",
      "side": 1,
      "message": "It looks like most paths return `AOM_CODEC_ERROR`, but this is better either way.",
      "revId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b947a83b_6ebc6af9",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-06-10T23:08:48Z",
      "side": 1,
      "message": "Did you mean `AOM_CODEC_OK`?\n\nMy code inspection shows that most paths return `AOM_CODEC_OK` and only two paths (in `parse_timing_info()`) return `AOM_CODEC_UNSUP_BITSTREAM`.\n\nNote that the bit reader `rb` declared at line 303 does not have an error handler. So the bit reader does not report errors.",
      "parentUuid": "8c778d80_80dea1b3",
      "revId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f481a3_f3f122f2",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 313,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-06-10T23:27:09Z",
      "side": 1,
      "message": "\u003e Did you mean `AOM_CODEC_OK`?\n\u003e \n\nSome did that too. I thought I caught one `AOM_CODEC_ERROR`, but I didn\u0027t go through all the calls.\n\n\u003e My code inspection shows that most paths return `AOM_CODEC_OK` and only two paths (in `parse_timing_info()`) return `AOM_CODEC_UNSUP_BITSTREAM`.\n\u003e \n\u003e Note that the bit reader `rb` declared at line 303 does not have an error handler. So the bit reader does not report errors.",
      "parentUuid": "b947a83b_6ebc6af9",
      "revId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "5e3c5febea2225be437d74bc5413eec1893f3ff8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}