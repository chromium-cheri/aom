{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6aaf5aa0_2e30a653",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-09-06T22:00:08Z",
      "side": 1,
      "message": "James, Cherma: Please review. Thanks!\n\nCherma: This CL is an improved version of what you reviewed yesterday:\nhttps://aomedia-review.googlesource.com/c/aom/+/193041/3..4",
      "revId": "fea6d9b5c68d0cade5ce51c0bc0278e88b10519f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b7c79a6_ef3af0df",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 3461,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-09-06T23:22:23Z",
      "side": 1,
      "message": "Technically this addition could overflow, but you would probably have a hard time encoding a high enough resolution difficult content on 32-bit for it to occur.",
      "range": {
        "startLine": 3461,
        "startChar": 12,
        "endLine": 3461,
        "endChar": 45
      },
      "revId": "fea6d9b5c68d0cade5ce51c0bc0278e88b10519f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a81ac4ee_89df7926",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 3461,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-09-07T00:07:33Z",
      "side": 1,
      "message": "Thanks for the comment. I considered this issue, and my justification is as follows.\n\n`move_offset` is equal to 2. I.e., the temporal delimiter OBU is always 2 bytes long.\n\n`ctx-\u003ecx_data_sz` is the size of an already allocated buffer. In practice it must be \u003c `SIZE_MAX / 2`. (This is a key part of the proof.)\n\nWe also know `cpi_data.frame_size \u003c\u003d ctx-\u003ecx_data_sz`. It follows that `cpi_data.frame_size \u003c SIZE_MAX / 2`.\n\nTherefore, `move_offset + cpi_data.frame_size \u003c 2 + SIZE_MAX / 2 \u003c SIZE_MAX`.\n\nPlease check my argument. Thanks.\n\nThis fact is not immediately obvious, so I wonder if we rewrite the check as follows:\n\n```\n        if (move_offset \u003e ctx-\u003ecx_data_sz - cpi_data.frame_size) {\n          aom_internal_error(\u0026ppi-\u003eerror, AOM_CODEC_ERROR, NULL);\n        }\n```\n\nThis form only requires `cpi_data.frame_size \u003c\u003d ctx-\u003ecx_data_sz`.",
      "parentUuid": "7b7c79a6_ef3af0df",
      "range": {
        "startLine": 3461,
        "startChar": 12,
        "endLine": 3461,
        "endChar": 45
      },
      "revId": "fea6d9b5c68d0cade5ce51c0bc0278e88b10519f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50ff192d_1b15221c",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 1
      },
      "lineNbr": 3461,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-09-07T02:46:56Z",
      "side": 1,
      "message": "\u003e Thanks for the comment. I considered this issue, and my justification is as follows.\n\u003e \n\u003e `move_offset` is equal to 2. I.e., the temporal delimiter OBU is always 2 bytes long.\n\u003e \n\u003e `ctx-\u003ecx_data_sz` is the size of an already allocated buffer. In practice it must be \u003c `SIZE_MAX / 2`. (This is a key part of the proof.)\n\u003e \n\u003e We also know `cpi_data.frame_size \u003c\u003d ctx-\u003ecx_data_sz`. It follows that `cpi_data.frame_size \u003c SIZE_MAX / 2`.\n\u003e \n\u003e Therefore, `move_offset + cpi_data.frame_size \u003c 2 + SIZE_MAX / 2 \u003c SIZE_MAX`.\n\u003e \n\nI think this would be based on the checks in av1_cx_iface.c:\nhttps://aomedia.googlesource.com/aom/+/d5265b173616ce62de231cd1b1eae853ad03641e/av1/av1_cx_iface.c#3081\nhttps://aomedia.googlesource.com/aom/+/d5265b173616ce62de231cd1b1eae853ad03641e/av1/av1_cx_iface.c#3099\n\n\n\u003e Please check my argument. Thanks.\n\u003e \n\u003e This fact is not immediately obvious, so I wonder if we rewrite the check as follows:\n\u003e \n\u003e ```\n\u003e         if (move_offset \u003e ctx-\u003ecx_data_sz - cpi_data.frame_size) {\n\u003e           aom_internal_error(\u0026ppi-\u003eerror, AOM_CODEC_ERROR, NULL);\n\u003e         }\n\u003e ```\n\u003e \n\u003e This form only requires `cpi_data.frame_size \u003c\u003d ctx-\u003ecx_data_sz`.\n\u003e\n\nThis is what I was thinking when I made the comment, it\u0027s the safer form, even if it isn\u0027t strictly necessary. I\u0027ll leave it up to you.",
      "parentUuid": "a81ac4ee_89df7926",
      "range": {
        "startLine": 3461,
        "startChar": 12,
        "endLine": 3461,
        "endChar": 45
      },
      "revId": "fea6d9b5c68d0cade5ce51c0bc0278e88b10519f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}