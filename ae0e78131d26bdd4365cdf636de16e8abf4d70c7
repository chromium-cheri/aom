{
  "comments": [
    {
      "key": {
        "uuid": "d45a8fec_e2054248",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-31T18:14:52Z",
      "side": 1,
      "message": "Log base 2 is a commonly used function. Is there an implementation in libaom?",
      "range": {
        "startLine": 26,
        "startChar": 21,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c776cd38_84739957",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-31T18:14:52Z",
      "side": 1,
      "message": "Optional: Could you add a comment to note that this array has 1025 elements? Or perhaps declare it as:\n\nstatic const uint8_t log_in_base_2[1025] \u003d {",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 6
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03ffa8b2_8fa37786",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5290
      },
      "writtenOn": "2018-07-31T20:42:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c776cd38_84739957",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 6
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c638829_413da70c",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5290
      },
      "writtenOn": "2018-07-31T20:42:18Z",
      "side": 1,
      "message": "I don\u0027t of one actually.",
      "parentUuid": "d45a8fec_e2054248",
      "range": {
        "startLine": 26,
        "startChar": 21,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c02721a4_45e33266",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-31T21:22:57Z",
      "side": 1,
      "message": "Searching for \"log2\" in the source tree, I found av1_ceil_log2(). log_in_base_2 is a lookup table for the floor of log2.\n\nI also found calls to ceil(log2()) and floor(log2()) in aom_dsp/noise_model.c.\n\nSearching for \"floor(log2\", I found get_msb() in aom_ports/bitops.h.\n\nThese macros in av1/common/odintrin.h are related:\n\n#define OD_CLZ0 (1)\n#define OD_CLZ(x) (-get_msb(x))\n#define OD_ILOG_NZ(x) (OD_CLZ0 - OD_CLZ(x))\n\n(By the way, they should be documented!)\n\nI will file a bug report to deal with this later.",
      "parentUuid": "5c638829_413da70c",
      "range": {
        "startLine": 26,
        "startChar": 21,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b789115_39930018",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-07-31T18:14:52Z",
      "side": 1,
      "message": "Nit: This assertion should be before the get_mv_class() call. If comp is 0, then mag is 0, and we will call get_mv_class with z\u003d-1.\n\nWe can make this change in a separate CL.",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 20
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa8f5ee8_7ca1f1e0",
        "filename": "av1/encoder/encodemv.c",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5290
      },
      "writtenOn": "2018-07-31T20:42:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b789115_39930018",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 20
      },
      "revId": "ae0e78131d26bdd4365cdf636de16e8abf4d70c7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}