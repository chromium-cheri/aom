{
  "comments": [
    {
      "key": {
        "uuid": "f60802e2_0fe35318",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 4391,
      "author": {
        "id": 5260
      },
      "writtenOn": "2017-12-07T20:12:13Z",
      "side": 1,
      "message": "I don\u0027t really understand why this isn\u0027t just:\n  this_rd +\u003d (RDCOST(x-\u003erdmult, pn_rd_stats.rate, pn_rd_stats.dist)\n\nAs far as I can make out, tx_block_yrd is already detecting cases when signalling EOB is better than coding the block, and altering the rate and dist accordingly.",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "095801b2_21cc4598",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 4391,
      "author": {
        "id": 5189
      },
      "writtenOn": "2017-12-07T20:38:26Z",
      "side": 1,
      "message": "If there are multiple sub-blocks that are being processed and added, this makes only a slight difference I think. Inside the loop the purpose of updating this_rd is only to update the ref_best_rd - this_rd. But outside the loop setting the skip correctly is critical. That is because if you have multiple sub-blocks, then some of them may be skipped, and some may not. So (rd_stats.rate, rd_stats.dist) will not store the case where the entire block is skipped. Fortunately, you can compute that using the (rd_stats-\u003ezero_rate, rd_stats-\u003esse), and then amke the block skip if that cose is lower than the sum.",
      "parentUuid": "f60802e2_0fe35318",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a32f592e_7d81e3ab",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 4391,
      "author": {
        "id": 5260
      },
      "writtenOn": "2017-12-07T21:22:58Z",
      "side": 1,
      "message": "Ahh - I think I misunderstood the point of the test outside the loop.\nI assumed choosing whether to skip or not was entirely handled by higher level code (e.g. in txfm_yrd and av1_rd_pick_inter_mode_sb).\n\nIf you are considering setting the skip bit here, then shouldn\u0027t the costs be based on x-\u003eskip_cost[skip_ctx][?] instead of zero_rate?",
      "parentUuid": "095801b2_21cc4598",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0a0f39_1ca3b829",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 4400,
      "author": {
        "id": 5260
      },
      "writtenOn": "2017-12-07T20:12:13Z",
      "side": 1,
      "message": "Not a problem with this patch: but I was just wondering if there is a simple explanation of what rd_stats-\u003eskip and x-\u003eskip (used in other places) are meant to represent?  I have been trying to reconstruct a theory of the program but am struggling with these two.",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c824a1f3_28c01cae",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 4400,
      "author": {
        "id": 5189
      },
      "writtenOn": "2017-12-07T20:38:26Z",
      "side": 1,
      "message": "On this I am on the same boat as you. But setting the skip correctly does help to skip more blocks and does improve coding efficiency.",
      "parentUuid": "8a0a0f39_1ca3b829",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e9820d9_fecc0050",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 5037,
      "author": {
        "id": 5260
      },
      "writtenOn": "2017-12-07T20:12:13Z",
      "side": 1,
      "message": "I am also a bit worried about this one.\nIn this case I don\u0027t think tx_block_rd is doing the EOB optimization internally.\nMy concern is that I cannot find the place where rd_stats-\u003ezero_rate is set up for chroma.\nPerhaps the answer is to add the EOB optimization into tx_block_rd as well?\nOr have I misunderstood again?",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0ae453a_d97e315f",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 5037,
      "author": {
        "id": 5189
      },
      "writtenOn": "2017-12-07T20:38:26Z",
      "side": 1,
      "message": "Okay - need to check if it is being set up correctly. If not that still needs fixing. Or perhaps we can go back to 0 here and below. The logic below is more critical anyways.",
      "parentUuid": "2e9820d9_fecc0050",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173fd304_f304c3ca",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 1
      },
      "lineNbr": 5037,
      "author": {
        "id": 5189
      },
      "writtenOn": "2017-12-07T20:40:23Z",
      "side": 1,
      "message": "Well, if zero_rate is not set, it will be 0. So this patch still works better than before by adding the check to skip outside the loop.",
      "parentUuid": "f0ae453a_d97e315f",
      "revId": "d51dd870384e3fc773f2150bd42df53374414214",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}