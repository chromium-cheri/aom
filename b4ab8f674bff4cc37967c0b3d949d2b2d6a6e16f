{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5ff4445_1213793c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2023-05-11T14:43:07Z",
      "side": 1,
      "message": "The allocation of workers, tile/thread specific data and sync objects for encoder multi-threading is currently done only once for a sequence at the beginning of encoding based on the first frame’s input resolution and thread configuration. Since the MT workers are computed based on frame resolution, if the dimension of subsequent frames increases, ‘num_enc_worker\u0027 will increase and the encoder will try to access unallocated thread data index, resulting in encoder crash. This CL fixes this issue by adding support for dynamic allocation of thread data based on the ‘num_enc_workers’ computed for each frame. Also added new test case in ‘TestExternalResizeWorks’ of ‘ResizeRealtimeTest’ to test this scenario as demonstrated in aomedia:3429.",
      "revId": "b4ab8f674bff4cc37967c0b3d949d2b2d6a6e16f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34a33b83_dff3bc00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-05-11T16:34:20Z",
      "side": 1,
      "message": "Thanks for fixing it! Looks good.",
      "parentUuid": "c5ff4445_1213793c",
      "revId": "b4ab8f674bff4cc37967c0b3d949d2b2d6a6e16f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}