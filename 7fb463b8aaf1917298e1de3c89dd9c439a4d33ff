{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd00be1_242dc506",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-10-20T16:11:44Z",
      "side": 1,
      "message": "looks good, what is the IC reduction for speed 10 screen?",
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62426967_847ef1de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-21T12:53:38Z",
      "side": 1,
      "message": "The optimization is specific to cdef_pick_method \u003c\u003d CDEF_FAST_SEARCH_LVL5 and cdef_pick_method \u003d CDEF_PICK_FROM_Q for speed\u003d10 screen. \nHence this optimization is not applicable for speed\u003d10 screen.",
      "parentUuid": "5fd00be1_242dc506",
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45bfa508_1a69134f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 25,
      "author": {
        "id": 5190
      },
      "writtenOn": "2022-10-21T15:34:54Z",
      "side": 1,
      "message": "Ok thanks",
      "parentUuid": "62426967_847ef1de",
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b9842cf_5bc85d07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-20T13:58:19Z",
      "side": 1,
      "message": "Hi Marco, Yunqing,\n\nIn the parent version (for 8-bit encoding), the error after CDEF filtering was calculated using 16-bit intermediate data and the filtering functions were called even for zero filter strength. In this CL, we tried improving both of the above cases when all the 8x8 blocks in a 64x64/128x128/128x64/64x128 CDEF block need to be filtered. When few 8x8 blocks of the CDEF block (64x64/128x128/128x64/64x128) needs to be filtered, the filtering and error calculation are the same as that of the parent version.\n\nPlease check the borg results for real-time encoding mode below. \n```\n              Instruction Count        BD-Rate Loss(%)\ncpu Resolution   Reduction(%)    avg.psnr   ovr.psnr   ssim\n  7        rtc      0.415         0.0000    0.0000    0.0000\n  7  rtc_1080p      0.942         0.0000    0.0000    0.0000\n  7 rtc_screen      2.364         0.0000    0.0000    0.0000\n  8        rtc      0.457         0.0000    0.0000    0.0000\n  8  rtc_1080p      0.633         0.0000    0.0000    0.0000\n  8 rtc_screen      2.555         0.0000    0.0000    0.0000\n  9  rtc_1080p      1.532         0.0000    0.0000    0.0000\n 10  rtc_1080p      1.560         0.0000    0.0000    0.0000\n\n```\nPlease check the borg results for good encoding mode below. \n```\n                Instruction Count          BD-Rate Loss(%)\ncpu    Testset    Reduction(%)    avg.psnr   ovr.psnr    ssim\n 5     LOWRES2      0.018          0.0000     0.0000    0.0000\n 5     MIDRES2      0.044          0.0000     0.0000    0.0000\n 5      HDRES2      0.071          0.0000     0.0000    0.0000\n 6     LOWRES2      0.014          0.0000     0.0000    0.0000\n 6     MIDRES2      0.033          0.0000     0.0000    0.0000\n 6      HDRES2      0.054          0.0000     0.0000    0.0000\n\n```\n\nThe instruction count reduction specified has been measured using command:\n $ perf stat -e instructions:u ./aomenc â€¦\n\nWe also verified that CL produces bit-exact output for other test-set/speed setting combinations in case of --rt usage.\n\nPlease review the CL. \n\nRegards,\nRanjit",
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf80c5d3_ee80c685",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-20T16:06:44Z",
      "side": 1,
      "message": "Nice optimization and good speedup for HD \u0026 SC.",
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce944d08_10f85db5",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 7
      },
      "lineNbr": 391,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-20T16:06:44Z",
      "side": 1,
      "message": "Does this also apply to high bit depth case? If yes, maybe at least add a TODO comment in HBD case?",
      "range": {
        "startLine": 391,
        "startChar": 8,
        "endLine": 391,
        "endChar": 46
      },
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5186faf6_64fb303c",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 7
      },
      "lineNbr": 391,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-21T12:53:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce944d08_10f85db5",
      "range": {
        "startLine": 391,
        "startChar": 8,
        "endLine": 391,
        "endChar": 46
      },
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d03967f_339e9759",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-10-20T16:06:44Z",
      "side": 1,
      "message": "Looks like you passed cpi in for get_filt_error(). Maybe it is better to follow the design of CdefSearchCtx, and only pass in what is needed in CdefSearchCtx (e.g. vf function pointer, etc)?",
      "range": {
        "startLine": 609,
        "startChar": 19,
        "endLine": 609,
        "endChar": 22
      },
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7eb9c4a_086833ca",
        "filename": "av1/encoder/pickcdef.c",
        "patchSetId": 7
      },
      "lineNbr": 609,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-10-21T12:53:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1d03967f_339e9759",
      "range": {
        "startLine": 609,
        "startChar": 19,
        "endLine": 609,
        "endChar": 22
      },
      "revId": "7fb463b8aaf1917298e1de3c89dd9c439a4d33ff",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}