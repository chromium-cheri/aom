{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0181a426_8129fe66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-02-27T21:10:33Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank, \n\nIn this CL, av1_alloc_pc_tree_node() is simplified by avoiding redundant initializations and av1_free_pc_tree_recursive() is modified to handle a special case when partition_search_type is VAR_BASED_PARTITION. In av1_alloc_pc_tree_node() even after doing a calloc, the pointers were being initialized to NULL, which is avoided in the current CL. In av1_free_pc_tree_recursive(), the extended partitions are not supported when partition_search_type is VAR_BASED_PARTITION. Hence their freeing is avoided in this CL.\nFor speed\u003d7, av1_free_pc_tree_recursive() is called at a superblock level, whereas av1_free_pc_tree_recursive() is called only once at frame level for speed\u003d8 and 9. Hence this optimization seems to have less scope for speed\u003d8 and 9.\n\nFor AVIF still-image encode with tune\u003dssim,\n```\ncpu-used        Encode Time\n                Reduction(%)\n   7               0.891\n```\nFor speed 8 and 9, we observed encode time reduction in the range of Â± 0.2%. However, negligible instruction count reduction is seen (for AVIF encode) as quoted below.\n```\n              Instruction Count\ncpu-used         Reduction (%)\n   7               0.427\n   8               0.003\n   9               0.001\n```\nFollowing are the instruction count reduction results when libaom allintra frame encoding (50 frames) was tested for a borg setup:\n```\n               Instruction Count\ncpu-used         Reduction (%)\n   7               0.690\n   8               0.016\n   9               0.034\n```\n\nFor libaom AV1 video encode, bit-match is verified (w.r.t. parent commit) for \u0027GOOD\u0027, \u0027RT\u0027 and \u0027ALLINTRA\u0027 encoding modes for a few contents with different encoding configurations. It is verified that the CL is bit-exact for AVIF still-image encode for a typical image dataset.\n\nLibavif commit used for testing: 20a0f7fa6268b5656fd66bdf39d0d70c8387eb51\n\nPlease review.\n\nRegards,\nNeha.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99fdd911_c4549b34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-01T12:10:33Z",
      "side": 1,
      "message": "Hi Wan-Teh, Frank,\n\nPlease review this CL.\n\nRegards,\nNeha",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0da24889_21282a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Hi Neha,\n\nI am sorry I forgot to review this CL. Thank you for the reminder.\n\nI suggest some changes.\n\nChi Yo: Please review.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bdf391b_82fbaaac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Some of your extended description here should go into either the commit message or a comment in the source code so it\u0027s easier to find. For example,\n\n\u003e In av1_alloc_pc_tree_node() even after doing a calloc, the pointers were being initialized to NULL, which is avoided in the current CL.\n\nThis could go into the commit mesage. I leave this decision to you.\n\n\u003e In av1_free_pc_tree_recursive(), the extended partitions are not supported when partition_search_type is VAR_BASED_PARTITION. Hence their freeing is avoided in this CL.\n\nPlease add an edited version of this to `av1_free_pc_tree_recursive()` as a comment for the new special case.\n\n\u003e For speed\u003d7, av1_free_pc_tree_recursive() is called at a superblock level, whereas av1_free_pc_tree_recursive() is called only once at frame level for speed\u003d8 and 9. Hence this optimization seems to have less scope for speed\u003d8 and 9.\n\nThis could go into the commit message. I defer to you.",
      "parentUuid": "0181a426_8129fe66",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f17cc78_ff6ae46c",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Optional: This is strictly speaking also redundant. But it depends on knowing `PARTITION_NONE` is equal to 0. So it is fine to keep this for clarity.\n\nNote: The value of `PARTITION_NONE` is specified in the AV1 specification, so it will not change.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfc7c0cb_2d6f53f3",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Omit this line because `aom_calloc()` already initializes `pc_tree-\u003eindex` to 0.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b833f07_a4456125",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfc7c0cb_2d6f53f3",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bd04035_775e01f8",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Optional: It would be good to add a comment to describe this special case.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66c62a3b_648c327d",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bd04035_775e01f8",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8296887_eca6912c",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "This line can be deleted if we move this new if statement (lines 174-208) after line 213, because this line will be covered by the if statement at lines 212-213.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3a64a48_dc9d7212",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 175,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "We accept that the suggestion improves the scope of optimisation though not applicable now (for keep_none\u003d1). However we retained the current code as it is more readable. Please let us know your suggestion.",
      "parentUuid": "e8296887_eca6912c",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a9d2bf_d5532912",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Put these assertions inside `#if !CONFIG_REALTIME_ONLY`.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcccb622_d3606a75",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "I suggest putting these assertions in for loops, inside an `#ifndef NDEBUG` block:\n\n```\n#if !defined(NDEBUG) \u0026\u0026 !CONFIG_REALTIME_ONLY\n  for (int i \u003d 0; i \u003c 2; ++i) {\n    assert(pc_tree-\u003ehorizontal[i] \u003d\u003d NULL);\n    assert(pc_tree-\u003evertical[i] \u003d\u003d NULL);\n  }\n  ...\n#endif\n```",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4faed96a_b829d560",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3a9d2bf_d5532912",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be8aaea3_169beba8",
        "filename": "av1/encoder/context_tree.c",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fcccb622_d3606a75",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "162f2ffc_fc95cddc",
        "filename": "av1/encoder/context_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Nit/optional: The code will be more readable if we pass `PARTITION_SEARCH_TYPE partition_search_type` as the new paramter. The comparison `partition_search_type \u003d\u003d VAR_BASED_PARTITION` will need to be done inside `av1_free_pc_tree_recursive()` in every recursive call, but this may be a good trade-off.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6310124_6566f0c8",
        "filename": "av1/encoder/context_tree.h",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "162f2ffc_fc95cddc",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656c2910_51b9ccc9",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 4715,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "The result of a comparison is already a boolean, so this can be simplified to:\n\n```\n  bool is_var_based_partition \u003d\n      (cpi-\u003esf.part_sf.partition_search_type \u003d\u003d VAR_BASED_PARTITION);\n```\n\nNote that you didn\u0027t use the ternary operator at line 5017, for example.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0deaced1_2461734c",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 4715,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "656c2910_51b9ccc9",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b2cb1c9_b6e3e29b",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5017,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Nit: This can be saved in a local variable before the for loop at line 5013.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efe29fba_148b3e64",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5017,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b2cb1c9_b6e3e29b",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "290dd31c_52f99286",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5103,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "Nit: Omit the ternary operator.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f1a2492_fbb8e39f",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5103,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Ack. Since ```partition_search_type``` is the new parameter to the ```av1_free_pc_tree_recursive()``` function, this change is not applicable.",
      "parentUuid": "290dd31c_52f99286",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e71fdf35_1a248d9e",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5619,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-03-01T18:00:59Z",
      "side": 1,
      "message": "It\u0027s not clear why `is_var_based_partition` is false here. A comment would be helpful. Also at line 5636.\n\nIf the reason is the same at both places, we can define a variable\n\n```\n  // Explain why this is false.\n  const bool is_var_based_partition \u003d false;\n```\n\nand use the variable in both places, to avoid repeating the comment.",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a72bdc3_8d1e8e0c",
        "filename": "av1/encoder/partition_search.c",
        "patchSetId": 2
      },
      "lineNbr": 5619,
      "author": {
        "id": 31567
      },
      "writtenOn": "2023-03-03T00:08:17Z",
      "side": 1,
      "message": "Ack. Since partition_search_type is the new parameter to the av1_free_pc_tree_recursive() function, this change is not applicable.",
      "parentUuid": "e71fdf35_1a248d9e",
      "revId": "b7e41c520d4c293b9d3ce7c87e86b54b753bd5a6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}