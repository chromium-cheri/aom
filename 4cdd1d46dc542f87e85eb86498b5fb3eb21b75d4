{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b3cb8096_9cb55d32",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-07-13T01:58:04Z",
      "side": 1,
      "message": "Presumably you\u0027ve already tried this, but I thought I should at least ask:\n\nDoes this actually work in Xcode? It\u0027s pretty much the _worst_ generator, so just wondering if it works or silently does nothing (or worse, nags and/or spams warnings). \n\nCmake docs are, of course, unclear as to whether or not Xcode obeys the property.",
      "range": {
        "startLine": 59,
        "startChar": 25,
        "endLine": 59,
        "endChar": 30
      },
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "088b0c5c_b94154aa",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T02:04:00Z",
      "side": 1,
      "message": "\u003e Presumably you\u0027ve already tried this, but I thought I should at least ask:\n\u003e \n\u003e Does this actually work in Xcode? It\u0027s pretty much the _worst_ generator, so just wondering if it works or silently does nothing (or worse, nags and/or spams warnings). \n\u003e \n\u003e Cmake docs are, of course, unclear as to whether or not Xcode obeys the property.\n\nNot yet. I didn\u0027t have access today. I was testing this under visual studio. I\u0027ll give it a run through xcode...",
      "parentUuid": "b3cb8096_9cb55d32",
      "range": {
        "startLine": 59,
        "startChar": 25,
        "endLine": 59,
        "endChar": 30
      },
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "212fd5ee_633b5a7e",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T02:04:00Z",
      "side": 1,
      "message": "\u003e Presumably you\u0027ve already tried this, but I thought I should at least ask:\n\u003e \n\u003e Does this actually work in Xcode? It\u0027s pretty much the _worst_ generator, so just wondering if it works or silently does nothing (or worse, nags and/or spams warnings). \n\u003e \n\u003e Cmake docs are, of course, unclear as to whether or not Xcode obeys the property.\n\nNot yet. I was testing this under visual studio. I\u0027ll give it a run through xcode...",
      "parentUuid": "b3cb8096_9cb55d32",
      "range": {
        "startLine": 59,
        "startChar": 25,
        "endLine": 59,
        "endChar": 30
      },
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c553cc73_8b2d833d",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T03:50:11Z",
      "side": 1,
      "message": "\u003e \u003e Presumably you\u0027ve already tried this, but I thought I should at least ask:\n\u003e \u003e \n\u003e \u003e Does this actually work in Xcode? It\u0027s pretty much the _worst_ generator, so just wondering if it works or silently does nothing (or worse, nags and/or spams warnings). \n\u003e \u003e \n\u003e \u003e Cmake docs are, of course, unclear as to whether or not Xcode obeys the property.\n\u003e \n\u003e Not yet. I was testing this under visual studio. I\u0027ll give it a run through xcode...\n\nit\u0027s almost the same as visual, but xcode doesn\u0027t bundle some of the cmake targets like ALL_BUILD to another folder.",
      "parentUuid": "212fd5ee_633b5a7e",
      "range": {
        "startLine": 59,
        "startChar": 25,
        "endLine": 59,
        "endChar": 30
      },
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83294c1e_a3ff370e",
        "filename": "aom_dsp/aom_dsp.cmake",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T01:23:50Z",
      "side": 1,
      "message": "I started with a separate folder layout. Now that this is common I\u0027ll move some of the logic to add_asm_library / add_intrinsics_object_library to handle targets a little better between x86/x86-64",
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0907eeff_2dd00744",
        "filename": "aom_dsp/aom_dsp.cmake",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-07-13T01:58:04Z",
      "side": 1,
      "message": "Sounds good-- The unwrapped/one-off stuff like examples/tests/tools/etc are fine, but I think the set_property() noise here could be reduced significantly by (ab)using $AOM_TARGET_CPU in add_asm_library()/add_intrinsics_object_library().\n\nSomething like this at the bottom of each (or in a helper macro):\n\n    if(ENABLE_FOLDERS)\n      if(x86)\n      ...\n      elseif(x86_64)\n      ...\n      elseif(neon)\n      ...\n      endif()\n    endif()",
      "parentUuid": "83294c1e_a3ff370e",
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "875d1f51_dd4cf31f",
        "filename": "aom_dsp/aom_dsp.cmake",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T02:04:00Z",
      "side": 1,
      "message": "\u003e Sounds good-- The unwrapped/one-off stuff like examples/tests/tools/etc are fine, but I think the set_property() noise here could be reduced significantly by (ab)using $AOM_TARGET_CPU in add_asm_library()/add_intrinsics_object_library().\n\u003e \n\nGood point. I figured the others weren\u0027t quite as busy, but I didn\u0027t think about using AOM_TARGET_CPU. Let me make another pass after I check this under Xcode. Sorry for the noise, the structure changed a bit as I was playing around with this.\n\n\u003e Something like this at the bottom of each (or in a helper macro):\n\u003e \n\u003e     if(ENABLE_FOLDERS)\n\u003e       if(x86)\n\u003e       ...\n\u003e       elseif(x86_64)\n\u003e       ...\n\u003e       elseif(neon)\n\u003e       ...\n\u003e       endif()\n\u003e     endif()",
      "parentUuid": "0907eeff_2dd00744",
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df32a55_86430e05",
        "filename": "aom_dsp/aom_dsp.cmake",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-07-13T03:10:44Z",
      "side": 1,
      "message": "I haven\u0027t thought about the aom build in a while ,and it occurred to me that the neon bit probably needs to be something like:\n\n    elseif(${AOM_TARGET_CPU} MATCHES ^arm)\n    \nAnd, I always forget that x86_64 simd is all of x86 + x86_64 specific stuff when I don\u0027t stop and think for a moment, so the naive conditionals I suggested probably mean you get everything in x86_64 named folders when you do an x86_64 config. Not ideal, but maybe not a big deal since this is mainly cosmetic for the purpose of making IDEs more developer friendly.",
      "parentUuid": "875d1f51_dd4cf31f",
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8712fbb4_2eeaf538",
        "filename": "aom_dsp/aom_dsp.cmake",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-07-13T03:49:18Z",
      "side": 1,
      "message": "\u003e I haven\u0027t thought about the aom build in a while ,and it occurred to me that the neon bit probably needs to be something like:\n\u003e \n\u003e     elseif(${AOM_TARGET_CPU} MATCHES ^arm)\n\u003e     \n\u003e And, I always forget that x86_64 simd is all of x86 + x86_64 specific stuff when I don\u0027t stop and think for a moment, so the naive conditionals I suggested probably mean you get everything in x86_64 named folders when you do an x86_64 config. Not ideal, but maybe not a big deal since this is mainly cosmetic for the purpose of making IDEs more developer friendly.\n\nMuch simpler now just using AOM_TARGET_CPU and it seems to work with Xcode too.",
      "parentUuid": "0df32a55_86430e05",
      "revId": "4cdd1d46dc542f87e85eb86498b5fb3eb21b75d4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}