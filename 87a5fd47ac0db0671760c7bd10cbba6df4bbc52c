{
  "comments": [
    {
      "key": {
        "uuid": "21fd29f1_f5633e8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 15298
      },
      "writtenOn": "2020-08-10T15:05:53Z",
      "side": 1,
      "message": "Hi Yunqing,\n\nModified the patch with suggested changes.\nPlease review.\n\nThanks\n\n",
      "revId": "87a5fd47ac0db0671760c7bd10cbba6df4bbc52c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2f7d90f_319635be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-08-10T23:34:43Z",
      "side": 1,
      "message": "Thanks for modifying it. Printed the stats out.\nBitrate\tAVGPsnr\tGLBPsnr\tAVPsnrP\tGLPsnrP\tAOMSSIM\tVPSSIMP\tFASTSIM\tPSNRHVS\tWstPsnr\tWstSsim\tWstFast\tWstHVS\tAVPsrnY\tAPsnrCb\tAPsnrCr\t  Block\tWstBlck\tConsist\tWstCons\t    Time\tRcErr\tAbsErr\tAPsnr611\tAVPsnr_H\tGLPsnr_H\tAVPsnrP_H\tGLPsnrP_H\tAVPsnrY_H\tAPsnrCb_H\tAPsnrCr_H\n  74.74\t 47.504\t 47.498\t 47.504\t 47.498\t 94.411\t 94.411\t 18.640\t 46.912\t 46.709\t  0.992\t 18.306\t 45.113\t 46.926\t 48.251\t 49.838\t  0.000\t  0.000\t100.000\t100.000\t   14541\t -62.63\t  62.63\t 47.455\t 47.909\t 47.902\t 47.909\t 47.902\t 47.304\t 48.668\t 50.443\nNo mismatch detected in recon buffers\n\nCould you modify the format to make \"    Time\tRcErr\tAbsErr\tAPsnr611\tAVPsnr_H\tGLPsnr_H\tAVPsnrP_H\tGLPsnrP_H\tAVPsnrY_H\tAPsnrCb_H\tAPsnrCr_H\" more compact(1 space in-between could be fine)?\n\n",
      "revId": "87a5fd47ac0db0671760c7bd10cbba6df4bbc52c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0467e382_c05bd28e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2020-08-11T03:30:36Z",
      "side": 1,
      "message": "In this change, with \"--psnr\" option, aomenc prints out \"HBD PSNR\"(using coded bit depth). Discussed it with Deb, it is probably better to provide psnr result based on users\u0027 choice. We can make \"--psnr\" to take in input. Something like:\n\"--psnr\u003d0\" or no --psnr in command: no psnr output\n\"--psnr\u003d1(using_coded_bit_depth)\" or \"--psnr\": this is the default case\n\"--psnr\u003d2(using_input_bit_depth)\"\nTo be compatible with current \"--psnr\" option, the input to \"--psnr\" needs to be made optional.\nWhat do you think?",
      "revId": "87a5fd47ac0db0671760c7bd10cbba6df4bbc52c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8890d107_6743c19e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 15298
      },
      "writtenOn": "2020-08-12T15:25:35Z",
      "side": 1,
      "message": "We have modified the formatting in internal stat file from tab to space for the above mentioned metrics. We also verified that with the changes, the borg setup remains unaffected and performs as before.",
      "parentUuid": "d2f7d90f_319635be",
      "revId": "87a5fd47ac0db0671760c7bd10cbba6df4bbc52c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0644643_5bb2057d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 15298
      },
      "writtenOn": "2020-08-12T15:25:35Z",
      "side": 1,
      "message": "We have added support to take arguments for –psnr option. It can now take values as 0/1/2. The variable ‘show_psnr’ in AvxEncoderConfig structure is set based on the --psnr argument.\n\n--psnr\u003d1 is default option, which displays psnr value based on input bit-depth\n--psnr\u003d2 displays the psnr value based on stream bit-depth\n--psnr\u003d0 disables the psnr value display\n\nIn order to support back compatibility, --psnr without any argument is still maintained as a valid option and is set to the default option (based on input bit-depth). For supporting this, we have extended the valid values for the variable “has_val” in arg_def_t structure to include “-1”. When has_val \u003d -1, the function arg_match() will return with 1 irrespective of the presence or absence of the argument. This backward compatibility also avoids Jenkins libaom_encode_multijob test build failure, where the --psnr argument is used internally. Hope this is fine. \n\nThe changes affect only the psnr status line displayed in the console log. Internal stats compute both sets of PSNR - PSNR based on input bit-depth as default and PSNR based on codec bit-depth when input bit-depth is less than stream bit bit-depth.",
      "parentUuid": "0467e382_c05bd28e",
      "revId": "87a5fd47ac0db0671760c7bd10cbba6df4bbc52c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}