{
  "comments": [
    {
      "key": {
        "uuid": "88373bda_79eaf8dd",
        "filename": "aom_mem/aom_mem.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-08-22T17:10:27Z",
      "side": 1,
      "message": "How this behaves is unclear from the name:\nrealloc does alloc+free+memcpy\ncalloc does 2-parameter-alloc+clear\n\nIn fact the implementation of this function seems to copy then clear the whole thing if I\u0027m reading it properly.",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "6614a9cb60bb4185c8413dea764d9122d8a7be5c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "685f6759_b9627f3e",
        "filename": "aom_mem/aom_mem.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 5290
      },
      "writtenOn": "2016-08-22T18:59:06Z",
      "side": 1,
      "message": "Both excellent points, Alex.\nI think you are right; this may actually be more confusing than useful.\nUnless you have a suggestion to make this easier to understand, I\u0027m willing to drop this patch.",
      "parentUuid": "88373bda_79eaf8dd",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "6614a9cb60bb4185c8413dea764d9122d8a7be5c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88373bda_f92a6827",
        "filename": "av1/encoder/encodeframe.c",
        "patchSetId": 2
      },
      "lineNbr": 2629,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-08-22T17:10:27Z",
      "side": 1,
      "message": "Doesn\u0027t match commit message",
      "range": {
        "startLine": 2629,
        "startChar": 20,
        "endLine": 2629,
        "endChar": 31
      },
      "revId": "6614a9cb60bb4185c8413dea764d9122d8a7be5c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88373bda_bcc5ee3a",
        "filename": "av1/encoder/encoder.c",
        "patchSetId": 2
      },
      "lineNbr": 697,
      "author": {
        "id": 5030
      },
      "writtenOn": "2016-08-22T17:17:42Z",
      "side": 1,
      "message": "I know it currently is, but does this allocation actually need to be zeroed?\n\nIt\u0027s always read with begin and end limits, so my intuition says no.",
      "range": {
        "startLine": 697,
        "startChar": 29,
        "endLine": 697,
        "endChar": 37
      },
      "revId": "6614a9cb60bb4185c8413dea764d9122d8a7be5c",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}