{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c0428f2d_428deecb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-11-17T20:51:47Z",
      "side": 1,
      "message": "Was this causing a link failure or a warning in some way?\n\nI think this change is doing two things: namespacing the array, which is good, and trying to deal with the common data. I\u0027m not convinced all of the arrays need to be visible given how they\u0027re used. They could instead be moved to a C file, but it will require a closer inspection.\n\nFor this change let\u0027s first namespace the globals.",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ac83f5e_ca0adf4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 31457
      },
      "writtenOn": "2022-11-18T18:34:38Z",
      "side": 1,
      "message": "Both __declspec(selectany) and __attribute__((selectany)) were causing compile failures on non-windows targets. I agree that moving the common data definitions to their own C file would be a good idea. Should I proceed with that on a new CL?",
      "parentUuid": "c0428f2d_428deecb",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "787d7f3d_7dfdc0f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-11-18T19:01:31Z",
      "side": 1,
      "message": "I would probably suggest adding av1/common/common_data.c and defining `av1_ss_size_lookup` in the .c file. You can model it after the `av1_wedge_params_lookup` table (declared in av1/common/reconinter.h and defined in av1/common/reconinter.c).",
      "parentUuid": "1ac83f5e_ca0adf4c",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16ab6d99_1802c98a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-11-19T00:44:28Z",
      "side": 1,
      "message": "\u003e I would probably suggest adding av1/common/common_data.c and defining av1_ss_size_lookup in the .c file. You can model it after the av1_wedge_params_lookup table (declared in av1/common/reconinter.h and defined in av1/common/reconinter.c).\n\n+1\n\n\u003e Both declspec(selectany) and __attribute((selectany)) were causing compile failures on non-windows targets. I agree that moving the common data definitions to their own C file would be a good idea. Should I proceed with that on a new CL?\n\nSorry it wasn\u0027t clear, I knew __declspec would cause failures here, I was wondering how you discovered the issue between libaom and libvpx and whether it was a build error or warning in some Visual Studio configuration.",
      "parentUuid": "787d7f3d_7dfdc0f0",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67c6f87_8980f6d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 31457
      },
      "writtenOn": "2022-11-21T18:34:40Z",
      "side": 1,
      "message": "Ah yes, I discovered it when building chrome locally. This is the error message I got:\nlibvpx.lib(vp9_common_data.obj) : error LNK2005: ss_size_lookup already defined in aom_quantize_avx.obj\n.\\v8_context_snapshot_generator.exe : fatal error LNK1169: one or more multiply defined symbols found\n\nAlso, I will go ahead with creating a common_data.c file for the fix.",
      "parentUuid": "16ab6d99_1802c98a",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1126fe4b_5ec73ffb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 31457
      },
      "writtenOn": "2022-11-22T22:32:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b67c6f87_8980f6d4",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b071436_ef6678b9",
        "filename": "av1/common/common_data.h",
        "patchSetId": 9
      },
      "lineNbr": 383,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-11-18T19:01:31Z",
      "side": 1,
      "message": "I suggest using the `av1_` prefix instead of `aom_` for this variable name.",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98e3d9ae_f101d959",
        "filename": "av1/common/common_data.h",
        "patchSetId": 9
      },
      "lineNbr": 383,
      "author": {
        "id": 31457
      },
      "writtenOn": "2022-11-22T22:32:28Z",
      "side": 1,
      "message": "I created a new CL at https://aomedia-review.googlesource.com/c/aom/+/167001. This one tackles the same problem with the fix you suggested. I only fixed ss_size_lookup but there are obviously plenty more definitions that can be moved into the new common_data.c file I created. Let me know what you think.",
      "parentUuid": "0b071436_ef6678b9",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6c39fd6_336eb146",
        "filename": "av1/common/common_data.h",
        "patchSetId": 9
      },
      "lineNbr": 383,
      "author": {
        "id": 31457
      },
      "writtenOn": "2022-11-22T22:33:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98e3d9ae_f101d959",
      "revId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "342c66c4a2eeca7fe817d901a5a50575b115ddc0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}