{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6aaf828d_0ec24c92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:23:03Z",
      "side": 1,
      "message": "James: Please review.\n\nSteve: Just FYI because this is related to your CL https://aomedia-review.googlesource.com/c/aom/+/178241.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1bdd097_007ff40d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:30:09Z",
      "side": 1,
      "message": "I annotated some code to help you review this CL, and to show how we call `include(FindThreads)` and `find_package(Threads)`.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3b20465_0594aa4f",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 785,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:30:09Z",
      "side": 1,
      "message": "Note that we call `find_package(Threads)` only when both `HAVE_PTHREAD_H` and `CONFIG_MULTITHREAD` are equal to 1.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44883301_e6c0eaca",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:30:09Z",
      "side": 1,
      "message": "`find_package(Git)` is at line 439.\n\n`find_package(Perl)` is at line 449.\n\nSo this CL doesn\u0027t need to add them.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fc054a7_fc935b40",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-07-19T19:56:07Z",
      "side": 1,
      "message": "\u003e `find_package(Git)` is at line 439.\n\u003e \n\u003e `find_package(Perl)` is at line 449.\n\u003e \n\u003e So this CL doesn\u0027t need to add them.\n\nI guess earlier `find_package()` became a noop; at least I only see output related to the include calls not from them. This does mean detection is deferred until that call. Basic prerequisites could be moved earlier, though I don\u0027t think the tools are used by any of the includes that follow.",
      "parentUuid": "44883301_e6c0eaca",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ad39740_1280d686",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T22:45:00Z",
      "side": 1,
      "message": "I verified that the variables set by those CMake modules are only used after the `find_package()` calls.",
      "parentUuid": "3fc054a7_fc935b40",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d82b779_7b682f29",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:30:09Z",
      "side": 1,
      "message": "Note that we call `include(FindThreads)` unconditionally without checking `CONFIG_MULTITHREAD`.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4505f1d_cdce3e74",
        "filename": "build/cmake/aom_configure.cmake",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-07-19T19:30:09Z",
      "side": 1,
      "message": "Since we call `include(FindThreads)` unconditionally, `HAVE_PTHREAD_H` is set to the \"correct\" value even when `CONFIG_MULTITHREAD` is 0.",
      "revId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "40120fca72cada5ed4d69ec1db4f7e689f9eedef",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}