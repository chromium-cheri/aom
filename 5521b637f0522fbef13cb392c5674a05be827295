{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "13924934_1a86d3a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-04-05T18:12:13Z",
      "side": 1,
      "message": "Thanks for the review.",
      "revId": "5521b637f0522fbef13cb392c5674a05be827295",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "747ad474_75346f3b",
        "filename": "examples/svc_encoder_rtc.c",
        "patchSetId": 3
      },
      "lineNbr": 1617,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-04-05T18:12:13Z",
      "side": 1,
      "message": "I had to add this assertion to appease the Clang static analyzer (scan-build).\n\nWithout this assertion, the Clang static analyzer warns about the next line:\n\n```\naom/examples/svc_encoder_rtc.c:1618:42: warning: The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage [core.uninitialized.Assign]\n              rc.layer_avg_frame_size[j] +\u003d 8.0 * pkt-\u003edata.frame.sz;\n              ~~~~~~~~~~~~~~~~~~~~~~~~~~ ^\n\n```\n\nAnd the reason given is \u0027\"j\" initialized to -1\u0027. It took the static analyzer 156 steps to arrive at that condition (which is Step 157). I inspected all those steps and did not see anything related to \u0027\"j\" initialized to -1\u0027. So I added `assert(j \u003e\u003d 0)` to tell the static analyzer that \"j\" cannot be negative.",
      "revId": "5521b637f0522fbef13cb392c5674a05be827295",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}