{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "03f67d2f_1d9dd554",
        "filename": "test/test.cmake",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-03-30T02:34:31Z",
      "side": 0,
      "message": "When I extended this approach to GCC, I got a warning when usage_exit.c was compiled, because GCC\u0027s -Dno-deprecated-copy flag is C++ only.\n\nIt doesn\u0027t seem possible to restrict target_compile_options() to C++ files. So I went back to the add_cxx_flag_if_supported() approach. The downside is that all C++ files, not just those that include googletest headers, will disable these compiler warnings.\n\nNote: A possible solution is to generate usage_exit.cc. I remember one of the Arm engineers tried that (in the Chromium source tree).",
      "revId": "0120ce150d579a012aa724843225366f7ac76b06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03777fbd_756af911",
        "filename": "test/test.cmake",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-03-30T02:52:46Z",
      "side": 0,
      "message": "\u003e When I extended this approach to GCC, I got a warning when usage_exit.c was compiled, because GCC\u0027s -Dno-deprecated-copy flag is C++ only.\n\u003e \n\u003e It doesn\u0027t seem possible to restrict target_compile_options() to C++ files. So I went back to the add_cxx_flag_if_supported() approach. The downside is that all C++ files, not just those that include googletest headers, will disable these compiler warnings.\n\u003e \n\u003e Note: A possible solution is to generate usage_exit.cc. I remember one of the Arm engineers tried that (in the Chromium source tree).\n\nWe just have usage_exit.c for now:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/libaom/cmake_update.sh;l\u003d148;drc\u003d9faf9f2fdb47e305fff21cdfbd4f8357ab391420\n\nI think it was this:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/4573538\n\nYou might also be able to split the target so the `target_compile_options()` solution could work.",
      "parentUuid": "03f67d2f_1d9dd554",
      "revId": "0120ce150d579a012aa724843225366f7ac76b06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6827399a_3d186151",
        "filename": "test/test.cmake",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-03-30T17:26:42Z",
      "side": 0,
      "message": "Done. Thanks a lot for looking up that CL. I also found that the av1-normative branch has usage_exit.cc. (I missed it earlier.) So it\u0027s easy to make the `target_compile_options()` solution work.",
      "parentUuid": "03777fbd_756af911",
      "revId": "0120ce150d579a012aa724843225366f7ac76b06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4ff4e35_b345c7fc",
        "filename": "test/test.cmake",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-03-30T22:42:55Z",
      "side": 0,
      "message": "I may have misunderstood your suggestion of splitting the target. I guess the following CL is what you meant?\n\nhttps://aomedia-review.googlesource.com/c/aom/+/188661",
      "parentUuid": "6827399a_3d186151",
      "revId": "0120ce150d579a012aa724843225366f7ac76b06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}