{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e18950c0_6615a66a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: Please avoid using the abbreviation \"sf\" in commit messages and comments. It is fine to use the abbreviation in the subject line because it has a 50-character limit.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f1c0a64_b37dffce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e18950c0_6615a66a",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5776e3e3_6c1106f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T18:12:54Z",
      "side": 1,
      "message": "Could you explain why this speed feature does not have any impact for speed\u003d9?\n\nYou can explain that in the commit message or in a source code comment.",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a67a1238_dc3ba7ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5776e3e3_6c1106f1",
      "range": {
        "startLine": 12,
        "startChar": 30,
        "endLine": 12,
        "endChar": 64
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bb90268_14d27cba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-10T15:22:11Z",
      "side": 1,
      "message": "Hi Chi Yo, Wan-Teh,\nWe addressed the comments in the latest patchset (patchset 5) and did a sanity verification of the same. \nPlease review the CL.\nRegards,\nRanjit\n",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c02a238_3d86dbd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Ranjit: Thank you for the CL. Although I read the CL carefully, I am not familiar with the code, so I only checked coding style and general issues. Please wait for Chi Yo\u0027s review.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3a10067_c814a042",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Sure. We shall wait for review comments from Chi-Yo.",
      "parentUuid": "0c02a238_3d86dbd1",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c2848dc_0c97ea00",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 448,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: Add a blank line after this line.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "156b68b4_ebdfe751",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 448,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c2848dc_0c97ea00",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "468be516_f36f676c",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 450,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: Bit-mask \u003d\u003e Bitmask\n\nThis word is usually spelled without the hyphen.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62fb5097_693ef755",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 450,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Ack.\n\nWe corrected the variable name and explanation as bit-mask based implementation is avoided in the latest patchset.",
      "parentUuid": "468be516_f36f676c",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29e9976e_d2be97be",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 455,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: add a space before the opening paranthesis \u0027(\u0027.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e807b7_4049420d",
        "filename": "av1/encoder/block.h",
        "patchSetId": 5
      },
      "lineNbr": 455,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29e9976e_d2be97be",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fea0a9e_9dc055db",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 5
      },
      "lineNbr": 1201,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: Since this field is of the `bool` type, we should use `false` and `true` instead of 0 and 1 when documenting its values.",
      "range": {
        "startLine": 1200,
        "startChar": 0,
        "endLine": 1201,
        "endChar": 6
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c505a78_e47dc94a",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 5
      },
      "lineNbr": 1201,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fea0a9e_9dc055db",
      "range": {
        "startLine": 1200,
        "startChar": 0,
        "endLine": 1201,
        "endChar": 6
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cadda5cf_3916d2ca",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 5
      },
      "lineNbr": 1202,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: Add a blank line to separate the paragraphs in the comment block:\n\n  // ...\n  // 1: Avoid the evaluation of specific transform depths using NN\n  // model.\n  //\n  // For allintra encode, this speed feature reduces instruction count\n  // by 4.76%, 8.92% and 11.28% for speed 6, 7 and 8 with coding performance\n  // ...",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "273d7e36_3f34fdbb",
        "filename": "av1/encoder/speed_features.h",
        "patchSetId": 5
      },
      "lineNbr": 1202,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cadda5cf_3916d2ca",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e03e24_9901a9b6",
        "filename": "av1/encoder/tx_prune_model_weights.h",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Although this file (av1/encoder/tx_prune_model_weights.h) is a .h file, it is only included by av1/encoder/tx_search.c. In some software projects the file suffix .inc is used for this kind of file, because they are not really header files.\n\nIt would be good to add a file comment here to describe how this file is intended to be used. Also, we should remove the #ifdef __cplusplus extern \"C\" stuff because it is not necessary.\n\nNote: We could also remove the header include guard AOM_AV1_ENCODER_TX_PRUNE_MODEL_WEIGHTS_H_, but I am worried that the Style Check would fail.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a2ab62e_5c7d3d49",
        "filename": "av1/encoder/tx_prune_model_weights.h",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "\u003e It would be good to add a file comment here to describe how this file is intended to be used. \n\nDone. \n\n\u003e Also, we should remove the #ifdef __cplusplus extern \"C\" stuff because it is not necessary.\n\nPlease let us know if we should explore this.",
      "parentUuid": "64e03e24_9901a9b6",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c78e11db_3b67ec89",
        "filename": "av1/encoder/tx_prune_model_weights.h",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-13T23:22:31Z",
      "side": 1,
      "message": "I would remove the #ifdef __cplusplus extern \"C\" stuff. But it\u0027s just a cosmetic issue and I am worried that it may be added back as a \"cleanup\".",
      "parentUuid": "0a2ab62e_5c7d3d49",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23a5965d_f893adfa",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Move this enum definition to av1/encoder/block.h near the declaration of the nn_prune_mask_for_intra_tx_depths field?\n\nThe values of this enum type are only used with nn_prune_mask_for_intra_tx_depths.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09cc2039_61b77f7e",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23a5965d_f893adfa",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5700a72_50bbc4f7",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1659,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "1. Please document the return value. (I think it\u0027s the number of elements written to the output array.)\n\n2. This is a pre-existing problem. The comment should document how large the output array `feature` should be.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a82eeb0a_682b28f8",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1659,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5700a72_50bbc4f7",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dde7a86_eadd50ea",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1661,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: I suggest naming this parameter `features` (plural).",
      "range": {
        "startLine": 1661,
        "startChar": 68,
        "endLine": 1661,
        "endChar": 74
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7da85e33_55512fa2",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1661,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1dde7a86_eadd50ea",
      "range": {
        "startLine": 1661,
        "startChar": 68,
        "endLine": 1661,
        "endChar": 74
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a4f191_a32401d2",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1722,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T18:12:54Z",
      "side": 1,
      "message": "Chi Yo: If our code is working as I expected, we should not need to initialize the output arrays `features` and the output variable `score` here. Correct?\n\nI am just checking my understanding. It is not necessary to change this function in this CL.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a18e32f7_b20f30b4",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1722,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "For rectangular transforms, all the elements of features[] may not be populated. Hence we feel it is recommended to initialize the array to avoid any potential uninitialized access. \n\nWe have removed the initialization for the \u0027score\u0027 variable in ml_predict_intra_tx_depth_prune().",
      "parentUuid": "d8a4f191_a32401d2",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73fc1f0b_4f57ce1d",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1722,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-06-14T03:00:43Z",
      "side": 1,
      "message": "We shouldn\u0027t need to initialize the array here.\nRemoving it might slightly reduce the overhead, but it\u0027s unlikely to make a material difference in encoding time.",
      "parentUuid": "a18e32f7_b20f30b4",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cb74a5b_38ab319e",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 1722,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-14T16:27:32Z",
      "side": 1,
      "message": "Chi Yo, Ranjit: Thank you for your replies.\n\nThe reason I asked whether the `features` output array needs to be initialized is not because I was worried about the initialization overhead. I just wanted to check my understanding of the code.",
      "parentUuid": "73fc1f0b_4f57ce1d",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b9cab6d_aed4065e",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2783,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "It would be good to explain concisely whythe pruning logic is disabled for case 2 and case 3, like you do in case 1 (line 2781) and in the comment at line 2788.",
      "range": {
        "startLine": 2782,
        "startChar": 0,
        "endLine": 2783,
        "endChar": 45
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e60d34d_7e478421",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2783,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b9cab6d_aed4065e",
      "range": {
        "startLine": 2782,
        "startChar": 0,
        "endLine": 2783,
        "endChar": 45
      },
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02a6ad85_4be13252",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2810,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "IMPORTANT: If this assertion is correct, it implies that the conditional `blk_idx \u003e 1` at line 1698 is always true or always false, i.e., a constant.\n\nIf that conditional is not a constant, then this assertion will fail sometimes.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "186a676c_9205b296",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2810,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Ack. As 8x8 transform block (square) is only supported currently, the condition is always true. This assertion may fail in future if the support for rectangular transform blocks is also added as lesser number of features will be available in this case (\u0027blk_idx \u003e 1\u0027 will be true in this case also). \n\nAs per our understanding the conditional  \u0027blk_idx \u003e 1\u0027  at line 1698 can be removed as it should always be true for square/rectangular transform blocks in case of inter/intra transform split. Please let us know if we should pursue this in a separate CL.",
      "parentUuid": "02a6ad85_4be13252",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0539626d_d48d500c",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2810,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-13T23:22:31Z",
      "side": 1,
      "message": "Yes, please look into removing the conditional \u0027blk_idx \u003e 1\u0027 at line 1698.",
      "parentUuid": "186a676c_9205b296",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3a408dd_31300588",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2816,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit/optional: It should be unnecessary to initialize `score` because av1_nn_predict() will always set it as the output argument, right?",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1a08d09_d81e674b",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2816,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3a408dd_31300588",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "258338f1_fe3bdb39",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2823,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "IMPORTANT: Because of the `else` in line 2822, we never set TX_PRUNE_SPLIT and TX_PRUNE_LARGEST at the same time. This means in the current implementation, nn_prune_mask_for_intra_tx_depths does not need to be a bitmask; it can be a simple enum type.\n\nDo you think we will set both TX_PRUNE_SPLIT and TX_PRUNE_LARGEST under some conditions in the future?",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59b0747a_516fdd8a",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2823,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done.\n\nThough it is possible to prune both largest and split transforms (using features like current best rd etc), we have not experimented with the same. Hence we modified the enum as per current behavior.",
      "parentUuid": "258338f1_fe3bdb39",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cdead2f_39bcba14",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2917,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: add a period at the end of the sentence.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "949f771f_692b7a5f",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2917,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9cdead2f_39bcba14",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7be45ea8_dbd1bef2",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2918,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-06-10T17:52:52Z",
      "side": 1,
      "message": "Nit: we can set this to `false` because this is of the `bool` type.",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1634ee4b_03031256",
        "filename": "av1/encoder/tx_search.c",
        "patchSetId": 5
      },
      "lineNbr": 2918,
      "author": {
        "id": 6245
      },
      "writtenOn": "2022-06-13T20:17:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7be45ea8_dbd1bef2",
      "revId": "50df0684fa9362f5bda453c6d983fb064a6aa570",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}