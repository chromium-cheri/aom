{
  "comments": [
    {
      "key": {
        "uuid": "000cd667_70ea06fc",
        "filename": "test/decode_api_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-07-17T22:43:56Z",
      "side": 1,
      "message": "Do we really need this? I\u0027d prefer to export the algo symbol.\n\n\u003e Fortunately, adding this symbol with the leading underscore to the exported symbols works fine, but I don\u0027t like this approach. I would very much prefer to use the corresponding aom_codec_av1_cx() and aom_codec_av1_dx() functions instead. Thoughts?\n\nWhile I don\u0027t have strong feelings either way, changing this to appease MSVC when we can just export the symbol explicitly seems like the wrong thing to do.",
      "revId": "9d59d0bab5ec46559a600347de5fa3d38338f78d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ebfd75_3e7b1d9a",
        "filename": "test/decode_api_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 9273
      },
      "writtenOn": "2018-07-18T07:54:58Z",
      "side": 1,
      "message": "I think that since MSVC can only export pointers, it adds duplicate symbols with a leading underscore:\n006D25F8 aom_codec_av1_cx_algo \u003d _aom_codec_av1_cx_algo\n006C7540 aom_codec_av1_dx_algo \u003d _aom_codec_av1_dx_algo\n\nIf I add these to exports_enc and export_dec and export all of them as text (not data), everything works fine with MSVC 2017 - not sure about older versions. MSDN suggests using __declspec(dllimport) in this case: https://msdn.microsoft.com/en-us/library/54xsd65y.aspx.\n\nI would very much rather introduce a macro that expands to __declspec(dllimport) when outside aom.dll, this could be called something like AOM_DATA or AOM_EXPORTED_DATA.\n\nThoughts?",
      "parentUuid": "000cd667_70ea06fc",
      "revId": "9d59d0bab5ec46559a600347de5fa3d38338f78d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f686e6b0_443b8f0a",
        "filename": "test/decode_api_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-07-27T17:50:22Z",
      "side": 1,
      "message": "\u003e I would very much rather introduce a macro that expands to __declspec(dllimport) when outside aom.dll, this could be called something like AOM_DATA or AOM_EXPORTED_DATA.\n\nI believe that ultimately we\u0027ll need that, but this is an improvement as-is. More work can be done toward making libaom easier to use as a Windows DLL can be done in follow ups.",
      "parentUuid": "f7ebfd75_3e7b1d9a",
      "revId": "9d59d0bab5ec46559a600347de5fa3d38338f78d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "972152a5_b4abfc96",
        "filename": "test/encode_api_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5215
      },
      "writtenOn": "2018-07-17T22:43:56Z",
      "side": 1,
      "message": "same comment as dx",
      "revId": "9d59d0bab5ec46559a600347de5fa3d38338f78d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c86e0cf_864d2ed4",
        "filename": "test/encode_api_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 9273
      },
      "writtenOn": "2018-07-18T07:54:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "972152a5_b4abfc96",
      "revId": "9d59d0bab5ec46559a600347de5fa3d38338f78d",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}