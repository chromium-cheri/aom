{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "647aaeb8_8a223f37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 31817
      },
      "writtenOn": "2023-05-15T17:27:52Z",
      "side": 1,
      "message": "Hi James, this commit passes locally for me but I don\u0027t see an obvious error message as to why this fails verification. The only thing I see is:\n\n\n    [GNU C Compiler (gcc)] [-ERROR-] Can\u0027t create fingerprints for some files:\n    [GNU C Compiler (gcc)] [-ERROR-] - \u0027/var/jenkins/workspace/libaom__ffmpeg/build/aom/src/libavcodec/libaomenc.c\u0027 file not found\n\nAny chance you could take a look at this and the subsequent commit? Thanks!",
      "revId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "741eb368_7dc374fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-05-15T20:54:01Z",
      "side": 1,
      "message": "\u003e Hi James, this commit passes locally for me but I don\u0027t see an obvious error message as to why this fails verification. The only thing I see is:\n\u003e \n\u003e \n\u003e     [GNU C Compiler (gcc)] [-ERROR-] Can\u0027t create fingerprints for some files:\n\u003e     [GNU C Compiler (gcc)] [-ERROR-] - \u0027/var/jenkins/workspace/libaom__ffmpeg/build/aom/src/libavcodec/libaomenc.c\u0027 file not found\n\u003e \n\u003e Any chance you could take a look at this and the subsequent commit? Thanks!\n\nI started a rerun. The issue here was a warning introduced upstream. I\u0027ve disabled that temporarily. The idea behind this test is to check build compatibility so we look for warnings in the libaom modules.\n\n```\nCC\tlibavcodec/libaomenc.o\nsrc/libavcodec/libaomenc.c: In function ‘aom_encode’:\nsrc/libavcodec/libaomenc.c:1302:9: warning: this ‘else’ clause does not guard... [-Wmisleading-indentation]\n 1302 |         else\n      |         ^~~~\nsrc/libavcodec/libaomenc.c:1303:1: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘else’\n 1303 | FF_DISABLE_DEPRECATION_WARNINGS\n      | ^~~\n```",
      "parentUuid": "647aaeb8_8a223f37",
      "revId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "083ecff4_ca7e3cd1",
        "filename": "aom_dsp/arm/intrapred_neon.c",
        "patchSetId": 2
      },
      "lineNbr": 1755,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-05-15T23:31:55Z",
      "side": 1,
      "message": "This could be `vld1_dup_u8` to avoid zeroing the register. From what I remember, that isn\u0027t removed by some compilers. That\u0027s an existing issue, so can be addressed in another change.",
      "revId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "75fd7a1a9bd26b3257ffbe5009c57d54b11015e9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}