{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "24a9c9af_7f7a531e",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-04-25T17:05:04Z",
      "side": 1,
      "message": "This can be done on the command line and doesn\u0027t need to be defaulted here.",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a812fc78_936d43a5",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-02T06:01:54Z",
      "side": 1,
      "message": "Actually , removing this flag is resulting in compilation failure for other modules. raised the ticket  below is the response. Let me know if we can go back to old code itself, will keep the flag \n\nYour change exposed an issue because you removed the protection of BUILD_SHARED_LIBS from some targets. If you want those targets to build as shared libraries you will need to investigate the dependencies. It\u0027s also possible that the targets are incompatible because they rely on internal functions that are not exposed in the shared object.\n\n\nHi James,",
      "parentUuid": "24a9c9af_7f7a531e",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35d6848d_d66b1666",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-02T06:52:59Z",
      "side": 1,
      "message": "please confirm, shall keep the flag  BUILD_SHARED_LIBS and have the code like below:\n\nif(CONFIG_AV1_ENCODER)\n  list(APPEND AOM_AV1_RC_SOURCES \"${AOM_ROOT}/av1/ratectrl_rtc.h\"\n              \"${AOM_ROOT}/av1/ratectrl_rtc.cc\")\n  if(BUILD_SHARED_LIBS)\n    add_library(aom_av1_rc SHARED ${AOM_AV1_RC_SOURCES})\n  else()\n    add_library(aom_av1_rc ${AOM_AV1_RC_SOURCES})\n  endif()\n  target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} aom)\n  if(NOT WIN32 AND NOT APPLE)\n    target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} m)\n  endif()\n  set_target_properties(aom_av1_rc PROPERTIES LINKER_LANGUAGE CXX)\nendif()\n\n# List of object and static library targets.\nset(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_rtcd aom_mem aom_scale aom)\nif(CONFIG_AV1_ENCODER)\n  set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_rc)\nendif()",
      "parentUuid": "a812fc78_936d43a5",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09867b78_a12b7233",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-02T17:25:32Z",
      "side": 1,
      "message": "\u003e please confirm, shall keep the flag  BUILD_SHARED_LIBS and have the code like below:\n\u003e \n\u003e if(CONFIG_AV1_ENCODER)\n\u003e   list(APPEND AOM_AV1_RC_SOURCES \"${AOM_ROOT}/av1/ratectrl_rtc.h\"\n\u003e               \"${AOM_ROOT}/av1/ratectrl_rtc.cc\")\n\u003e   if(BUILD_SHARED_LIBS)\n\u003e     add_library(aom_av1_rc SHARED ${AOM_AV1_RC_SOURCES})\n\u003e   else()\n\u003e     add_library(aom_av1_rc ${AOM_AV1_RC_SOURCES})\n\u003e   endif()\n\u003e   target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} aom)\n\u003e   if(NOT WIN32 AND NOT APPLE)\n\u003e     target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} m)\n\u003e   endif()\n\u003e   set_target_properties(aom_av1_rc PROPERTIES LINKER_LANGUAGE CXX)\n\u003e endif()\n\u003e \n\u003e # List of object and static library targets.\n\u003e set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_rtcd aom_mem aom_scale aom)\n\u003e if(CONFIG_AV1_ENCODER)\n\u003e   set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_rc)\n\u003e endif()\n\nWhat are you trying to achieve with this change? I don\u0027t think BUILD_SHARED_LIBS needs to be explicitly enabled in the cmake file.",
      "parentUuid": "35d6848d_d66b1666",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00eb14a9_82627a29",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 33496
      },
      "writtenOn": "2024-05-03T03:27:50Z",
      "side": 1,
      "message": "Agreed, no need to set, since I was not aware of Jenkins will build if I used the command like below cmake ../ -DCONFIG_AV1_ENCODER\u003d1 -DBUILD_SHARED_LIBS\u003d1\nhence thought will set in the CMake.\nnow the code can look like\n\nif(CONFIG_AV1_ENCODER)\n  list(APPEND AOM_AV1_RC_SOURCES \"${AOM_ROOT}/av1/ratectrl_rtc.h\"\n              \"${AOM_ROOT}/av1/ratectrl_rtc.cc\")\n  add_library(aom_av1_rc ${AOM_AV1_RC_SOURCES})\n  target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} aom)\n  if(NOT WIN32 AND NOT APPLE)\n    target_link_libraries(aom_av1_rc ${AOM_LIB_LINK_TYPE} m)\n  endif()\n  set_target_properties(aom_av1_rc PROPERTIES LINKER_LANGUAGE CXX)\nendif()\n\n# List of object and static library targets.\nset(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_rtcd aom_mem aom_scale aom)\nif(CONFIG_AV1_ENCODER)\n  set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_rc)\nendif()\n\nplease confirm. and let me know how to tell in Jenkins about the cmake build command, Otherwise it may fail build in jenkins",
      "parentUuid": "09867b78_a12b7233",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ba164b6_857b7c02",
        "filename": "CMakeLists.txt",
        "patchSetId": 5
      },
      "lineNbr": 11,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-05-03T18:49:02Z",
      "side": 1,
      "message": "\u003e [...]\n\u003e please confirm. and let me know how to tell in Jenkins about the cmake build command, Otherwise it may fail build in jenkins\n\nJenkins has a fixed set of configurations, that all must pass. One of them is explicitly setting `-DBUILD_SHARED_LIBS\u003d1`. See https://build.aomedia.org/jenkins/job/libaom__compile/",
      "parentUuid": "00eb14a9_82627a29",
      "revId": "ac747380bca7c746e642e866356aef0546f52103",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}