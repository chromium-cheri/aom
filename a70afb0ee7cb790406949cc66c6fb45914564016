{
  "comments": [
    {
      "key": {
        "uuid": "0c6bffa1_174a6859",
        "filename": "av1/common/reconintra.h",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-02-09T21:11:22Z",
      "side": 1,
      "message": "you should prefix the symbol once it\u0027s global (av1_)",
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97c26b88_7ba9b939",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-02-09T21:19:35Z",
      "side": 1,
      "message": "in the interaction with the vectors or a copy? I\u0027d prefer if we didn\u0027t need to carry this around",
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f6cdf3_c483a620",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-02-09T21:19:35Z",
      "side": 1,
      "message": "I didn\u0027t look at the filter, but note horizontal adds are pretty expensive. can you accumulate vertically or use pavgw?\n\nhttps://software.intel.com/sites/landingpage/IntrinsicsGuide/#text\u003dpavg\u0026expand\u003d368",
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b780547d_6a267281",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 5188
      },
      "writtenOn": "2018-02-10T00:11:14Z",
      "side": 1,
      "message": "Hi,\n\nIt would be great that anyone can take a look at the following patch, in which I transpose the filter coef matrices so as to use vertical add easily.\nhttps://aomedia-review.googlesource.com/c/aom/+/46032\nHowever, the new implementation is 2x slower than the current version using hadd. I have very little clue why it happens, maybe because the multiplications in current version use a fixed first multiplier or _mm_set1_epi16 is costly compared with the difference between hadd and add?\n\nIt would be great that anyone can take a look and point out the reason.\n\n-Yue",
      "parentUuid": "b7f6cdf3_c483a620",
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cab8d335_16f37043",
        "filename": "av1/common/x86/filterintra_sse4.c",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 5188
      },
      "writtenOn": "2018-02-10T01:08:49Z",
      "side": 1,
      "message": "I made slides to explain how they works\nhttps://docs.google.com/presentation/d/1ci6YhhAYneUDD1LHGa9Dr_RXRI0gFFe5Fb0zzH2-B50/edit?usp\u003dsharing",
      "parentUuid": "b780547d_6a267281",
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0e30b3_5bf3c310",
        "filename": "test/filterintra_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 5020
      },
      "writtenOn": "2018-02-09T21:19:35Z",
      "side": 1,
      "message": "use lower + \u0027_\u0027 for variable names:\n\nhttps://google.github.io/styleguide/cppguide.html#Variable_Names\n\nspelling out test is OK too",
      "range": {
        "startLine": 64,
        "startChar": 8,
        "endLine": 64,
        "endChar": 16
      },
      "revId": "a70afb0ee7cb790406949cc66c6fb45914564016",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}