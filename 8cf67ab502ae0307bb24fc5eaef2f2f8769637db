{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea055e18_454cdb63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-12-07T23:48:43Z",
      "side": 1,
      "message": "Nice work.\nWhen I ran the patch locally, the speed up seemed to be around 1~2% on rtc speed 10. Let\u0027s wait for your results back.",
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6a21f97_acfa2f3c",
        "filename": "av1/encoder/palette.c",
        "patchSetId": 7
      },
      "lineNbr": 450,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-12-07T23:48:43Z",
      "side": 1,
      "message": "Any reason why we are saving src_ptr[c] to int, then casting it back down to int16_t?",
      "range": {
        "startLine": 449,
        "startChar": 8,
        "endLine": 450,
        "endChar": 31
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c16857d_b2e6b350",
        "filename": "av1/encoder/palette.c",
        "patchSetId": 7
      },
      "lineNbr": 450,
      "author": {
        "id": 5395
      },
      "writtenOn": "2022-12-08T10:02:43Z",
      "side": 1,
      "message": "Just to work with the AOMMI/MAX macros below. We have a uint16_t that is needed in those macros, and as an int16_t ...",
      "parentUuid": "a6a21f97_acfa2f3c",
      "range": {
        "startLine": 449,
        "startChar": 8,
        "endLine": 450,
        "endChar": 31
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a734b773_4193aa3e",
        "filename": "av1/encoder/x86/av1_k_means_avx2.c",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-12-08T17:53:29Z",
      "side": 1,
      "message": "If you plan on having a follow up patch, I think we can do better here as well.\n * We don\u0027t need an array of 8 dist. Two of them should be enough of keep track of the best one and the next centroid being evaluated.\n * We can instead keep the centroids in 8 ymm registers so avoid having to reload them at every iteration.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 89,
        "endChar": 5
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ba37843_a74d880c",
        "filename": "av1/encoder/x86/av1_k_means_avx2.c",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 5395
      },
      "writtenOn": "2022-12-09T08:47:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a734b773_4193aa3e",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 89,
        "endChar": 5
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f12efe1b_e596c9fc",
        "filename": "av1/encoder/x86/av1_k_means_avx2.c",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 9823
      },
      "writtenOn": "2022-12-07T23:48:43Z",
      "side": 1,
      "message": "We can technically improve this a bit more by writing to indices every 16 units instead of 8 units. But the gain seems negligible.",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "581c89c7_77835863",
        "filename": "av1/encoder/x86/av1_k_means_avx2.c",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 5395
      },
      "writtenOn": "2022-12-08T10:02:43Z",
      "side": 1,
      "message": "Indeed. This is what is done on the SSE2 side (I was able to remove it for dim\u003d\u003d1 though). It can be its own PR. I will just make the store more efficient but maybe it will force the loop unrolling too.",
      "parentUuid": "f12efe1b_e596c9fc",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 106,
        "endChar": 0
      },
      "revId": "8cf67ab502ae0307bb24fc5eaef2f2f8769637db",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}