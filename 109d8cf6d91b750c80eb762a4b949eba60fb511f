{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9dcf1bfa_3437c655",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "Frank: This CL needs some work. I also noted some errors in the pre-existing comments for the control IDs mentioned in this CL.\n\nBohan: A serious problem is that AV1D_GET_MI_INFO takes three arguments, which breaks the current assumption. Please take a look at the two solutions I proposed in the comment marked with \"IMPORTANT\".",
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dd2304e_c85717df",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 429,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "The comment should say \"int* parameter\".",
      "range": {
        "startLine": 429,
        "startChar": 63,
        "endLine": 429,
        "endChar": 76
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1d118cd_4b2f85a7",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 429,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2dd2304e_c85717df",
      "range": {
        "startLine": 429,
        "startChar": 63,
        "endLine": 429,
        "endChar": 76
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30c03e5c_e786e3e6",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 429,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:27:13Z",
      "side": 1,
      "message": "So the comments that were wrong I changed in another CL: https://aomedia-review.googlesource.com/c/aom/+/152921\n\nI wasn\u0027t planning to cherry-pick that CL into electric-sky as they were only comment changes, but if you think we should I\u0027m fine with doing that.",
      "parentUuid": "2dd2304e_c85717df",
      "range": {
        "startLine": 429,
        "startChar": 63,
        "endLine": 429,
        "endChar": 76
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e437f29_f2f94631",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 434,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "The comment should say \"int* parameter\".",
      "range": {
        "startLine": 433,
        "startChar": 71,
        "endLine": 434,
        "endChar": 14
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54708722_32484513",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 434,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e437f29_f2f94631",
      "range": {
        "startLine": 433,
        "startChar": 71,
        "endLine": 434,
        "endChar": 14
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df7796fd_1ce6012a",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 434,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:27:13Z",
      "side": 1,
      "message": "https://aomedia-review.googlesource.com/c/aom/+/152921",
      "parentUuid": "9e437f29_f2f94631",
      "range": {
        "startLine": 433,
        "startChar": 71,
        "endLine": 434,
        "endChar": 14
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "760f7dbb_72c85b5f",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 439,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "The comment should say \"unsigned int* parameter\".",
      "range": {
        "startLine": 438,
        "startChar": 69,
        "endLine": 439,
        "endChar": 18
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "440b25bf_45605061",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 439,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "760f7dbb_72c85b5f",
      "range": {
        "startLine": 438,
        "startChar": 69,
        "endLine": 439,
        "endChar": 18
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d46dd38_7e278f2a",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 439,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:27:13Z",
      "side": 1,
      "message": "https://aomedia-review.googlesource.com/c/aom/+/152921",
      "parentUuid": "760f7dbb_72c85b5f",
      "range": {
        "startLine": 438,
        "startChar": 69,
        "endLine": 439,
        "endChar": 18
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b831794_911fbfb0",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "We should remove \"unsigned\".\n\nIn ctrl_get_show_frame_flag(), this argument is read as int *, not unsigned int *.",
      "range": {
        "startLine": 570,
        "startChar": 44,
        "endLine": 570,
        "endChar": 58
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e11e6109_82f208d8",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b831794_911fbfb0",
      "range": {
        "startLine": 570,
        "startChar": 44,
        "endLine": 570,
        "endChar": 58
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d14834b4_6ff54b01",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:27:13Z",
      "side": 1,
      "message": "Addressed in CL:https://aomedia-review.googlesource.com/c/aom/+/152963",
      "parentUuid": "3b831794_911fbfb0",
      "range": {
        "startLine": 570,
        "startChar": 44,
        "endLine": 570,
        "endChar": 58
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86b40a03_b374153d",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 570,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:31:12Z",
      "side": 1,
      "message": "I abandoned my CL after seeing yours. And will update my comment focused CL after yours lands.",
      "parentUuid": "d14834b4_6ff54b01",
      "range": {
        "startLine": 570,
        "startChar": 44,
        "endLine": 570,
        "endChar": 58
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c904ccb7_afc59974",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "We should remove \"unsigned\".\n\nIn ctrl_get_base_q_idx(), this argument is read as int *, not unsigned int *.",
      "range": {
        "startLine": 573,
        "startChar": 39,
        "endLine": 573,
        "endChar": 53
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ce247f5_10b215a6",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c904ccb7_afc59974",
      "range": {
        "startLine": 573,
        "startChar": 39,
        "endLine": 573,
        "endChar": 53
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "675255f5_f94e12be",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:27:13Z",
      "side": 1,
      "message": "Addressed in CL:https://aomedia-review.googlesource.com/c/aom/+/152963",
      "parentUuid": "c904ccb7_afc59974",
      "range": {
        "startLine": 573,
        "startChar": 39,
        "endLine": 573,
        "endChar": 53
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fdcdf77_3add40d4",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 7060
      },
      "writtenOn": "2022-01-27T23:31:12Z",
      "side": 1,
      "message": "Ditto.",
      "parentUuid": "675255f5_f94e12be",
      "range": {
        "startLine": 573,
        "startChar": 39,
        "endLine": 573,
        "endChar": 53
      },
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32b49306_16c83978",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T19:51:00Z",
      "side": 1,
      "message": "IMPORTANT: ctrl_get_mi_info() read three values from the va_list args:\n  int mi_row \u003d va_arg(args, int);\n  int mi_col \u003d va_arg(args, int);\n  MB_MODE_INFO *mi \u003d va_arg(args, MB_MODE_INFO *);\n\nSo I think we can\u0027t use \"void *\" here. The AOM_CTRL_USE_TYPE macro is defined as follows:\n\n  #define AOM_CTRL_USE_TYPE(id, typ)                           \\\n    static aom_codec_err_t aom_codec_control_typechecked_##id( \\\n        aom_codec_ctx_t *, int, typ) AOM_UNUSED;               \\\n    static aom_codec_err_t aom_codec_control_typechecked_##id( \\\n        aom_codec_ctx_t *ctx, int ctrl, typ data) {            \\\n      return aom_codec_control(ctx, ctrl, data);               \\\n    } /**\u003c\\hideinitializer*/                                   \\\n    typedef typ aom_codec_control_type_##id;\n\nand the AOM_CODEC_CONTROL_TYPECHECKED macro is defined as follows:\n\n  #define AOM_CODEC_CONTROL_TYPECHECKED(ctx, id, data) \\\n    aom_codec_control_typechecked_##id(ctx, id, data) /**\u003c\\hideinitializer*/\n\nBoth macros assume every codec control Id takes only one argument. Since AV1D_GET_MI_INFO takes three arguments, it breaks that assumption.\n\nThere are two solutions.\n\n1. Remove this \"AOM_CTRL_USE_TYPE(AV1D_GET_MI_INFO, void *)\" line, but keep the next line. This means we cannot call the AOM_CODEC_CONTROL_TYPECHECKED macro with AV1D_GET_MI_INFO.\n\n2. Change AV1D_GET_MI_INFO to take only one argument. For example, we can collect the current three arguments in a struct.",
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31383486_4d1761b1",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-01-27T19:54:34Z",
      "side": 1,
      "message": "\u003e IMPORTANT: ctrl_get_mi_info() read three values from the va_list args:\n\u003e   int mi_row \u003d va_arg(args, int);\n\u003e   int mi_col \u003d va_arg(args, int);\n\u003e   MB_MODE_INFO *mi \u003d va_arg(args, MB_MODE_INFO *);\n\u003e \n\u003e So I think we can\u0027t use \"void *\" here. The AOM_CTRL_USE_TYPE macro is defined as follows:\n\u003e \n\u003e   #define AOM_CTRL_USE_TYPE(id, typ)                           \\\n\u003e     static aom_codec_err_t aom_codec_control_typechecked_##id( \\\n\u003e         aom_codec_ctx_t *, int, typ) AOM_UNUSED;               \\\n\u003e     static aom_codec_err_t aom_codec_control_typechecked_##id( \\\n\u003e         aom_codec_ctx_t *ctx, int ctrl, typ data) {            \\\n\u003e       return aom_codec_control(ctx, ctrl, data);               \\\n\u003e     } /**\u003c\\hideinitializer*/                                   \\\n\u003e     typedef typ aom_codec_control_type_##id;\n\u003e \n\u003e and the AOM_CODEC_CONTROL_TYPECHECKED macro is defined as follows:\n\u003e \n\u003e   #define AOM_CODEC_CONTROL_TYPECHECKED(ctx, id, data) \\\n\u003e     aom_codec_control_typechecked_##id(ctx, id, data) /**\u003c\\hideinitializer*/\n\u003e \n\u003e Both macros assume every codec control Id takes only one argument. Since AV1D_GET_MI_INFO takes three arguments, it breaks that assumption.\n\u003e \n\u003e There are two solutions.\n\u003e \n\u003e 1. Remove this \"AOM_CTRL_USE_TYPE(AV1D_GET_MI_INFO, void *)\" line, but keep the next line. This means we cannot call the AOM_CODEC_CONTROL_TYPECHECKED macro with AV1D_GET_MI_INFO.\n\u003e\n\nI missed that when suggesting the workaround, thanks for looking.\n \n\u003e 2. Change AV1D_GET_MI_INFO to take only one argument. For example, we can collect the current three arguments in a struct.\n\nThis is really an internal function, ideally it would be removed and the encoder would call the decoder directly.",
      "parentUuid": "32b49306_16c83978",
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc022a37_5a806a9f",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:32:41Z",
      "side": 1,
      "message": "Thanks for the info. I didn\u0027t look at earlier comments.\n\nI will write a CL to make the changes I suggested.",
      "parentUuid": "31383486_4d1761b1",
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8090c9b_2b6700cb",
        "filename": "aom/aomdx.h",
        "patchSetId": 3
      },
      "lineNbr": 579,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-01-27T22:56:32Z",
      "side": 1,
      "message": "Done. See https://aomedia-review.googlesource.com/c/aom/+/152962\n\nI implemented the simple solution of removing the AOM_CTRL_USE_TYPE(AV1D_GET_MI_INFO, void *) line.",
      "parentUuid": "bc022a37_5a806a9f",
      "revId": "109d8cf6d91b750c80eb762a4b949eba60fb511f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}