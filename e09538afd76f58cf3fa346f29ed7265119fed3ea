{
  "comments": [
    {
      "key": {
        "uuid": "fe506262_0fa101af",
        "filename": "aom_dsp/x86/aom_subpixel_8t_intrin_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-01-23T17:52:29Z",
      "side": 1,
      "message": "It might be better to add this new header under aom_dsp/x86 instead of av1/common/x86.",
      "range": {
        "startLine": 17,
        "startChar": 25,
        "endLine": 17,
        "endChar": 40
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e6f044_d27ef38b",
        "filename": "av1/common/x86/convolve_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 5230
      },
      "writtenOn": "2018-01-23T19:05:56Z",
      "side": 1,
      "message": "I think all the right shifts could be saved as what convolve8_8_ssse3() etc. did in VP9. The filter coefficient \"128\" case is the special *convolve_*_copy*() case and would never happen here. (If it happends, then the C code must be fixed.) So all filter coefficients should be with in (-128, 127] and no shift needed.",
      "range": {
        "startLine": 369,
        "startChar": 5,
        "endLine": 369,
        "endChar": 74
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1f55974_5314dac3",
        "filename": "av1/common/x86/convolve_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 8893
      },
      "writtenOn": "2018-01-30T13:46:36Z",
      "side": 1,
      "message": "We agree that all the filter coefficients are within (-128, 127]. However, as all the filter coefficients are even, we can divide the filter coefficients by 2 (and adjust the right shift after convolution accordingly) and still get bit exact result. Doing so, would permit us to operate on 16 bit registers (for first stage of motion compensation) instead of 32 bit registers resulting in speed up.",
      "parentUuid": "40e6f044_d27ef38b",
      "range": {
        "startLine": 369,
        "startChar": 5,
        "endLine": 369,
        "endChar": 74
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0b2d1ef_2fa97897",
        "filename": "av1/common/x86/convolve_avx2.c",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 5230
      },
      "writtenOn": "2018-01-30T19:24:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c1f55974_5314dac3",
      "range": {
        "startLine": 369,
        "startChar": 5,
        "endLine": 369,
        "endChar": 74
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67c6ea54_f64283be",
        "filename": "av1/common/x86/convolve_avx2.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-01-23T17:52:29Z",
      "side": 1,
      "message": "2018",
      "range": {
        "startLine": 2,
        "startChar": 16,
        "endLine": 2,
        "endChar": 20
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "361d1ea6_a4848577",
        "filename": "test/av1_convolve_2d_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 5185
      },
      "writtenOn": "2018-01-23T17:52:29Z",
      "side": 1,
      "message": "Run speed test locally. Changing to DISABLED_Speed while checking in the patch.",
      "range": {
        "startLine": 29,
        "startChar": 26,
        "endLine": 29,
        "endChar": 31
      },
      "revId": "e09538afd76f58cf3fa346f29ed7265119fed3ea",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}