{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c901b386_5ae79f08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T00:51:18Z",
      "side": 1,
      "message": "James: Would you prefer this alternative solution? It will result in fewer changes.",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89a72973_e57f99b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-01-10T02:10:02Z",
      "side": 1,
      "message": "\u003e James: Would you prefer this alternative solution? It will result in fewer changes.\n\nThe fix you have is OK.",
      "parentUuid": "c901b386_5ae79f08",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd74284e_f28e5322",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 2545,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T00:49:17Z",
      "side": 1,
      "message": "Note that we only return `buffer_pool` in the output parameter `*p_buffer_pool` when `buffer_pool` is fully initialized.",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2a4cb15_58e1b803",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 2545,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-01-10T02:11:52Z",
      "side": 1,
      "message": "\u003e Note that we only return `buffer_pool` in the output parameter `*p_buffer_pool` when `buffer_pool` is fully initialized.\n\nGood catch.\nThe iterative malloc failure test would have hit this eventually.\nhttps://crbug.com/aomedia/3276#c47",
      "parentUuid": "fd74284e_f28e5322",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8916f4e_64feb99c",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 2545,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T17:32:47Z",
      "side": 1,
      "message": "Thank you for the info. The iterative malloc failure test won\u0027t detect this for two reasons.\n\n1. We ignore the return value of the `pthread_mutex_destroy()` calls. (See my annotations.)\n\n2. On Linux (with glibc), `pthread_mutex_destroy()` on a zero-initialized `pthread_mutex_t` object returns 0. Here is a small test program that shows this:\n\n```\n$ cat mutex.c\n#include \u003cpthread.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\nint main() {\n  int rv;\n  pthread_mutex_t mutex;\n\n  memset(\u0026mutex, 0, sizeof(mutex));\n  rv \u003d pthread_mutex_destroy(\u0026mutex);\n  printf(\"pthread_mutex_destroy() returned %d\\n\", rv);\n  return 0;\n}\n$ clang -Weverything -std\u003dc99 -pthread mutex.c\n$ ./a.out\npthread_mutex_destroy() returned 0\n$\n```",
      "parentUuid": "a2a4cb15_58e1b803",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eed1b0a_c29cd8eb",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 2690,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T17:32:47Z",
      "side": 1,
      "message": "Note that the return value of `pthread_mutex_destroy()` is ignored.",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac25fd61_64e65515",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T17:32:47Z",
      "side": 1,
      "message": "Note that the return value of `pthread_mutex_destroy()` is ignored.",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe66464d_7c43156c",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-01-10T00:49:17Z",
      "side": 1,
      "message": "I moved the `pthread_mutex_destroy()` call to the correct if block.",
      "revId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "3dc9e8ac2f260cf3fa6a258e204de74567bb02df",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}