{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67111d69_0880757b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 31042
      },
      "writtenOn": "2023-06-15T18:49:08Z",
      "side": 1,
      "message": "Thanks for these, however, I think we should be porting the libvpx implementations[1] of convolve8_horiz/vert across rather than reinventing things. That said, you could benchmark a port of the libvpx implementation against this and then we keep which ever one is faster.\n\nWith respect to the upsampled_pred modification, I think we shouldn\u0027t be modifying the C implementation directly, but add an architecture specific implementation as we have done for standard bitdepth[2] (and as exists for x86 paths.)\n\nI\u0027d also strongly prefer it if each of these optimizations were added in a separate commit, rather than in one go.\n\n[1] https://github.com/webmproject/libvpx/blob/main/vpx_dsp/arm/highbd_vpx_convolve8_neon.c#L138\n[2] https://aomedia-review.googlesource.com/c/aom/+/176007",
      "revId": "534619728b6acf688124d849e657f40e10caea4a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad7e78c_61705fc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32122
      },
      "writtenOn": "2023-06-15T19:27:33Z",
      "side": 1,
      "message": "Sure, I will do that, test each horiz/vert convolve8 function and split the commits as you prefer.",
      "parentUuid": "67111d69_0880757b",
      "revId": "534619728b6acf688124d849e657f40e10caea4a",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}