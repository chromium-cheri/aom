{
  "comments": [
    {
      "key": {
        "uuid": "f7ed131c_f89b295e",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 5
      },
      "lineNbr": 1829,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-07T22:59:46Z",
      "side": 1,
      "message": "Hui Su added those aom_internal_error calls in\nhttps://aomedia-review.googlesource.com/c/aom/+/54461\n\nSo we need to make sure the changes to this function do not bring back the heap buffer overflows. I will try the proof-of-concept in aomedia:1709 and then we can discuss how to handle this.",
      "range": {
        "startLine": 1829,
        "startChar": 17,
        "endLine": 1829,
        "endChar": 30
      },
      "revId": "e34917a4dd71387e88f62cb05dbdee7413ec18b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75ebe412_42aac9ec",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 5
      },
      "lineNbr": 2169,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-07T22:59:46Z",
      "side": 1,
      "message": "Nit: This statement can be rewritten as:\n\n      aom_merge_corrupted_flag(\u0026pbi-\u003emb.corrupted, !winterface-\u003esync(worker));",
      "range": {
        "startLine": 2169,
        "startChar": 6,
        "endLine": 2169,
        "endChar": 53
      },
      "revId": "e34917a4dd71387e88f62cb05dbdee7413ec18b7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}