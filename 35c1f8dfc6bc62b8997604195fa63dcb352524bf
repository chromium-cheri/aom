{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e66c61c_cf495588",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7025
      },
      "writtenOn": "2022-09-01T16:46:34Z",
      "side": 1,
      "message": "An alternative solution is to apply the following patch to av1/encoder/encoder.c. But i believe the current CL is cleaner and fixes the underlying problem altogether.\n\ndiff --git a/av1/encoder/encoder.c b/av1/encoder/encoder.c\nindex 1cdc67065..e322a4d3e 100644\n--- a/av1/encoder/encoder.c\n+++ b/av1/encoder/encoder.c\n@@ -3541,6 +3541,11 @@ static int encode_frame_to_data_rate(AV1_COMP *cpi, size_t *size,\n     cpi-\u003ecommon.features.cur_frame_force_integer_mv \u003d 0;\n   }\n \n+  // This is used by av1_pack_bitstream. So this needs to be set in case of\n+  // row-mt where the encoding code will use a temporary structure.\n+  cpi-\u003etd.mb.e_mbd.cur_frame_force_integer_mv \u003d\n+      cpi-\u003ecommon.features.cur_frame_force_integer_mv;\n+\n   // Set default state for segment based loop filter update flags.\n   cm-\u003elf.mode_ref_delta_update \u003d 0;\n \n-- \n",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f4ad49_d89f6690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-09-01T22:38:39Z",
      "side": 1,
      "message": "This looks ok to me. I\u0027ll let Yunqing have a look.",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02fc738c_9a1365ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-09-02T00:37:39Z",
      "side": 1,
      "message": "Copying values into xd is a general practice for easy accessing them during block encoding. In MT, they should be copied correctly for each thread.\n\nI looked up the code. This value is copied into xd in encode_sb_row(), which is called by both single \u0026 multiple thread cases. So, not sure why it doesn\u0027t work? Maybe better to figure out the cause and make it work in your testing case?",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "305c9a75_3b2037db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7025
      },
      "writtenOn": "2022-09-02T18:13:20Z",
      "side": 1,
      "message": "\u003e Copying values into xd is a general practice for easy accessing them during block encoding. In MT, they should be copied correctly for each thread.\n\u003e \n\nYeah i understand this is being done for convenience. But in this case it is a bit inconsistent (some of the code uses the value from xd while some of the others use it from the cm-\u003efeatures struct). So it seems a bit cleaner to just remove it since there are only two functions that use it from xd.\n\nPlease see the reply below for further explanation about why this is causing the bug.\n\n\u003e I looked up the code. This value is copied into xd in encode_sb_row(), which is called by both single \u0026 multiple thread cases. So, not sure why it doesn\u0027t work? Maybe better to figure out the cause and make it work in your testing case?\n\nYes the value is copied in encode_sb_row() during the encoding process. In case of row-mt, the \"xd\" instance in encode_sb_row() is not the same as the \"xd\" instance in write_tile_obu().\n\nWhile the \"xd\" instance in encode_sb_row() get the correct value of cur_frame_force_integer_mv, the \"xd\" instance in write_tile_obu() does not. So an alternative fix is to set the correct value in that instance as well.\n\nBut my overall point is that, such complexity should not be necessary for the sake of convenience of accessing the value. :)\n\nAnyways, i will leave the decision up to you. The alternative CL that i propose to fix this bug is here: https://aomedia-review.googlesource.com/c/aom/+/162321\n\nPlease let me know which one you prefer.",
      "parentUuid": "02fc738c_9a1365ac",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "189359c7_a646801d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2022-09-02T19:05:52Z",
      "side": 1,
      "message": "Thanks for the explanation. I see your point, unfortunately, there are inconsistent usages of cur_frame_force_integer_mv in the codebase. Anyway, looks like this value wasn\u0027t handled correctly in MT. If your other CL can resolve the issue, can we go with it? We will also check to see if there are other values with the same issue.",
      "parentUuid": "305c9a75_3b2037db",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7abddb57_92ccd951",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7025
      },
      "writtenOn": "2022-09-02T19:10:38Z",
      "side": 1,
      "message": "\u003e Thanks for the explanation. I see your point, unfortunately, there are inconsistent usages of cur_frame_force_integer_mv in the codebase. Anyway, looks like this value wasn\u0027t handled correctly in MT. If your other CL can resolve the issue, can we go with it? We will also check to see if there are other values with the same issue.\n\nSounds good. I did a quick audit and the other values seemed fine. But it is better to double check the rest as well.\n\nI will abandon this CL and submit the other CL.",
      "parentUuid": "189359c7_a646801d",
      "revId": "35c1f8dfc6bc62b8997604195fa63dcb352524bf",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}