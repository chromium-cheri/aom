{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "838d44fe_b4e7b2a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-01-08T19:47:35Z",
      "side": 1,
      "message": "LGTM: please let Wan-Teh +2 before landing since this he\u0027s been reviewing as well.",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e0c897b_e47f0616",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T19:59:48Z",
      "side": 1,
      "message": "Tom: Thanks a lot for the review!\nBohan: I am reviewing the CL now.",
      "parentUuid": "838d44fe_b4e7b2a9",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ab7fce6_c2be133d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "I suggest one important change (error message buffer size) and a few small changes.",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1122344_8e55009f",
        "filename": "aom/aom_codec.h",
        "patchSetId": 19
      },
      "lineNbr": 498,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "This comment should say ctx-\u003eerr_detail. Or we can remove this comment; no other aom public functions document this.\n\nThe reason this comment can\u0027t mention ctx-\u003epriv-\u003eerr_detail is that it is a private data member.\n\n(Both the encoder and decoder init functions set ctx-\u003eerr_detail to ctx-\u003epriv-\u003eerr_detail.)",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7773717_8924110b",
        "filename": "aom/internal/aom_codec_internal.h",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "aom_codec_option_setter_fn_t \u003d\u003e aom_codec_set_option_fn_t\n\nThe convention is to name this type aom_codec_foo_fn_t, where aom_codec_foo is the name of the corresponding public function. For example, aom_codec_destroy_fn_t, aom_codec_control_fn_t, aom_codec_decode_fn_t, aom_codec_encode_fn_t.",
      "range": {
        "startLine": 170,
        "startChar": 26,
        "endLine": 170,
        "endChar": 54
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a457567d_286591ac",
        "filename": "aom/internal/aom_codec_internal.h",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-01-08T23:00:15Z",
      "side": 1,
      "message": "I suggested the name change to the typedef for clarity. I went with option_setter because it\u0027s self documenting, but given the convention dropping the \"er\" does make sense. How about aom_codec_option_set_fn_t? \n\nI don\u0027t think the direct match of the function pointer typedef to the function implementation name was ever an intention, and I think preserving the clearer name for the typedef makes sense. The implementation function can be aom_codec_option_set() without it making things look super weird.",
      "parentUuid": "a7773717_8924110b",
      "range": {
        "startLine": 170,
        "startChar": 26,
        "endLine": 170,
        "endChar": 54
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e561306a_f54a368f",
        "filename": "aom/internal/aom_codec_internal.h",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T23:05:00Z",
      "side": 1,
      "message": "I see. Then we can leave this typedef name unchanged. This is an internal typedef, not in the public API. So we can easily rename it later.",
      "parentUuid": "a457567d_286591ac",
      "range": {
        "startLine": 170,
        "startChar": 26,
        "endLine": 170,
        "endChar": 54
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8b1d5e9_5f08165f",
        "filename": "aom/internal/aom_codec_internal.h",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T23:15:22Z",
      "side": 1,
      "message": "Re: changing the function to aom_codec_option_set(): The getter functions are all named aom_codec_get_xxx(). There are fewer setter functions, and we have a tie: aom_codec_enc_config_set vs. aom_codec_set_cx_data_buf.\n\nI prefer the current name of aom_codec_set_option.",
      "parentUuid": "e561306a_f54a368f",
      "range": {
        "startLine": 170,
        "startChar": 26,
        "endLine": 170,
        "endChar": 54
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8356a31b_20575380",
        "filename": "aom/internal/aom_codec_internal.h",
        "patchSetId": 19
      },
      "lineNbr": 170,
      "author": {
        "id": 5215
      },
      "writtenOn": "2021-01-08T23:27:42Z",
      "side": 1,
      "message": "Fair enough: Sorry Bohan, just go with the original name.",
      "parentUuid": "f8b1d5e9_5f08165f",
      "range": {
        "startLine": 170,
        "startChar": 26,
        "endLine": 170,
        "endChar": 54
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09c4dd31_4f84b9fd",
        "filename": "aom/src/aom_codec.c",
        "patchSetId": 19
      },
      "lineNbr": 122,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "Remove the !ctx-\u003eiface-\u003eset_option check.\n\nI found that all the other aom codec functions assume their corresponding ctx-\u003eiface-\u003efoo function pointer is not null.",
      "range": {
        "startLine": 122,
        "startChar": 32,
        "endLine": 122,
        "endChar": 58
      },
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cf8f502_378ac6dd",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 341,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "My comment at line 3105 below will refer to this line.",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf6a92b7_dfd0d7f0",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 2776,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "1. IMPORTANT: ctx-\u003ecpi-\u003ecommon.error.detail is not big enough. It is defined as 80 bytes in aom/internal/aom_codec_internal.h:\n\n  struct aom_internal_error_info {\n    aom_codec_err_t error_code;\n    int has_detail;\n    char detail[80];\n    int setjmp;  // Boolean: whether \u0027jmp\u0027 is valid.\n    jmp_buf jmp;\n  };\n\nIt needs to be at least ARG_ERR_MSG_MAX_LEN bytes long.\n\nAlternatively, do you think we can define ARG_ERR_MSG_MAX_LEN as 80? ARG_ERR_MSG_MAX_LEN is currently defined as 200. How did you determine that value?\n\n2. Optional: It would be good to change arg_match_helper() to also take an err_string_size parameter to avoid this kind of bug. (Buffer overflow is public enemy No. 1.) This can be done in a separate CL.",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d022fb8b_7f589153",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 2776,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T23:01:02Z",
      "side": 1,
      "message": "I am so sorry! You already increased the size of the error detail buffer to ARG_ERR_MSG_MAX_LEN. Somehow I missed that change during code review.\n\nPlease add an assertion here:\n\n  assert(sizeof(ctx-\u003ecpi-\u003ecommon.error.detail) \u003e\u003d ARG_ERR_MSG_MAX_LEN);\n\nIdeally we should use static_assert, but static_assert is only available in C11 or later. (libaom only requires C99.) I will look into how to detect C11.\n\n(Not in this CL: We should still consider adding an err_message_size parameter to arg_match_helper.)",
      "parentUuid": "cf6a92b7_dfd0d7f0",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77ab890e_8993ef6b",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 3105,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "I wonder if we should set ctx-\u003ebase.err_detail to NULL here or at line 3100. See line 341 above.",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e394e2d_6261cc9e",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 3434,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "aom_codec_option_setter_fn_t \u003d\u003e aom_codec_set_option_fn_t",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "411a2f7b_65de3cd1",
        "filename": "av1/av1_dx_iface.c",
        "patchSetId": 19
      },
      "lineNbr": 1602,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-01-08T22:37:28Z",
      "side": 1,
      "message": "aom_codec_option_setter_fn_t \u003d\u003e aom_codec_set_option_fn_t",
      "revId": "684e0bdbf191fab9a56e8500634e9db393d10341",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}