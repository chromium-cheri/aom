{
  "comments": [
    {
      "key": {
        "uuid": "6b712657_e66577e5",
        "filename": "av1/common/clpf.c",
        "patchSetId": 8
      },
      "lineNbr": 102,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "Do you still need this variable? Seems like it\u0027s only used once to set up dst_buffer below. In fact, src_buffer uses frame directly, do you even need both?",
      "range": {
        "startLine": 102,
        "startChar": 28,
        "endLine": 102,
        "endChar": 33
      },
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_6652e705",
        "filename": "av1/common/clpf.c",
        "patchSetId": 8
      },
      "lineNbr": 118,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "Is there any case where it is not set to cache (or hbd cache?)\n\ndoes dststride need to be updated?",
      "range": {
        "startLine": 118,
        "startChar": 15,
        "endLine": 118,
        "endChar": 20
      },
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_86191b85",
        "filename": "av1/common/clpf.c",
        "patchSetId": 8
      },
      "lineNbr": 171,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "I\u0027m not 100% on what is going on here, but the logic is flipped for non-hbd. Is it possible to always make the if condition \u003d\u003d 8 or \u003d\u003d 4?",
      "range": {
        "startLine": 171,
        "startChar": 30,
        "endLine": 171,
        "endChar": 31
      },
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_e686d76c",
        "filename": "av1/common/clpf.c",
        "patchSetId": 8
      },
      "lineNbr": 243,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "Can all of these be replaced with memcpy?",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_06b68b92",
        "filename": "av1/common/clpf.h",
        "patchSetId": 8
      },
      "lineNbr": 23,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "it\u0027s called size in the other function. i\u0027m a little uncertain about what either of them mean. shouldn\u0027t you be able to derive size from width and height?",
      "range": {
        "startLine": 23,
        "startChar": 67,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_26f86fdd",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 137,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "block2?",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_c6d39353",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 241,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "comment isn\u0027t really necessary.",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_86cefbab",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 248,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "Same question, do you even want that affordance or should it just assert() or fail for strange block sizes?",
      "range": {
        "startLine": 248,
        "startChar": 25,
        "endLine": 248,
        "endChar": 26
      },
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_466b2388",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 287,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "comment is a little misleading - i assume this is like the non-hbd, and this is only calculating half as many values?\n\notherwise if the only difference is the store at the end, that part should be factored out.",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_46824338",
        "filename": "av1/common/clpf_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 313,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "clpf_block_hbd? 16bit seems implied by hbd",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_461d631b",
        "filename": "av1/encoder/clpf_rdo.c",
        "patchSetId": 8
      },
      "lineNbr": 29,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "oh wait width is the whole block width, not the part being filtered. now i see why you need size.",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b712657_a6377f98",
        "filename": "av1/encoder/clpf_rdo_simd.h",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 5435
      },
      "writtenOn": "2016-09-14T17:05:16Z",
      "side": 1,
      "message": "TODO for size \u003d\u003d 4? Or unsupported?\n\nComment is unnecessary unless it explains why it is falling back to C (other than !\u003d 8)",
      "revId": "5686f127cc68b9065af42ed122b46c9378f8433f",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}