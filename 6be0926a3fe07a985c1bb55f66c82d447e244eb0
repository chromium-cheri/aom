{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b23e7b5e_eab1e59a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-03-08T13:31:57Z",
      "side": 1,
      "message": "If we modify this statement for vmaf, it is also true:\n\n  aom_dsp/vmaf.c includes libvmaf/libvmaf.h; it\u0027s a part of\n  the aom_dsp_encoder target not aom.\n\nShould we make a similar change to target_include_directories(aom PRIVATE ${VMAF_INCLUDE_DIRS}) in CMakeLists.txt?",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e59985d4_88d00d60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-08T20:00:11Z",
      "side": 1,
      "message": "\u003e If we modify this statement for vmaf, it is also true:\n\u003e \n\u003e   aom_dsp/vmaf.c includes libvmaf/libvmaf.h; it\u0027s a part of\n\u003e   the aom_dsp_encoder target not aom.\n\u003e \n\u003e Should we make a similar change to target_include_directories(aom PRIVATE ${VMAF_INCLUDE_DIRS}) in CMakeLists.txt?\n\nThat configuration builds. I\u0027d need to take a closer look, but it\u0027s outside the scope of this change.",
      "parentUuid": "b23e7b5e_eab1e59a",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "688b933f_633d1f9f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-14T20:58:57Z",
      "side": 1,
      "message": "\u003e \u003e If we modify this statement for vmaf, it is also true:\n\u003e \u003e \n\u003e \u003e   aom_dsp/vmaf.c includes libvmaf/libvmaf.h; it\u0027s a part of\n\u003e \u003e   the aom_dsp_encoder target not aom.\n\u003e \u003e \n\u003e \u003e Should we make a similar change to target_include_directories(aom PRIVATE ${VMAF_INCLUDE_DIRS}) in CMakeLists.txt?\n\u003e \n\u003e That configuration builds. I\u0027d need to take a closer look, but it\u0027s outside the scope of this change.\n\nhttps://aomedia-review.googlesource.com/c/aom/+/155141",
      "parentUuid": "e59985d4_88d00d60",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dac7c25_0add0490",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-03-08T13:31:57Z",
      "side": 1,
      "message": "James: This CL looks like cmake code cleanup. It is not required for fixing b/222461449, right?",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fa39c74_168a589a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-08T20:00:11Z",
      "side": 1,
      "message": "\u003e James: This CL looks like cmake code cleanup. It is not required for fixing b/222461449, right?\n\nThe build will technically fail if you use pkg-config and don\u0027t set the include path. So it\u0027s somewhat related to the bug.",
      "parentUuid": "2dac7c25_0add0490",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1baae81a_8361f4e3",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 9545
      },
      "writtenOn": "2022-03-08T13:31:57Z",
      "side": 1,
      "message": "Should this also be changed to aom_dsp_encoder?",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef65c2ff_522d12cc",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-08T20:00:11Z",
      "side": 1,
      "message": "\u003e Should this also be changed to aom_dsp_encoder?\n\nIt\u0027s an object library which some generators have had other issues with. It\u0027s probably safest to keep the link libraries associated with the top-level library in this change.",
      "parentUuid": "1baae81a_8361f4e3",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e582c8e5_db6f0eb2",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-08T21:06:25Z",
      "side": 1,
      "message": "\u003e \u003e Should this also be changed to aom_dsp_encoder?\n\u003e \n\u003e It\u0027s an object library which some generators have had other issues with. It\u0027s probably safest to keep the link libraries associated with the top-level library in this change.\n\nIt looks like this may work, but I\u0027d like to bring it in separately to test things like the Xcode generator beforehand.\n\nhttps://cmake.org/cmake/help/v3.19/command/target_link_libraries.html#linking-object-libraries",
      "parentUuid": "ef65c2ff_522d12cc",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60f03801_8ae4296b",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 5020
      },
      "writtenOn": "2022-03-14T20:57:21Z",
      "side": 1,
      "message": "\u003e \u003e \u003e Should this also be changed to aom_dsp_encoder?\n\u003e \u003e \n\u003e \u003e It\u0027s an object library which some generators have had other issues with. It\u0027s probably safest to keep the link libraries associated with the top-level library in this change.\n\u003e \n\u003e It looks like this may work, but I\u0027d like to bring it in separately to test things like the Xcode generator beforehand.\n\u003e \n\u003e https://cmake.org/cmake/help/v3.19/command/target_link_libraries.html#linking-object-libraries\n\nLooking a little more closely, without some additional changes this won\u0027t work. aom would need to depend on the object library, but currently only extracts the outputs.\n\nhttps://aomedia.googlesource.com/aom/+/refs/tags/v3.3.0/aom_dsp/aom_dsp.cmake#360",
      "parentUuid": "e582c8e5_db6f0eb2",
      "revId": "6be0926a3fe07a985c1bb55f66c82d447e244eb0",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": []
}