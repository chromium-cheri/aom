{
  "comments": [
    {
      "key": {
        "uuid": "ec9a892e_c33517ef",
        "filename": "aom_ports/sanitizer.h",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-01T17:31:08Z",
      "side": 1,
      "message": "In libvpx, the equivalent macro VPX_WITH_ASAN is defined in vpx_ports/mem.h. I decided to add a new header aom_ports/sanitizer.h, instead of adding this to aom_ports/mem.h.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 27,
        "endChar": 40
      },
      "revId": "b7e8eb7373d4e7a514f08daf014b1f670db8bda2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51633576_9651b41e",
        "filename": "test/ivf_video_source.h",
        "patchSetId": 3
      },
      "lineNbr": 96,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-05-01T17:31:08Z",
      "side": 1,
      "message": "Since compressed_frame_buf_ is a big buffer (256 * 1024 bytes), asan won\u0027t report the heap-buffer-overflow error if we access memory beyond compressed_frame_buf_ + frame_sz_.\n\nThere are two workarounds:\n\n1. Allocate a new compressed_frame_buf_ buffer of frame_sz_ bytes every time before the fread() call here.\n\n2. Use asan manual memory poisoning to mark the memory beyond compressed_frame_buf_ + frame_sz_ as bad.\n\nI decided to do #2 to minimize the change to the code.",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 96,
        "endChar": 61
      },
      "revId": "b7e8eb7373d4e7a514f08daf014b1f670db8bda2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}