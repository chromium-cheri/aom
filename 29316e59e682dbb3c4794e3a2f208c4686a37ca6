{
  "comments": [
    {
      "key": {
        "uuid": "274e526d_66ac775e",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 5
      },
      "lineNbr": 4703,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-28T18:39:29Z",
      "side": 1,
      "message": "It may be easier to just review the new code and verify that it adheres to the policy.\n\nIn the new code, both of the for loops store a new frame buffer index in cm-\u003enext_ref_frame_map[ref_index]. Since cm-\u003enext_ref_frame_map[ref_index] holds a reference, we increment the ref_count of the frame buffer at cm-\u003enext_ref_frame_map[ref_index].\n\nThe two for loops differ only in which frame buffer index they store in cm-\u003enext_ref_frame_map[ref_index]. The first for loop may store cm-\u003enew_fb_idx or cm-\u003eref_frame_map[ref_index], depending whether mask \u0026 1 is true or false. The second for loop always stores cm-\u003eref_frame_map[ref_index].\n\nThe if (cm-\u003enext_ref_frame_map[ref_index] \u003e\u003d 0) checks at line 4694 and line 4701 are necessary because cm-\u003eref_frame_map[ref_index] may be -1 (INVALID_IDX).",
      "revId": "29316e59e682dbb3c4794e3a2f208c4686a37ca6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "802eb9e8_044c89fb",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 5
      },
      "lineNbr": 334,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-28T18:39:29Z",
      "side": 1,
      "message": "In the new code, we just need a single for loop to release the frame buffer references held by elements of the cm-\u003enext_ref_frame_map array.\n\nNote: In a follow-up CL, I will then set cm-\u003enext_ref_frame_map[ref_index] to INVALID_IDX to avoid \"dangling frame buffer indexes\".",
      "revId": "29316e59e682dbb3c4794e3a2f208c4686a37ca6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf72d87b_1d9228f8",
        "filename": "av1/decoder/decoder.c",
        "patchSetId": 5
      },
      "lineNbr": 382,
      "author": {
        "id": 9545
      },
      "writtenOn": "2018-11-28T18:39:29Z",
      "side": 1,
      "message": "The two for loops now differ only in the loop termination conditions. Both of them release the reference held by the old value of cm-\u003eref_frame_map[ref_index] before transferring the reference held by cm-\u003enext_ref_frame_map[ref_index] to cm-\u003eref_frame_map[ref_index].\n\nNotes:\n\n1. Unlike release_frame_buffers(), I could not merge the two for loops in swap_frame_buffers() into one, because the second for loop checks the check_on_show_existing_frame boolean, which I haven\u0027t figured out.\n\n2. In a follow-up CL,I will set cm-\u003enext_ref_frame_map[ref_index] to INVALID_IDX to avoid \"dangling frame buffer indexes\".",
      "revId": "29316e59e682dbb3c4794e3a2f208c4686a37ca6",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}