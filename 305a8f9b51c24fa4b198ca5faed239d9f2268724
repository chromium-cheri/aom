{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5bcb4f4_c8a09db1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-05T17:27:46Z",
      "side": 1,
      "message": "In the parent commit, for a few MT modules, when a thread encounters an error it will invoke the respective `sync_write()` function to set the `num_finished_cols[r]` of every row to a maximum column number in order to avoid dependent workers from waiting indefinitely. This maximum column number can be overwritten by a non-erroneous thread with a lower column number causing the dependent worker to wait indefinitely. This CL resolves this issue in loop filter, loop restoration and TPL MT modules, by modifying the respective `sync_write()` functions such that they will never decrease the `num_finished_cols[r]`. A similar fix is already done for other encoder modules in [CL](https://aomedia-review.googlesource.com/c/aom/+/180642).\n\nThis issue is reproducible only if a minimum of three threads are working in parallel on a tile. A similar fix is currently not required for the `sync_write()` function of decoder, as the decoder has a constraint of maximum 2 threads per tile (`AOM_MAX_THREADS_PER_TILE`). Please let us know if we should do this fix for the decoder as well to avoid  deadlock issues in the future if this constraint is removed.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}