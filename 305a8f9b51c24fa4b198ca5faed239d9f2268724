{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8d825bbc_3813a334",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-06T21:56:58Z",
      "side": 1,
      "message": "I inspected all the `sync_write()` functions in libaom.\n\nPlease check the `sync_write()` function in av1/decoder/decodeframe.c. It may have the same issue.",
      "revId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5bcb4f4_c8a09db1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-05T17:27:46Z",
      "side": 1,
      "message": "In the parent commit, for a few MT modules, when a thread encounters an error it will invoke the respective `sync_write()` function to set the `num_finished_cols[r]` of every row to a maximum column number in order to avoid dependent workers from waiting indefinitely. This maximum column number can be overwritten by a non-erroneous thread with a lower column number causing the dependent worker to wait indefinitely. This CL resolves this issue in loop filter, loop restoration and TPL MT modules, by modifying the respective `sync_write()` functions such that they will never decrease the `num_finished_cols[r]`. A similar fix is already done for other encoder modules in [CL](https://aomedia-review.googlesource.com/c/aom/+/180642).\n\nThis issue is reproducible only if a minimum of three threads are working in parallel on a tile. A similar fix is currently not required for the `sync_write()` function of decoder, as the decoder has a constraint of maximum 2 threads per tile (`AOM_MAX_THREADS_PER_TILE`). Please let us know if we should do this fix for the decoder as well to avoid  deadlock issues in the future if this constraint is removed.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "305a8f9b51c24fa4b198ca5faed239d9f2268724",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}