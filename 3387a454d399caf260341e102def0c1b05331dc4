{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "48b48f8b_cb3c021e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 9616
      },
      "writtenOn": "2023-04-19T15:58:33Z",
      "side": 1,
      "message": "This CL fixes and re-enables the sf \u0027prune_nearest_near_mv_using_refmv_weight\u0027 for speed \u003e\u003d 5 for \u0027GOOD\u0027 encoding mode.\n\nThis sf prunes NEARESTMV and NEARMV when the count of spatial neighboring mvs is smaller than a threshold. The CL which introduced this sf (https://aomedia-review.googlesource.com/c/aom/+/145601) allows pruning of these modes even at tile boundaries where there is no valid neighbor information. This behavior together with other speed-up optimizations, results in the case where none of the Inter modes is evaluated. This forces the selection of Intra modes for those blocks. This scenario is present especially in OVERLAY frames coded at high qp, resulting in flickering artifacts.\n\nIn this CL, the below improvements are made to fix this issue. The pruning logic is enabled when,\n- Both the top and left neighboring blocks are available\n- When a best prediction mode is already identified (ref_best_rd !\u003d INT64_MAX)\n- Screen content tools are disabled\n\nWhile fixing the issue, the visual artifact reported in BUG\u003db/245416468 is reproduced. The fix is validated by confirming that the artifact no longer exists. Moreover, the maximum BD-Rate Loss has reduced from 2.42% to 0.68% in speed 5 and from 6.02% to 0.73% in speed 6 with the fix.",
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe305a83_c77781c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-19T16:31:05Z",
      "side": 1,
      "message": "This CL looks good to me with the fix and testing done. Good to bring this optimization back in a safer way.",
      "parentUuid": "48b48f8b_cb3c021e",
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "132f1641_1f1fac10",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 8
      },
      "lineNbr": 1760,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-19T16:31:05Z",
      "side": 1,
      "message": "If this is false, it means an inter mode is already picked, right?",
      "range": {
        "startLine": 1760,
        "startChar": 6,
        "endLine": 1760,
        "endChar": 30
      },
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0818f8fc_19b7105b",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 8
      },
      "lineNbr": 1760,
      "author": {
        "id": 9616
      },
      "writtenOn": "2023-04-20T16:50:35Z",
      "side": 1,
      "message": "Since ref_best_rd holds the best rd cost across the blocks in a partition, if ref_best_rd \u003d\u003d INT64_MAX check fails, it implies that either\n- a valid inter prediction mode is already identified for the region (if the current region is the first block to be evaluated in the partition) or\n- a valid intra/inter prediction mode is already identified for the region (if the current region is not the first block to be evaluated in the partition)",
      "parentUuid": "132f1641_1f1fac10",
      "range": {
        "startLine": 1760,
        "startChar": 6,
        "endLine": 1760,
        "endChar": 30
      },
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94af7575_fec45613",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 8
      },
      "lineNbr": 1760,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-04-20T20:34:10Z",
      "side": 1,
      "message": "I think what we want to ensure here is at least 1 inter mode is evaluated for this block. Is it possible?",
      "parentUuid": "0818f8fc_19b7105b",
      "range": {
        "startLine": 1760,
        "startChar": 6,
        "endLine": 1760,
        "endChar": 30
      },
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e5be3a_df614c08",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 8
      },
      "lineNbr": 1765,
      "author": {
        "id": 6585
      },
      "writtenOn": "2023-04-20T20:35:52Z",
      "side": 1,
      "message": "In my understanding, this condition does not completely exclude the possibility of artifacts.\n\nIs it possible to check whether at least 1 inter mode is evaluated?\nOr check neighbor mv or ref mvs?",
      "range": {
        "startLine": 1765,
        "startChar": 2,
        "endLine": 1765,
        "endChar": 57
      },
      "revId": "3387a454d399caf260341e102def0c1b05331dc4",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}