{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "275c99ee_b7daf34e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-24T01:59:21Z",
      "side": 1,
      "message": "let\u0027s pick up the change from v2.0.2 first then rebase this one",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c916213_b8fc3de6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-24T02:22:27Z",
      "side": 1,
      "message": "does it make difference? (submitting this one vs picking up v2.0.2 then rebasing this one) ideally 2.0.2 should be precedent of 2.1.0?",
      "parentUuid": "275c99ee_b7daf34e",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed8a5cfd_ed1f0081",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-24T02:35:01Z",
      "side": 1,
      "message": "\u003e does it make difference? (submitting this one vs picking up v2.0.2 then rebasing this one) ideally 2.0.2 should be precedent of 2.1.0?\n\npart of that change included an update to the changelog so I\u0027d think you\u0027d want it and it will save you one merge conflict",
      "parentUuid": "4c916213_b8fc3de6",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "458d32d3_8f6b107e",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-25T00:22:06Z",
      "side": 1,
      "message": "SO_VERSION should stay at 2, because this release is a drop-in replacement for libaom 2.0.x at the ABI level.",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3870afe_dbcba413",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T01:39:39Z",
      "side": 1,
      "message": "should ABI keep the same? There is a new API added - see changelog. so a program linking against v2.1.0 may not compile if linked against v2.0.x.",
      "parentUuid": "458d32d3_8f6b107e",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "527b9ebc_f82a01ae",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-25T01:51:56Z",
      "side": 1,
      "message": "The ABI of v2.1.0 has changed but is backward compatible with the ABI of v2.0.x. The SO_VERSION of 2 simply means it is backward compatible with the shared library of libaom 2.0.0.\n\nThere is another mechanism of the Linux linker (which comes from the Solaris linker, I believe) called symbol versioning that can detect the problem you described. We are not doing that in libaom.",
      "parentUuid": "b3870afe_dbcba413",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6fd8ca6_cfdac4e3",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T20:00:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "527b9ebc_f82a01ae",
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc918b4f_eddf361d",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-25T00:36:30Z",
      "side": 1,
      "message": "Wan-Teh is correct and here we decided this maps to \u003ccurrent\u003e.\u003cage\u003e.\u003crevision\u003e rather than the libtool ordering in the link.",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42a234b8_5852c5ce",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T01:39:39Z",
      "side": 1,
      "message": "Right. I think we should update the comment above or it\u0027s confusing.",
      "parentUuid": "cc918b4f_eddf361d",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2712032_8d75a24c",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-25T19:18:56Z",
      "side": 1,
      "message": "\u003e Right. I think we should update the comment above or it\u0027s confusing.\n\ngiven the mapping this should be 2.0.3 then",
      "parentUuid": "42a234b8_5852c5ce",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3015b971_3fde8a12",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T20:00:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2712032_8d75a24c",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "857dd7c0_a84dfc06",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-25T20:15:48Z",
      "side": 1,
      "message": "2.0.3 is incorrect. In the unlikely case that we make another release from the applejack branch, that release will have the 2.0.3 SO_FILE_VERSION.\n\nWhat are the \u0027current\u0027, \u0027age\u0027, and \u0027revision\u0027 for the libaom 2.0.0 release? From that, we can work out the\u0027current\u0027, \u0027age\u0027, and \u0027revision\u0027 for this release, and then we can use the following libtool source code to generate the SO_FILE_VERSION value:\n\n        linux) # correct to gnu/linux during the next big refactor\n          func_arith $current - $age\n          major\u003d.$func_arith_result\n          versuffix\u003d$major.$age.$revision\n          ;;\n\nThe result should be 2.1.0, otherwise something is wrong with the libtool versioning scheme.",
      "parentUuid": "3015b971_3fde8a12",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db78233_dcb77fb2",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-25T20:28:57Z",
      "side": 1,
      "message": "\u003e 2.0.3 is incorrect. In the unlikely case that we make another release from the applejack branch, that release will have the 2.0.3 SO_FILE_VERSION.\n\u003e \n\u003e What are the \u0027current\u0027, \u0027age\u0027, and \u0027revision\u0027 for the libaom 2.0.0 release? From that, we can work out the\u0027current\u0027, \u0027age\u0027, and \u0027revision\u0027 for this release, and then we can use the following libtool source code to generate the SO_FILE_VERSION value:\n\u003e \n\u003e         linux) # correct to gnu/linux during the next big refactor\n\u003e           func_arith $current - $age\n\u003e           major\u003d.$func_arith_result\n\u003e           versuffix\u003d$major.$age.$revision\n\u003e           ;;\n\u003e \n\u003e The result should be 2.1.0, otherwise something is wrong with the libtool versioning scheme.\n\nYes it is incorrect. I forgot about the addition of aom_codec_set_option.",
      "parentUuid": "857dd7c0_a84dfc06",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767d223a_625e95bd",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T20:31:06Z",
      "side": 1,
      "message": "The libtool versioning doc says:\n\n\"If any interfaces have been added, removed, or changed since the last update, increment current, and set revision to 0.\"\n\nfor 2.0.0 the \"current\" is 2 and others are 0. we added new APIs from 2.0.0 to 2.1.0, so if we follow libtool versioning scheme, we should bump up current and set it to 3.0.0",
      "parentUuid": "1db78233_dcb77fb2",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5179fb6c_c77e1f0a",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T20:33:58Z",
      "side": 1,
      "message": "it also says \n\n\"If any interfaces have been added since the last public release, then increment age.\"\n\nthe last public release is 2.0.2 and the SO_FILE_VERSION is set to 2.0.2. if we follow this one, and the mapping of \u003ccurrent\u003e.\u003cage\u003e.\u003crevision\u003e still holds, it should be 2.1.x (it doesn\u0027t say anything about \u003crevision\u003e)",
      "parentUuid": "767d223a_625e95bd",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ec1221_fa3ed188",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-02-25T22:04:56Z",
      "side": 1,
      "message": "\u003e it also says \n\u003e \n\u003e \"If any interfaces have been added since the last public release, then increment age.\"\n\u003e \n\u003e the last public release is 2.0.2 and the SO_FILE_VERSION is set to 2.0.2. if we follow this one, and the mapping of \u003ccurrent\u003e.\u003cage\u003e.\u003crevision\u003e still holds, it should be 2.1.x (it doesn\u0027t say anything about \u003crevision\u003e)\n\nhere\u0027s the way I read it taking into account the addition of aom_codec_set_option (the abi was bumped for this). I reviewed\ngit log -p v2.0.0..origin/braeburn aom/\n\nhttps://aomedia-review.googlesource.com/c/aom/+/116721 -- should have bumped the encoder abi\n\nhttps://aomedia-review.googlesource.com/c/aom/+/113581 -- this breaks compatiblity\n\nlibtool version:\n\ncurrent:revision:age \u003d 2:2:0 \u003d 2.0.2\n\n3. If the library source code has changed at all since the last update, then increment revision (‘c:r:a’ becomes ‘c:r+1:a’).\n\n  2:3:0\n\n4. If any interfaces have been added, removed, or changed since the last update, increment current, and set revision to 0.\n\n  3:0:0\n\n5. If any interfaces have been added since the last public release, then increment age.\n\n  3:0:1 \u003d 3.1.0\n\n6. If any interfaces have been removed or changed since the last public release, then set age to 0.\n  N/A",
      "parentUuid": "5179fb6c_c77e1f0a",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "481b7347_65aa91d0",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-02-25T22:30:22Z",
      "side": 1,
      "message": "Thanks for the analysis. \n\nSince this happened:\nhttps://aomedia-review.googlesource.com/c/aom/+/113581 -- this breaks compatiblity\n\nthen we should bump up the SO_VERSION too, right?",
      "parentUuid": "20ec1221_fa3ed188",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31c334d_734dceee",
        "filename": "CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-02-25T23:36:50Z",
      "side": 1,
      "message": "If c:r:a is 3:0:1, then libtool generates the following file names:\n  libhello.so.2.1.0\n  libhello.so.2 (a symlink)\n  libhello.so (a symlink)\n\nHere is the transcript of my experiment:\n\n$ libtool --version\nlibtool (GNU libtool) 2.4.6\nWritten by Gordon Matzigkeit, 1996\n\nCopyright (C) 2014 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n$ ls -la\ntotal 128\ndrwxr-x--- 2 wtc xxx   4096 Feb 25 15:29 .\ndrwxr-xr-x 6 wtc xxx 118784 Feb 25 15:29 ..\n-rw-r----- 1 wtc xxx     71 Feb 25 15:29 hello.c\n$ cat hello.c\n#include \u003cstdio.h\u003e\n\nvoid Hello(void) {\n\n  printf(\"Hello, world!\\n\");\n}\n$ libtool compile gcc -c hello.c\nlibtool: compile:  gcc -c hello.c  -fPIC -DPIC -o .libs/hello.o\nlibtool: compile:  gcc -c hello.c -o hello.o \u003e/dev/null 2\u003e\u00261\n$ ls -la\ntotal 140\ndrwxr-x--- 3 wtc xxx   4096 Feb 25 15:29 .\ndrwxr-xr-x 6 wtc xxx 118784 Feb 25 15:29 ..\n-rw-r----- 1 wtc xxx     71 Feb 25 15:29 hello.c\n-rw-r----- 1 wtc xxx    283 Feb 25 15:29 hello.lo\n-rw-r----- 1 wtc xxx   1544 Feb 25 15:29 hello.o\ndrwxr-x--- 2 wtc xxx   4096 Feb 25 15:29 .libs\n$ ls -la .libs\ntotal 12\ndrwxr-x--- 2 wtc xxx 4096 Feb 25 15:29 .\ndrwxr-x--- 3 wtc xxx 4096 Feb 25 15:29 ..\n-rw-r----- 1 wtc xxx 1544 Feb 25 15:29 hello.o\n$ libtool --mode\u003dlink gcc -version-info 3:0:1 hello.lo -o libhello.la -rpath /usr/local/lib\nlibtool: link: gcc -shared  -fPIC -DPIC  .libs/hello.o      -Wl,-soname -Wl,libhello.so.2 -o .libs/libhello.so.2.1.0\nlibtool: link: (cd \".libs\" \u0026\u0026 rm -f \"libhello.so.2\" \u0026\u0026 ln -s \"libhello.so.2.1.0\" \"libhello.so.2\")\nlibtool: link: (cd \".libs\" \u0026\u0026 rm -f \"libhello.so\" \u0026\u0026 ln -s \"libhello.so.2.1.0\" \"libhello.so\")\nlibtool: link: ar cr .libs/libhello.a  hello.o\nlibtool: link: ranlib .libs/libhello.a\nlibtool: link: ( cd \".libs\" \u0026\u0026 rm -f \"libhello.la\" \u0026\u0026 ln -s \"../libhello.la\" \"libhello.la\" )\n$ ls -la\ntotal 144\ndrwxr-x--- 3 wtc xxx   4096 Feb 25 15:30 .\ndrwxr-xr-x 6 wtc xxx 118784 Feb 25 15:29 ..\n-rw-r----- 1 wtc xxx     71 Feb 25 15:29 hello.c\n-rw-r----- 1 wtc xxx    283 Feb 25 15:29 hello.lo\n-rw-r----- 1 wtc xxx   1544 Feb 25 15:29 hello.o\n-rw-r----- 1 wtc xxx    938 Feb 25 15:30 libhello.la\ndrwxr-x--- 2 wtc xxx   4096 Feb 25 15:30 .libs\n$ ls -la .libs\ntotal 36\ndrwxr-x--- 2 wtc xxx  4096 Feb 25 15:30 .\ndrwxr-x--- 3 wtc xxx  4096 Feb 25 15:30 ..\n-rw-r----- 1 wtc xxx  1544 Feb 25 15:29 hello.o\n-rw-r----- 1 wtc xxx  1686 Feb 25 15:30 libhello.a\nlrwxrwxrwx 1 wtc xxx    14 Feb 25 15:30 libhello.la -\u003e ../libhello.la\n-rw-r----- 1 wtc xxx   939 Feb 25 15:30 libhello.lai\nlrwxrwxrwx 1 wtc xxx    17 Feb 25 15:30 libhello.so -\u003e libhello.so.2.1.0\nlrwxrwxrwx 1 wtc xxx    17 Feb 25 15:30 libhello.so.2 -\u003e libhello.so.2.1.0\n-rwxr-x--- 1 wtc xxx 15992 Feb 25 15:30 libhello.so.2.1.0",
      "parentUuid": "481b7347_65aa91d0",
      "range": {
        "startLine": 38,
        "startChar": 20,
        "endLine": 38,
        "endChar": 25
      },
      "revId": "3bb03cf5914934f1c3a9b923261817728631bc06",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}