{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a9698bfd_8524488f",
        "filename": "examples/lightfield_bitstream_parsing.c",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 9545
      },
      "writtenOn": "2024-03-26T21:11:45Z",
      "side": 1,
      "message": "James: This is the fix in the main branch of libaom. Since the variable `num_tile_lists` is only used in the `printf` statement below, another solution is to declare the variable as `aom_codec_pts_t` or `int64_t`, and use `PRId64` instead of \"d\" in the `printf` statement.",
      "revId": "9582fa2d53deaed2b1457fe4965a544f8e8f59f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5171857_7537f91f",
        "filename": "examples/lightfield_bitstream_parsing.c",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 5020
      },
      "writtenOn": "2024-03-27T00:43:31Z",
      "side": 1,
      "message": "\u003e James: This is the fix in the main branch of libaom. Since the variable `num_tile_lists` is only used in the `printf` statement below, another solution is to declare the variable as `aom_codec_pts_t` or `int64_t`, and use `PRId64` instead of \"d\" in the `printf` statement.\n\nIt\u0027s probably best to keep things consistent.",
      "parentUuid": "a9698bfd_8524488f",
      "revId": "9582fa2d53deaed2b1457fe4965a544f8e8f59f7",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "9582fa2d53deaed2b1457fe4965a544f8e8f59f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9582fa2d53deaed2b1457fe4965a544f8e8f59f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "9582fa2d53deaed2b1457fe4965a544f8e8f59f7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}