{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9052a5ed_e6c31eaa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-26T13:44:03Z",
      "side": 1,
      "message": "A local instance of `aom_internal_error_info` is used to add the setjmp target in `prepare_fpmt_workers()`, and `cm-\u003eerror` of each `parallel_cpi[frame_idx]` is made to point to the local `error` structure. This will facilitate the longjmp in case of an error in `av1_alloc_cdef_buffers()`.\n\nAlso, `restore_workers_after_fpmt()` is called inside the setjmp target to restore the worker states. Currently, `restore_workers_after_fpmt()` uses `p_mt_info-\u003enum_workers` to restore workers. In case of an early termination during worker preparation, `restore_workers_after_fpmt()` needs to restore the exact number of workers which were successfully prepared to avoid SEGV error. In order to facilitate this, a new variable `num_fpmt_workers_prepared` is added to `ppi-\u003ep_mt_info` and the same is used to restore the workers.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "935ae267_db9b0924",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 1734,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Optional: I think this can be a local variable (declared as volatile) in `prepare_fpmt_workers()` and passed to `restore_workers_after_fpmt()` as an input parameter.",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "433bf684_e88e6166",
        "filename": "av1/encoder/encoder.h",
        "patchSetId": 5
      },
      "lineNbr": 1734,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "935ae267_db9b0924",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b3c7cd_90d3c378",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1305,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Nit: Search for \"ppi-\u003ep_mt_info\" in this function. Replace `ppi-\u003ep_mt_info.` with `p_mt_info-\u003e`",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbf84f89_a2b779da",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1305,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2b3c7cd_90d3c378",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5356eea6_a000f3c6",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1307,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Please add a comment to explain why we need to set `cm-\u003eerror` to `\u0026error`.\n\nIs it because `cm-\u003eerror` may be null sometimes, but is not null at other times?",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5279cd8a_f564a2a7",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1307,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "Removed the comment added in patchset 6, as latest patchset adds setjmp target using cm-\u003eerror.",
      "parentUuid": "5356eea6_a000f3c6",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec48b5f6_e79ad39f",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1308,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Nit: Shorten the variable name to \"backup_cm_error\", because it is a backup of `cm-\u003eerror`.",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac5d0cb5_df57f322",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1308,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ec48b5f6_e79ad39f",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8a6b59a_b3cf96f8",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1320,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Nit: I suggest we set `cm-\u003eerror` to `\u0026error` here, i.e., move line 1329 here.",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c16e65_e24a6820",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1320,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b8a6b59a_b3cf96f8",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a300a9_01ae5f41",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1321,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Optional: This `memset()` isn\u0027t absolutely necessary, right?",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3cdca62_d418c7ec",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1321,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "This `memset()` has been removed in the latest patchset.",
      "parentUuid": "b6a300a9_01ae5f41",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "548241f6_3b4cea0a",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1326,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-12-27T00:21:34Z",
      "side": 1,
      "message": "Can we return `error.error_code` instead?",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a54fd58_24a84caf",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 5
      },
      "lineNbr": 1326,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-12-28T16:40:04Z",
      "side": 1,
      "message": "We have used the `aom_internal_error_copy()` to propagate the error details also.",
      "parentUuid": "548241f6_3b4cea0a",
      "revId": "5f6f38956f0bdc5c17ef3be78fd6d76e405402d2",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}