{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21278fd9_a2a952b0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 5020
      },
      "writtenOn": "2023-10-30T22:42:54Z",
      "side": 1,
      "message": "This is a minor change, but in general please prefer separate changes. This avoids losing some cleanup if this change needs to be reverted for any reason.",
      "revId": "05dc5f386ad7a74ccb99c38617858ac7cc6fcdee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "038389f2_478d4e35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 33002
      },
      "writtenOn": "2023-10-30T15:24:43Z",
      "side": 1,
      "message": "In the parent commit, `rdcost` is allocated locally in `av1_rd_partition_search()` and freed at the end of the function. In case of an early termination between this allocation and free call (e.g., `rd_search_for_fixed_partition()` -\u003e `encode_sb()`), this will show up as a leak. In order to fix this issue, the allocation of the `RD_STATS` buffer is done using a pointer introduced in the MACROBLOCK structure under `CONFIG_PARTITION_SEARCH_ORDER` so that it can be freed in `encoder_destroy()`. Also used thread-specific `xd-\u003eerror_info` for error\nreporting when allocating the buffer `x-\u003erdcost` and `aom_internal_error()` call in line 5270.\n\nIn this CL, we have also addressed the comment given in temporal_filter.h in https://aomedia-review.googlesource.com/c/aom/+/182961\n\nThis change is tested by configuring `-DCONFIG_PARTITION_SEARCH_ORDER \u003d 1`.\n\nThis change is bit-exact and has been verified using bitstream-match tests for a combination of various configuration values for --threads, --tile-rows, --tile-columns, --cpu-used, --end-usage, --row-mt, --fp-mt, etc. Validated all unit-tests with sanitizers (address and thread) and valgrind.",
      "revId": "05dc5f386ad7a74ccb99c38617858ac7cc6fcdee",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}