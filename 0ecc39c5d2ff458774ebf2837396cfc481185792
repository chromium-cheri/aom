{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4619ccda_3080d14c",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-05T21:12:42Z",
      "side": 0,
      "message": "Ideally we should put this aom_realloc_frame_buffer() inside an if statement, similar to lines 369-377:\n\n  if (use_restoration) {\n    if (aom_realloc_frame_buffer(\n            \u0026cpi-\u003etrial_frame_rst, cm-\u003esuperres_upscaled_width,\n            cm-\u003esuperres_upscaled_height, seq_params-\u003esubsampling_x,\n            seq_params-\u003esubsampling_y, seq_params-\u003euse_highbitdepth,\n            AOM_RESTORATION_FRAME_BORDER, byte_alignment, NULL, NULL, NULL, 0))\n      aom_internal_error(cm-\u003eerror, AOM_CODEC_MEM_ERROR,\n                         \"Failed to allocate trial restored frame buffer\");\n  }\n\nCould you find out if we can do this?\n\nI am worried that the proposed new code may call aom_realloc_frame_buffer(\u0026cpi-\u003elast_frame_uf, ...) repeatedly. Although only the first call will actually allocate the frame buffer, the subsequent calls still need to do some work to realize that the current frame buffer meets the requirements and does not need to be reallocated.",
      "revId": "0ecc39c5d2ff458774ebf2837396cfc481185792",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36406d25_070f40a0",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 22433
      },
      "writtenOn": "2021-10-06T11:39:22Z",
      "side": 0,
      "message": "\u003e Could you find out if we can do this?\nAs per our understanding, the allocation for \u0027last_frame_uf\u0027 could not be kept under an if condition similar to ‘use_restoration’ as \u0027use_restoration\u0027 is a member of  seq_params which is not expected to change across frames, even if there is a change in the cpu-used parameter. The value of lpf_sf.lpf_pick can change across frames when there is a change in the cpu-used parameter, thus the memory allocation for \u0027last_frame_uf\u0027 buffer should also be taken care accordingly.\n\n\u003e I am worried that the proposed new code may call aom_realloc_frame_buffer(\u0026cpi-\u003elast_frame_uf, ...) repeatedly. Although only the first call will actually allocate the frame buffer, the subsequent calls still need to do some work to realize that the current frame buffer meets the requirements and does not need to be reallocated.\nIn the parent version, the realloc_frame_buffer() was getting called 1(during init) + n(during encode per frame) times in the case of ‘last_frame_uf’, whereas with current patch the module will be called only n(during encode per frame) times depending on sf. \nIn the parent version the module was called even for the cases not required. Whereas with current patch, the module is called only when \u0027last_frame_uf\u0027 is needed. Hence we feel that the current change/behavior is better than the previous version.",
      "parentUuid": "4619ccda_3080d14c",
      "revId": "0ecc39c5d2ff458774ebf2837396cfc481185792",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5555fe4_777e6811",
        "filename": "av1/encoder/encoder_alloc.h",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-10-07T01:28:52Z",
      "side": 0,
      "message": "Thank you for the explanation.",
      "parentUuid": "36406d25_070f40a0",
      "revId": "0ecc39c5d2ff458774ebf2837396cfc481185792",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}