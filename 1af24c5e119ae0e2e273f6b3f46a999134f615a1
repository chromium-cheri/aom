{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8be2fa70_d0535e4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-09-07T19:30:55Z",
      "side": 1,
      "message": "Sami: I suggest two changes.",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b000b74e_81bd0f5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 28097
      },
      "writtenOn": "2021-12-01T20:26:10Z",
      "side": 1,
      "message": "Thanks, somehow I only noticed this now, sorry for the delay.",
      "parentUuid": "8be2fa70_d0535e4e",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd14b60c_b7311c04",
        "filename": "examples/noise_model.c",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-09-07T19:30:55Z",
      "side": 1,
      "message": "[This is just a comment, not a request for change.] I found that libaom uses two index variables argi and argj in this kind of for loop. I haven\u0027t figured out why libaom does that, so I am not sure if we need to do that here as well.",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "686c2e51_d6300fe9",
        "filename": "examples/noise_model.c",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-09-07T19:30:55Z",
      "side": 1,
      "message": "Nit: The 0 exit status indicates success. Since an unknown arg is an error, I think we should call exit(1) here. (1 is a common exit status for failure.)",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed429657_b4aafad3",
        "filename": "examples/noise_model.c",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 28097
      },
      "writtenOn": "2021-12-01T20:26:10Z",
      "side": 1,
      "message": "Makes sense, thank you.",
      "parentUuid": "686c2e51_d6300fe9",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfbd0528_b4c0769b",
        "filename": "examples/noise_model.c",
        "patchSetId": 2
      },
      "lineNbr": 418,
      "author": {
        "id": 9545
      },
      "writtenOn": "2021-09-07T19:30:55Z",
      "side": 1,
      "message": "This empty initializer may not be portable in C. I found an example in the Notes section in https://en.cppreference.com/w/c/language/struct_initialization. Please search for the word \"empty\" in that page.\n\nI suggest we initialize this struct with a memset call:\n\n    memset(\u0026error_info, 0, sizeof(error_info));\n    \nor just initialize the setjmp field to 0:\n\n    error_info.setjmp \u003d 0;",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b61c579c_ccef3741",
        "filename": "examples/noise_model.c",
        "patchSetId": 2
      },
      "lineNbr": 418,
      "author": {
        "id": 28097
      },
      "writtenOn": "2021-12-01T20:26:10Z",
      "side": 1,
      "message": "Great catch, thanks.",
      "parentUuid": "bfbd0528_b4c0769b",
      "revId": "1af24c5e119ae0e2e273f6b3f46a999134f615a1",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}