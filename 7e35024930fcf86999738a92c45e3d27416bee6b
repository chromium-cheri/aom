{
  "comments": [
    {
      "key": {
        "uuid": "304d7e6c_dd69da6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 14,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "Comparing to \"without CfL\" makes it really hard to assess the impact of _this_ change. Even if you did this consistently for every commit, by itself it wouldn\u0027t tell you how other changes in master affected results between CfL commits.",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "471bf271_2f652fcc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 14,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "This is the first patch that adds working support for CfL in inter frames. As such, there is no prior version to compare with. This being said, we can add a Subset1 run that should reveal no change to still images. I also added https://aomedia-review.googlesource.com/c/aom/+/20982 which will use CfL only on intra frames thus giving us a version to compare with results will be available here https://arewecompressedyet.com/?job\u003dcfl-no-inter%402017-09-07T15%3A06%3A32.156Z\u0026job\u003dcfl-inter%402017-08-31T14%3A34%3A04.300Z",
      "parentUuid": "304d7e6c_dd69da6d",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3b62671_3361f572",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 14,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-08T19:59:31Z",
      "side": 1,
      "message": "Didn\u0027t it \"work\" before, just using padding and putting the available luma pixels from the bottom-right into the upper-left instead of where they belong? We should at least be able to show an improvement over that to demonstrate that this patch is fixing something.",
      "parentUuid": "471bf271_2f652fcc",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e194849f_b97f0439",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 14,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-11T16:27:05Z",
      "side": 1,
      "message": "I did not work before, because we need to store inter sub 8x8 values and this is what this patch enables. We could test without CHROMA_SUB8X8, but the metrics would include gains from CHROMA_SUB8X8. What I proposed was to do an AWCY run with Video sequences with CFL in intra only. This way, we can establish the gains from going to intra in inter CfL. Results are not available yet, but should be available soon.",
      "parentUuid": "b3b62671_3361f572",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "084b3dd2_caf51903",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 14,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-11T23:22:43Z",
      "side": 1,
      "message": "I\u0027m not sure I understand that proposal, but I\u0027ll take a look at it when you have the numbers.",
      "parentUuid": "e194849f_b97f0439",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88071a21_eae02c94",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 281,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "I agree with you that INLINE is unnecessary here (the compiler will figure out if a function is worth inlining, but in practice here it would probably just do a tail-call optimization to avoid the function call for the two callers).",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c363c49_18d0934c",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 281,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "88071a21_eae02c94",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e649e49_57272d95",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 328,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "This comment says \"what\" but not \"why\", and I\u0027m having a hard time figuring out how you can have a 4x8 block whose mi_row is odd. Also, we can have 4x16 blocks now (but their mi_row shouldn\u0027t be odd, either).\n\nI looked in is_chroma_reference(), but it doesn\u0027t do any offsetting like this. Did you mean set_skip_context()? It does do a (mi_size_high[bsize] \u003d\u003d 1) check, but again I don\u0027t understand why.\n\nMaybe this should be an assertion instead? I\u0027m okay if you want to leave it as is, though.",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff2d1394_60b98caa",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 328,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "\"I looked in is_chroma_reference(), but it doesn\u0027t do any offsetting like this. Did you mean set_skip_context()? It does do a (mi_size_high[bsize] \u003d\u003d 1) check, but again I don\u0027t understand why.\" \nThe logic is shared with) https://aomedia.googlesource.com/aom/+/89cf53ba7a14efadd0e4ee104ef4621b8b493a2e/av1/common/onyxc_int.h#849\n\n\"I\u0027m having a hard time figuring out how you can have a 4x8 block whose mi_row is odd\"\nYou are right, bh\u003d\u003d4 and bw\u003d\u003d4 are useless.",
      "parentUuid": "4e649e49_57272d95",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dad5dc5_3c37fb6f",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 328,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-08T19:59:31Z",
      "side": 1,
      "message": "\u003e The logic is shared with) https://aomedia.googlesource.com/aom/+/89cf53ba7a14efadd0e4ee104ef4621b8b493a2e/av1/common/onyxc_int.h#849\n\nWell, those are related, but different. Given four 4x4 blocks { {A, B}, {C, D} }, is_chroma_reference() is trying to trigger on D only (and also any case \u003e\u003d 8x8) while what you\u0027re trying to do is trigger, separately, on C and D for the rows, and B and D for the columns (and not on any case \u003e\u003d 8x8). So if I were going to point someone somewhere, it\u0027d be at set_skip_context() (also in onyx_int.h), which actually adjusts things in the same cases.\n\nI\u0027d still probably assert that bh \u003d\u003d 4 (and bw \u003d\u003d 4 in the case below), just to guard against people coming up with even crazier partition schemes in the future.",
      "parentUuid": "ff2d1394_60b98caa",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b94cde70_1d1e9b75",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 328,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-11T16:27:05Z",
      "side": 1,
      "message": "I removed the comment about is_chroma_reference.\nsub8x8_adjust_offset in only visible inside cfl.c and is only called when bh\u003d\u003d4 or bw\u003d\u003d4. So asserts would never trigger.",
      "parentUuid": "2dad5dc5_3c37fb6f",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ab9febf_0fec275f",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 328,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-11T23:22:43Z",
      "side": 1,
      "message": "That\u0027s not 100% obvious, since you only check that at least one dimension is 4, and not necessarily the one corresponding to the odd mi coordinate (which is the part that some crazy partitioning scheme elsewhere in the codebase could affect), but it\u0027s not worth arguing about. I\u0027m okay with leaving them out.",
      "parentUuid": "b94cde70_1d1e9b75",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "141c0347_772af01a",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 365,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "This check won\u0027t work for 4x16 and 16x4 partitions, right? Don\u0027t we need to handle those also?",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cc83f58_ce766524",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 365,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "141c0347_772af01a",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "413cb693_95b28a1e",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 388,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "Any reason not to use mi_size_wide[] and mi_size_high[]? This is a CHROMA_SUB8X8 block, so we\u0027re guaranteed CB4X4 is enabled and the mi size is 4x4.",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33d4de61_ac8fad96",
        "filename": "av1/common/cfl.c",
        "patchSetId": 22
      },
      "lineNbr": 388,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "413cb693_95b28a1e",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b72725ab_d8022928",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 1975,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "I\u0027m confused why we\u0027re clearing these flags _after_ the store above. Does that mean that store was unnecessary?",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28c22182_1b29b755",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 1975,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "This is for sub8x8, if it is the last sub8x8 and the mbmi-\u003euv_mode is not UV_CFL_PRED we clear out the stores made in the prior sub8x8 blocks. We had no choice to store before as we did not know the uv_mode of the last block",
      "parentUuid": "b72725ab_d8022928",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "689d41c0_480511bc",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 1975,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-08T19:59:31Z",
      "side": 1,
      "message": "Sorry, still not getting it.\n\nThis block isn\u0027t checking that uv_mode is not UV_CFL_PRED (or if it does, I don\u0027t see where). So it looks like if (cfl-\u003eis_chroma_reference) is set, then 100% of the time the store made above at line 1969 just gets wiped out. If it\u0027s not set, then the continue on line 1945 guarantees we never even get to line 1969? I just can\u0027t figure out what that store is for.\n\nI also don\u0027t see how it knows this is a sub8x8 case. Clearing some debug flags a few extra times is no big deal, but extra calls to cfl_store_block() may be a bigger deal.",
      "parentUuid": "28c22182_1b29b755",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2585a094_a847f90a",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 1975,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-11T16:27:05Z",
      "side": 1,
      "message": "I\u0027ve added these checks, see https://aomedia-review.googlesource.com/c/aom/+/15840/24/av1/decoder/decodeframe.c#1974",
      "parentUuid": "689d41c0_480511bc",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c33ac3_e32b4e0d",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 1975,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-11T23:22:43Z",
      "side": 1,
      "message": "Okay, it\u0027s starting to look a little less fishy, but this was passing with CONFIG_DEBUG and asserts enabled before, right? As I understand it, right now we assert that everything in sub8x8_val is set during cfl_compute_parameters, and we _don\u0027t_ assert that something is unset just before we set it.\n\nSo if we remove a call to cfl_clear_sub8x8_val() in some cases and no asserts trigger before or after, doesn\u0027t that still imply we have some useless stores?",
      "parentUuid": "2585a094_a847f90a",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5761f373_998d764b",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 2113,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "For inter blocks, this only needs to be done if they are not chroma reference blocks, right? Maybe at least add a TODO about not calling this when it\u0027s unnecessary. Or am I missing something that guarantees they\u0027re all necessary stores?",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "420bffa6_cbfbf149",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 2113,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-08T19:07:18Z",
      "side": 1,
      "message": "I\u0027m not sure I understand this comment. We already check if it\u0027s not a chroma reference. From my understanding of CHROMA_SUB8X8, all non chroma references must be stored.",
      "parentUuid": "5761f373_998d764b",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33a01b26_05ce221a",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 2113,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-08T19:59:31Z",
      "side": 1,
      "message": "Yes, sorry, I mis-read what the comment was trying to say and apparently didn\u0027t even notice the if() above it. Please ignore me.",
      "parentUuid": "420bffa6_cbfbf149",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "028decdd_bbe05c69",
        "filename": "av1/decoder/decodeframe.c",
        "patchSetId": 22
      },
      "lineNbr": 2113,
      "author": {
        "id": 7105
      },
      "writtenOn": "2017-09-11T16:27:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "33a01b26_05ce221a",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "facaf976_f69164bc",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 22
      },
      "lineNbr": 10059,
      "author": {
        "id": 5075
      },
      "writtenOn": "2017-09-07T01:36:48Z",
      "side": 1,
      "message": "These two changes seem unrelated to the rest of the patch.",
      "revId": "7e35024930fcf86999738a92c45e3d27416bee6b",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": false
    }
  ]
}