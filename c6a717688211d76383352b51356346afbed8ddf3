{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3c0f743a_91a2d671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-11-21T22:32:42Z",
      "side": 1,
      "message": "Mudassir: I read the CL carefully and fully understand it now. Please see my question marked with \"IMPORTANT\". The other comments summarize my understanding of the code, which you can ignore.",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5d7564d_0af2a6be",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 8
      },
      "lineNbr": 1844,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-11-21T22:32:42Z",
      "side": 1,
      "message": "Because of this early return, `mt_info-\u003epipeline_lpf_mt_with_enc` is true in the rest of this function.",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbbf58f1_2243c295",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 8
      },
      "lineNbr": 1848,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-11-21T22:32:42Z",
      "side": 1,
      "message": "IMPORTANT: Should the `lpf_mt_with_enc_enabled()` function also check this condition (`use_loopfilter`)?",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcf82bae_3203b981",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 8
      },
      "lineNbr": 1848,
      "author": {
        "id": 25857
      },
      "writtenOn": "2023-11-22T12:56:11Z",
      "side": 1,
      "message": "`lf-\u003efilter_level[]` is set to 0 by the function `set_postproc_filter_default_params()` and when `use_loopfilter\u003d0` the function `av1_pick_filter_level()` is not called and `lf-\u003efilter_level[]` remains zero.  Thus, checking `use_loopfilter` may be redundant and checking for non-zero filter levels would be sufficient.",
      "parentUuid": "bbbf58f1_2243c295",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e571bda_215f3126",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 8
      },
      "lineNbr": 1848,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-11-23T03:35:28Z",
      "side": 1,
      "message": "Thanks a lot for the explanation. This is quite complicated. I hope we can find a way to simplify this.",
      "parentUuid": "bcf82bae_3203b981",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bae33d62_96c699eb",
        "filename": "av1/encoder/ethread.c",
        "patchSetId": 8
      },
      "lineNbr": 1861,
      "author": {
        "id": 9545
      },
      "writtenOn": "2023-11-21T22:32:42Z",
      "side": 1,
      "message": "It is a little unfortunate that the `lpf_mt_with_enc_enabled()` call checks `mt_info-\u003epipeline_lpf_mt_with_enc` redundantly (already checked at line 1844). But this is a minor issue.",
      "revId": "c6a717688211d76383352b51356346afbed8ddf3",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c6a717688211d76383352b51356346afbed8ddf3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6a717688211d76383352b51356346afbed8ddf3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "c6a717688211d76383352b51356346afbed8ddf3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}