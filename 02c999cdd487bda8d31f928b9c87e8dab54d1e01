{
  "comments": [
    {
      "key": {
        "uuid": "913bcae2_cf88b41f",
        "filename": "aom/internal/aom_image_internal.h",
        "patchSetId": 14
      },
      "lineNbr": 43,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "How about this for the doc comment instead:\n\n * Allocates memory for aom_metadata struct and sets its type. Optionally \n * allocates storage for the metadata payload and copies the payload data \n * into the aom_metadata struct:\n *   - When sz is \u003e 0 and data is NULL, allocates metadata payload buffer of sz.\n *   - When sz is \u003e 0 and data is non-NULL, a metadata payload buffer of sz \n *     is allocated and sz bytes are copied from data into the payload buffer.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 53
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81b01b3_481a4b04",
        "filename": "aom/internal/aom_image_internal.h",
        "patchSetId": 14
      },
      "lineNbr": 63,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "struct\u0027s or aom_metadata_array",
      "range": {
        "startLine": 63,
        "startChar": 18,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58882931_37caae8e",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 297,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "calloc() makes these lines redundant, no?",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 297,
        "endChar": 21
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb7b1ab6_b981c20f",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 325,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "calloc() makes these lines redundant, no?",
      "range": {
        "startLine": 324,
        "startChar": 2,
        "endLine": 325,
        "endChar": 16
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3537207_bf525276",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 346,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "Just wrap the whole loop in if(arr-\u003ebuffer) and drop the goto.",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 346,
        "endChar": 4
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddfa5217_f0ebe8bc",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 353,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "Should check the img pointer.",
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bd61f68_6ee9dcaf",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 362,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "This might be paranoia, but it\u0027s probably a good idea to add a check on the value of arr-\u003esize here: if it\u0027s anything other than 0 we have a problem.",
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddd44ce2_5e24f029",
        "filename": "aom/src/aom_image.c",
        "patchSetId": 14
      },
      "lineNbr": 381,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "You don\u0027t need a goto here: return -1 from the goto site and return 0 at the bottom of the function.",
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449ab08d_56919b65",
        "filename": "aom_scale/generic/yv12config.c",
        "patchSetId": 14
      },
      "lineNbr": 301,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "The goto isn\u0027t really necessary here, no? Couldn\u0027t the function just return -1 from the goto line, and return 0 at the bottom?",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 301,
        "endChar": 12
      },
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f38cadb_a139cf7d",
        "filename": "aom_scale/generic/yv12config.c",
        "patchSetId": 14
      },
      "lineNbr": 307,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "Check the return value: static analyzers are going to make noise here otherwise.",
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43419edd_c98e090c",
        "filename": "test/metadata_memory_handling_test.cc",
        "patchSetId": 14
      },
      "lineNbr": 82,
      "author": {
        "id": 5215
      },
      "writtenOn": "2019-10-17T18:22:12Z",
      "side": 1,
      "message": "Could use some known failure tests that hit the null pointer checks etc.",
      "revId": "02c999cdd487bda8d31f928b9c87e8dab54d1e01",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}