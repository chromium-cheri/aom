{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d25214bc_71e3684f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9101
      },
      "writtenOn": "2023-06-02T12:38:49Z",
      "side": 1,
      "message": "In the parent version, the masked compound type modes are skipped based on the ratio between best compound type rd so far (`rd`) and `ref_best_rd`. The scaling ratio is controlled through the `prune_comp_type_by_comp_avg` speed feature.\n\nWhen `COMPOUND_AVERAGE` and `COMPOUND_DISTWTD` modes are pruned, `rd` holds `INT64_MAX`. In such a scenario, the evaluation of masked compound type mode is skipped since the ratio is computed between `INT64_MAX` and `ref_best_rd` which seems to be inappropriate. Hence, this CL modifies the code to allow the evaluation when `COMPOUND_AVERAGE` and `COMPOUND_DISTWTD` modes are pruned. This ensures the mode is skipped when at least one compound type has been evaluated.\n\nThis CL is not applicable for Good preset, speed \u003c 2 as `enable_fast_compound_mode_search` sf is disabled. Also, not applicable for the rd path of RT preset as the compound type mode is disabled.\n\nBorg test results of Good preset.\n```\n                 Instruction Count        BD-Rate Loss(%)\ncpu   Resolution   Reduction(%)    avg.psnr   ovr.psnr    ssim\n 2       LOWRES2     -0.201        -0.0169    -0.0208   -0.0165\n 2       MIDRES2     -0.139         0.0157     0.0119    0.0245\n 2        HDRES2     -0.161        -0.0044    -0.0025    0.0230\n 2       Average     -0.167        -0.0019    -0.0038    0.0103\n\n 3       LOWRES2     -0.317        -0.0150    -0.0158   -0.0376\n 3       MIDRES2     -0.283        -0.0248    -0.0169    0.0004\n 3        HDRES2     -0.327        -0.0308    -0.0321   -0.0345\n 3       Average     -0.309        -0.0235    -0.0216   -0.0239\n\n 4       LOWRES2     -0.915        -0.2132    -0.2045   -0.0612\n 4       MIDRES2     -0.611        -0.0687    -0.0747   -0.0014\n 4        HDRES2     -0.572        -0.0478    -0.0314   -0.0463\n 4       Average     -0.700        -0.1099    -0.1035   -0.0363\n\n 5       LOWRES2     -0.953        -0.2545    -0.2640   -0.1211\n 5       MIDRES2     -0.720        -0.1966    -0.2117   -0.1565\n 5        HDRES2     -0.504        -0.0601    -0.0689   -0.0379\n 5       Average     -0.726        -0.1704    -0.1815   -0.1051\n\n 6       LOWRES2     -0.711        -0.2358    -0.2417   -0.0720\n 6       MIDRES2     -0.681        -0.0688    -0.0773   -0.0132\n 6        HDRES2     -0.001         0.0000     0.0000    0.0000\n 6       Average     -0.464        -0.1015    -0.1063   -0.0284\n```\nIn the commit message:\n[-] sign indicates encode time increase\n[+] sign indicates encode time reduction\n\nThe instruction count reduction specified has been measured using command:\n`$ perf stat -e instructions:u ./aomenc`",
      "revId": "2c7e4a842ce1f5d6b9c14a507403b09c46e979de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36600248_333ce802",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5185
      },
      "writtenOn": "2023-06-05T20:56:42Z",
      "side": 1,
      "message": "Looks good - good to get some BDrate gain with this strategy.",
      "parentUuid": "d25214bc_71e3684f",
      "revId": "2c7e4a842ce1f5d6b9c14a507403b09c46e979de",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "2c7e4a842ce1f5d6b9c14a507403b09c46e979de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "2c7e4a842ce1f5d6b9c14a507403b09c46e979de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI or human verified the change"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "2c7e4a842ce1f5d6b9c14a507403b09c46e979de",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}