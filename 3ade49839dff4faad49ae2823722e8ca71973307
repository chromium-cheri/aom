{
  "comments": [
    {
      "key": {
        "uuid": "9aaa8759_d836476c",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 6
      },
      "lineNbr": 2357,
      "author": {
        "id": 5022
      },
      "writtenOn": "2020-01-11T06:19:46Z",
      "side": 1,
      "message": "bubble sort? Is it possible to make this faster?\n\nI assume this function will be called every time a coding mode needs to evaluate its rdcost on txfm/quant? Some saving here might not be small.",
      "range": {
        "startLine": 2357,
        "startChar": 19,
        "endLine": 2357,
        "endChar": 26
      },
      "revId": "3ade49839dff4faad49ae2823722e8ca71973307",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b20a9ef6_ffcc17fb",
        "filename": "av1/encoder/rdopt.c",
        "patchSetId": 6
      },
      "lineNbr": 2357,
      "author": {
        "id": 7525
      },
      "writtenOn": "2020-01-13T18:18:26Z",
      "side": 1,
      "message": "One complication being we need the sorted indices as well as the sorted RDs. An initial trial with a struct containing these two and using qsort on the struct made the encoder even a bit slower. \n\nThis may be because that we need to copy the sorted indices from the struct to txk_map, and also that we are sorting only fewer than 16 elements (many times a lot smaller in the separable model in another commit) so quick sort does not show as much advantage than simple things like bubble sort. \n\nI\u0027ll continue to see if we can get something out of this.",
      "parentUuid": "9aaa8759_d836476c",
      "range": {
        "startLine": 2357,
        "startChar": 19,
        "endLine": 2357,
        "endChar": 26
      },
      "revId": "3ade49839dff4faad49ae2823722e8ca71973307",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0",
      "unresolved": true
    }
  ]
}