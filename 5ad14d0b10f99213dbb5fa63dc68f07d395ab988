{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "375cace8_4c86776e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-11-16T00:46:36Z",
      "side": 1,
      "message": "Maybe a simple test for retrieving a value and sending a bad parameter would be good in this change or a follow up",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cac1997d_7b2f1bed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-11-16T01:54:57Z",
      "side": 1,
      "message": "A bad parameter here means invalid pointer for either \"ctx\" or \"args\"?",
      "parentUuid": "375cace8_4c86776e",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc903ffa_fa51d913",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-11-16T02:04:18Z",
      "side": 1,
      "message": "\u003e A bad parameter here means invalid pointer for either \"ctx\" or \"args\"?\n\nI was thinking a NULL pointer just to add coverage. A bad ctx would be expected to crash, not much we can do about that.",
      "parentUuid": "cac1997d_7b2f1bed",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eec9111_9e6df038",
        "filename": "aom/aomcx.h",
        "patchSetId": 2
      },
      "lineNbr": 1399,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-11-16T00:46:36Z",
      "side": 1,
      "message": "looks like we\u0027ve been pretty inconsistent with AOME / AV1E naming, likely starting from libvpx and vp8/vp9. This one does match the quantizer levels, so might be fine.",
      "range": {
        "startLine": 1399,
        "startChar": 2,
        "endLine": 1399,
        "endChar": 6
      },
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "275f1288_0b560629",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-11-16T00:46:36Z",
      "side": 1,
      "message": "I guess like the quantizer functions, this might not always be correct if we have a show existing frame.",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9550a36f_0d78bea6",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-11-16T01:54:57Z",
      "side": 1,
      "message": "what could happen if we have a show existing frame? the filter level (and also quantizer) would be the one for last frame (instead of the existing frame being shown)?",
      "parentUuid": "275f1288_0b560629",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4392ffa_7c5ed299",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 5020
      },
      "writtenOn": "2021-11-16T02:04:18Z",
      "side": 1,
      "message": "\u003e what could happen if we have a show existing frame? the filter level (and also quantizer) would be the one for last frame (instead of the existing frame being shown)?\n\n\nthat\u0027s what I was thinking it would be. probably not the worst case, but not great if the application plans to take action based on these.",
      "parentUuid": "9550a36f_0d78bea6",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3203d63_78871245",
        "filename": "av1/av1_cx_iface.c",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 5960
      },
      "writtenOn": "2021-11-16T02:12:04Z",
      "side": 1,
      "message": "\u003e \u003e what could happen if we have a show existing frame? the filter level (and also quantizer) would be the one for last frame (instead of the existing frame being shown)?\n\u003e \n\u003e \n\u003e that\u0027s what I was thinking it would be. probably not the worst case, but not great if the application plans to take action based on these.\n\nI guess it depends how LAST_QUANTIZER is interpreted. If a previous frame (which is not the last frame) is shown, the quantizer for that frame isn\u0027t the last one.\n\nIn that case I think I should change the control name to LAST_LOOPFILTER_LEVEL.",
      "parentUuid": "a4392ffa_7c5ed299",
      "revId": "5ad14d0b10f99213dbb5fa63dc68f07d395ab988",
      "serverId": "e5514cf8-2d6e-3e29-adb4-24cd6dde4bf0"
    }
  ]
}